{"version":3,"sources":["src/app/pages/technical/operational-reading-list/operational-reading-list.page.html","src/app/pages/technical/operational-reading-list/operational-reading-list-routing.module.ts","src/app/pages/technical/operational-reading-list/operational-reading-list.module.ts","src/app/pages/technical/operational-reading-list/operational-reading-list.page.scss","src/app/pages/technical/operational-reading-list/operational-reading-list.page.ts","src/app/shared/services/wams/wams.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"homePage('/technical/tabs/tab1')\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"> Operational Reading </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge size=\\\"small\\\" color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\">\\n          {{ notificationService.totalnotificationbyuser }}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\">\\n    <div class=\\\"ion-text-center\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"clickNew()\\\">Update</ion-button>\\n    </div>\\n    <ion-card *ngFor=\\\"let operationalreading of operationalreadings\\\">\\n      <ion-card-header>\\n        <ion-fab horizontal=\\\"end\\\">\\n          <ion-fab-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"clickEdit(operationalreading)\\\">\\n            <ion-icon name=\\\"document-text\\\"></ion-icon>\\n          </ion-fab-button>\\n          <!-- <ion-fab-button\\n            size=\\\"small\\\"\\n            color=\\\"danger\\\"\\n            (click)=\\\"clickRemove(i)\\\"\\n          >\\n            <ion-icon name=\\\"trash\\\"></ion-icon>\\n          </ion-fab-button> -->\\n        </ion-fab>\\n        <ion-card-title>Badge Number<br />{{ operationalreading.badge_number }}</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p>Asset ID: {{ operationalreading.asset_id }}</p>\\n        <p>Created Date: {{ operationalreading.created_date | date:'dd/MM/yyyy' }}</p>\\n        <p>Status: Operational Reading Updated</p>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperationalReadingListPage } from './operational-reading-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OperationalReadingListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OperationalReadingListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OperationalReadingListPageRoutingModule } from './operational-reading-list-routing.module';\n\nimport { OperationalReadingListPage } from './operational-reading-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OperationalReadingListPageRoutingModule\n  ],\n  declarations: [OperationalReadingListPage]\n})\nexport class OperationalReadingListPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9vcGVyYXRpb25hbC1yZWFkaW5nLWxpc3Qvb3BlcmF0aW9uYWwtcmVhZGluZy1saXN0LnBhZ2Uuc2NzcyJ9 */\"","declare var broadcaster: any;\n\nimport { Component, NgZone, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, NavigationExtras, Router } from \"@angular/router\";\nimport {\n  ActionSheetController,\n  AlertController,\n  LoadingController,\n  MenuController,\n  ModalController,\n} from \"@ionic/angular\";\n\nimport { NotificationsService } from \"src/app/shared/services/notifications/notifications.service\";\nimport { OperationalReadingsService } from \"src/app/shared/services/operational-readings/operational-readings.service\";\nimport { AssetRegistrationsService } from \"src/app/shared/services/asset-registrations/asset-registrations.service\";\nimport { AssetsService } from \"src/app/shared/services/assets/assets.service\";\nimport { WamsService } from \"src/app/shared/services/wams/wams.service\";\n\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n@Component({\n  selector: \"app-operational-reading-list\",\n  templateUrl: \"./operational-reading-list.page.html\",\n  styleUrls: [\"./operational-reading-list.page.scss\"],\n})\nexport class OperationalReadingListPage implements OnInit {\n  // List\n  operationalreadings = [];\n\n  // data\n  private logs = new Array<string>();\n  public scanValue: any;\n  badge_no: any;\n  hex_code: any;\n  bBarcode: boolean = false;\n  bRfid: boolean = false;\n\n  private subscription: Subscription;\n\n  constructor(\n    private ngZone: NgZone,\n    private route: ActivatedRoute,\n    private router: Router,\n    public actionSheetController: ActionSheetController,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n    public menu: MenuController,\n    public modalController: ModalController,\n    public notificationService: NotificationsService,\n    private assetregistrationService: AssetRegistrationsService,\n    private operationalreadingService: OperationalReadingsService,\n    private assetsService: AssetsService,\n    private wamsService: WamsService,\n    private authService: AuthService\n  ) { }\n\n  private L(...args: any[]) {\n    let v = args.join(\" \");\n    console.log(v);\n    this.ngZone.run(() => {\n      this.logs.push(v);\n    });\n  }\n\n  ngOnInit() {\n    console.log(\"ngOnInit OperationalReadingListPage\");\n\n    broadcaster._debug = true;\n    // this.onRegister2DBarcodeListener();\n    // this.onRegisterRFIDListener();\n  }\n\n  ngOnDestroy() {\n    console.log(\"ngOnDestroy OperationalReadingListPage\");\n  }\n\n  presentAlert(header: string, message: string) {\n    this.alertController\n      .create({\n        header,\n        message,\n        buttons: [\"OK\"],\n      })\n      .then((loading) => {\n        loading.present();\n      });\n  }\n\n  onRegister2DBarcodeListener() {\n\n    this.loadingController\n      .create({\n        message: \"Please scan the QR code...\",\n        // dismissOnPageChange: true; \n        showBackdrop: true,\n        // enableBackdropDismiss: true;\n      })\n      .then((loading) => {\n\n        loading.present();\n\n        console.log(\"[register onRegister2DBarcodeListener] \");\n        const ev = \"com.scanner.broadcast\";\n        var isGlobal = true;\n\n        var listener = (event) => {\n          console.log(JSON.stringify(event));\n\n          if (event.SCAN_STATE == \"success\") {\n            this.ngZone.run(() => {\n              console.log(\"this.bBarcode = \", this.bBarcode);\n              if (this.bBarcode) {\n                loading.dismiss();\n                broadcaster.removeEventListener(ev, listener);\n                this.updateQrbarcode(event.data);\n              }\n            });\n          }\n        };\n\n        broadcaster.addEventListener(ev, isGlobal, listener);\n      });\n  }\n\n  onRegisterRFIDListener() {\n    this.loadingController\n      .create({\n        message: \"Please scan the RFID tag...\",\n      })\n      .then((loading) => {\n        loading.present();\n\n        console.log(\"[register onRegisterRFIDListener] \");\n        const ev = \"android.intent.action.scanner.RFID\";\n        var isGlobal = true;\n\n        var listener = (event) => {\n          console.log(JSON.stringify(event));\n\n          if (event.SCAN_STATE == \"success\") {\n            this.ngZone.run(() => {\n              console.log(\"this.bRfid = \", this.bRfid);\n              if (this.bRfid) {\n                loading.dismiss();\n                broadcaster.removeEventListener(ev, listener);\n                this.updateRfid(event.data);\n              }\n            });\n          }\n        };\n\n        broadcaster.addEventListener(ev, isGlobal, listener);\n      });\n  }\n\n  getOperationalReading() {\n    console.log(\"this.authService.userID\", this.authService.userID)\n    let objUser = {\n      userid: this.authService.userID\n    }\n    this.operationalreadingService.getDescOrderList(objUser).subscribe(\n      (res) => {\n        console.log(\"this.operationalreadingService res\", res);\n        this.operationalreadings = res;\n        // this.groupByAssetID(res);\n      },\n      (err) => {\n        console.error(\"err\", err);\n      }\n    );\n  }\n\n  groupByAssetID(res) {\n    let group = res.reduce((r, a) => {\n      r[a.asset_id] = [...(r[a.asset_id] || []), a];\n      return r;\n    }, {});\n    this.operationalreadings = group;\n  }\n\n  ionViewDidEnter() {\n    console.log(\"ionViewDidEnter OperationalReadingListPage\");\n\n    this.getOperationalReading();\n  }\n\n  ionViewDidLeave() {\n    console.log(\"ionViewDidLeave OperationalReadingListPage\");\n\n    // console.log(\"broadcaster\", broadcaster);\n    // if (!this.subscription || this.subscription.closed) return;\n    // this.subscription.unsubscribe();\n  }\n\n  homePage(path: string) {\n    this.router.navigate([path]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n\n  async clickNew() {\n    this.bRfid = false;\n    this.bBarcode = false;\n\n    const actionSheet = await this.actionSheetController.create({\n      header: \"Choose method\",\n      buttons: [\n        {\n          text: \"RFID\",\n          icon: \"scan\",\n          handler: () => {\n            this.bRfid = true;\n            this.bBarcode = false;\n            console.log(\"OPL RFID clicked\");\n            this.onRegisterRFIDListener();\n          },\n        },\n        {\n          text: \"QR Code\",\n          icon: \"qr-code\",\n          handler: () => {\n            this.bRfid = false;\n            this.bBarcode = true;\n            console.log(\"OPL QR Code clicked\");\n            this.onRegister2DBarcodeListener();\n          },\n        },\n        {\n          text: \"Badge No.\",\n          icon: \"search\",\n          handler: () => {\n            console.log(\"OPL Badge No. clicked\");\n            this.searchBadgeNo();\n          },\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          icon: \"close\",\n          handler: () => {\n            console.log(\"OPL Cancel clicked\");\n          },\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async searchBadgeNo() {\n    const alert = await this.alertController.create({\n      header: \"Badge No.\",\n      message: \"Enter a badge number to search the asset\",\n      inputs: [\n        {\n          name: \"badge_no\",\n          type: \"text\",\n          placeholder: \"\",\n        },\n      ],\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          handler: () => {\n            console.log(\"Cancel clicked\");\n          },\n        },\n        {\n          text: \"Search\",\n          handler: (data) => {\n            if (data.badge_no) {\n              this.loadingController\n                .create({\n                  message: \"Please wait...\",\n                })\n                .then((loading) => {\n                  loading.present();\n\n                  this.assetsService\n                    .filter(\"badge_no=\" + data.badge_no)\n                    .subscribe(\n                      (res) => {\n                        // if find, go to asset detail list\n                        if (res.length > 0) {\n                          loading.dismiss();\n                          let navigationExtras: NavigationExtras = {\n                            state: {\n                              badge_no: res[0].badge_no,\n                            },\n                          };\n\n                          this.router.navigate(\n                            [\"/technical/operational-reading\"],\n                            navigationExtras\n                          );\n                        }\n                        // else, find the asset in the wams to pump into PIPE's asset table\n                        else {\n                          // get data from wams\n                          this.wamsService\n                            .getAssetBadgeNo(data.badge_no)\n                            .subscribe(\n                              (res) => {\n                                loading.dismiss();\n\n                                if (res.results.length > 0) {\n                                  let navigationExtras: NavigationExtras = {\n                                    state: {\n                                      badge_no: data.badge_no,\n                                    },\n                                  };\n\n                                  this.router.navigate(\n                                    [\"/technical/operational-reading\"],\n                                    navigationExtras\n                                  );\n                                } else {\n                                  this.presentAlert(\n                                    \"Error\",\n                                    \"Sorry, asset is not found in the database.\"\n                                  );\n                                }\n                              },\n                              (err) => {\n                                console.error(\"err\", err);\n                                loading.dismiss();\n\n                                this.presentAlert(\n                                  \"Error\",\n                                  \"Sorry, there is a technical problem going on.\"\n                                );\n                              }\n                            );\n                        }\n                      },\n                      (err) => {\n                        console.log(\"err assetlsService = \", err);\n                        loading.dismiss();\n\n                        this.presentAlert(\n                          \"Error\",\n                          \"Sorry, there is a technical problem going on.\"\n                        );\n                      }\n                    );\n                });\n            } else {\n              this.presentAlert(\n                \"Error\",\n                \"Please enter badge number to find asset detail\"\n              );\n            }\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async clickEdit(operationalreading) {\n    let navigationExtras: NavigationExtras = {\n      state: {\n        operationalreading,\n        process: \"view\",\n      },\n    };\n\n    this.router.navigate([\"/technical/operational-reading\"], navigationExtras);\n  }\n\n  clickRemove(index: number) {\n    this.operationalreadings.splice(index, 1);\n  }\n\n  updateRfid(data) {\n    if (this.bRfid)\n      this.ngZone.run(() => {\n        this.scanValue = data;\n\n        if (this.scanValue != \"\") {\n          this.loadingController\n            .create({\n              message: \"Please wait...\",\n            })\n            .then((loading) => {\n              loading.present();\n\n              this.assetsService.filter(\"hex_code=\" + this.scanValue).subscribe(\n                (res) => {\n                  loading.dismiss();\n                  // if find, go to asset detail list\n                  if (res.length > 0) {\n                    let navigationExtras: NavigationExtras = {\n                      state: {\n                        badge_no: res[0].badge_no,\n                      },\n                    };\n\n                    this.router.navigate(\n                      [\"/technical/operational-reading\"],\n                      navigationExtras\n                    );\n                  }\n                  // else, suggest the user to use QR scanner OR search by badge number\n                  else {\n                    this.presentAlert(\n                      \"Error\",\n                      \"The asset is not found in the database. Please try again by using QR scanner OR search by badge number.\"\n                    );\n                  }\n                },\n                (err) => {\n                  console.log(\"err assetlsService = \", err);\n                  loading.dismiss();\n\n                  this.presentAlert(\n                    \"Error\",\n                    \"Sorry, there is a technical problem going on.\"\n                  );\n                }\n              );\n            });\n        } else {\n          this.presentAlert(\"Error\", \"RFID is invalid. Please try again.\");\n        }\n      });\n  }\n\n  updateQrbarcode(data) {\n    if (this.bBarcode)\n      this.ngZone.run(() => {\n        this.scanValue = data;\n\n        if (this.scanValue != \"\") {\n          this.loadingController\n            .create({\n              message: \"Please wait...\",\n            })\n            .then((loading) => {\n              loading.present();\n\n              this.assetsService.filter(\"badge_no=\" + this.scanValue).subscribe(\n                (res) => {\n                  // if find, go to asset detail list\n                  if (res.length > 0) {\n                    loading.dismiss();\n                    let navigationExtras: NavigationExtras = {\n                      state: {\n                        badge_no: res[0].badge_no,\n                      },\n                    };\n\n                    this.router.navigate(\n                      [\"/technical/operational-reading\"],\n                      navigationExtras\n                    );\n                  }\n                  // else, find the asset in the wams to pump into PIPE's asset table\n                  else {\n                    // get data from wams\n                    this.wamsService.getAssetBadgeNo(this.scanValue).subscribe(\n                      (res) => {\n                        loading.dismiss();\n\n                        if (res.results.length > 0) {\n                          let navigationExtras: NavigationExtras = {\n                            state: {\n                              badge_no: this.scanValue,\n                            },\n                          };\n\n                          this.router.navigate(\n                            [\"/technical/operational-reading\"],\n                            navigationExtras\n                          );\n                        } else {\n                          this.presentAlert(\n                            \"Error\",\n                            \"Sorry, asset is not found in the database.\"\n                          );\n                        }\n                      },\n                      (err) => {\n                        console.error(\"err\", err);\n                        loading.dismiss();\n\n                        this.presentAlert(\n                          \"Error\",\n                          \"Sorry, there is a technical problem going on.\"\n                        );\n                      }\n                    );\n                  }\n                },\n                (err) => {\n                  console.log(\"err assetlsService = \", err);\n                  loading.dismiss();\n\n                  this.presentAlert(\n                    \"Error\",\n                    \"Sorry, there is a technical problem going on.\"\n                  );\n                }\n              );\n            });\n        } else {\n          this.presentAlert(\"Error\", \"QR code is invalid. Please try again.\");\n        }\n      });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WamsService {\n  url: string = environment.baseUrl + \"v1/wams/services/\";\n  // url: string = \"http://127.0.0.1:8000/v1/wams/services/\";\n\n  constructor(private http: HttpClient) { }\n\n  getService(body): Observable<any> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(body.service_name, res);\n      })\n    );\n  }\n\n  getEmployee(): Observable<any> {\n    let body = {\n      service_name: \"getEmployee\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getEmployee\", res);\n      })\n    );\n  }\n\n  getWorkOrderActivity(): Observable<any> {\n    let body = {\n      service_name: \"getWorkOrderActivity\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getWorkOrderActivity\", res);\n      })\n    );\n  }\n\n  getAssetSyncOutbound(): Observable<any> {\n    let body = {\n      service_name: \"getAssetSyncOutbound\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getAssetSyncOutbound\", res);\n      })\n    );\n  }\n\n  getAssetBadgeNo(badge_no): Observable<any> {\n    let body = {\n      service_name: \"getAsset\",\n      badge_number: badge_no,\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getAsset\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~operational-reading-list-operational-reading-list-module~pages-technical-operational-reading~1dffa3e2-es5.js"}