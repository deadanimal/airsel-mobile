{"version":3,"sources":["src/app/pages/login/login.page.html","src/app/pages/login/login-routing.module.ts","src/app/pages/login/login.module.ts","src/app/pages/login/login.page.scss","src/app/pages/login/login.page.ts","src/app/shared/handler/notification/notification.service.ts","src/app/shared/services/users/users.service.ts","src/app/shared/services/wams/wams.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- <ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n    <ion-title></ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<ion-content class=\\\"content-core\\\">\\n  <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\n    <ion-slide>\\n      <ion-img src=\\\"assets/svg/analytics.svg\\\"></ion-img>\\n      <h1 class=\\\"ion-text-center\\\">Track & Monitor</h1>\\n      <p class=\\\"ion-text-center\\\">\\n        Track & monitor your work activity assigned to increase productivity &\\n        efficiency\\n      </p>\\n    </ion-slide>\\n    <ion-slide>\\n      <ion-img src=\\\"assets/svg/efficient.svg\\\"></ion-img>\\n      <h1 class=\\\"ion-text-center\\\">Analyse</h1>\\n      <p class=\\\"ion-text-center\\\">\\n        Examine the data to make a better decision making\\n      </p>\\n    </ion-slide>\\n    <ion-slide>\\n      <ion-img src=\\\"assets/svg/personal_finance.svg\\\"></ion-img>\\n      <h1 class=\\\"ion-text-center\\\">Save Cost</h1>\\n      <p class=\\\"ion-text-center\\\">\\n        Cost to maintain the asset become more reasonable than before\\n      </p>\\n    </ion-slide>\\n  </ion-slides>\\n\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"login()\\\" style=\\\"margin:0px;\\\">\\n    <h3 class=\\\"ion-margin-start\\\">Sign in</h3>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Username</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"username\\\" placeholder=\\\"Your username\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.username\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('username').hasError(validation.type) && (validations_form.get('username').dirty || validations_form.get('username').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\"></ion-input>\\n    </ion-item>\\n    <ion-grid>\\n      <!-- <ion-row>\\n        <ion-col class=\\\"ion-padding-start\\\" size=\\\"6\\\">\\n          <ion-item lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\n            <ion-checkbox [(ngModel)]=\\\"isLogin\\\" [ngModelOptions]=\\\"{standalone: true}\\\" slot=\\\"start\\\"\\n              class=\\\"ion-no-margin\\\"></ion-checkbox>\\n            <ion-label>\\n              <p>Stay Login?</p>\\n            </ion-label>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col class=\\\"ion-text-right\\\" size=\\\"6\\\">\\n          <ion-item lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\n            <ion-label class=\\\"ion-text-right\\\">\\n              <p>\\n                <a (click)=\\\"navigateForgotPage()\\\">Forgot Password </a>\\n              </p>\\n            </ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row> -->\\n    </ion-grid>\\n    <ion-button *ngIf=\\\"!isLoading\\\" shape=\\\"round\\\" expand=\\\"block\\\" color=\\\"primary\\\" mode=\\\"ios\\\"\\n      class=\\\"ion-margin-start ion-margin-end ion-margin-top\\\" [disabled]=\\\"!validations_form.valid\\\" (click)=\\\"login()\\\">\\n      Sign in\\n    </ion-button>\\n    <ion-button disabled *ngIf=\\\"isLoading\\\" type=\\\"submit\\\" shape=\\\"round\\\" expand=\\\"block\\\" color=\\\"primary\\\" mode=\\\"ios\\\"\\n      class=\\\"ion-margin-start ion-margin-end ion-margin-top\\\">\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n    </ion-button>\\n  </form>\\n  <div class=\\\"lower-content\\\" style=\\\"bottom:0;width:100%;text-align:center;\\\">\\n    <div>\\n      <p class=\\\"text-center\\\">(DEV)</p>\\n      <div style=\\\"height:250px;\\\">&nbsp;</div>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".my-checkbox {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\nion-checkbox {\\n  --size: 16px;\\n  margin-left: 0px;\\n  margin-right: 16px;\\n}\\n\\nion-img {\\n  max-width: 70vw;\\n  max-height: 70vh;\\n  margin-bottom: 4vh;\\n  overflow: hidden;\\n}\\n\\nion-slide {\\n  height: 30vh;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 2rem;\\n}\\n\\nh1 {\\n  font-size: 1rem !important;\\n}\\n\\np {\\n  font-size: 0.8rem;\\n}\\n\\nion-content {\\n  --padding-end: 24px;\\n  --padding-start: 24px;\\n}\\n\\n.form {\\n  margin-top: 3rem;\\n  min-width: 250px !important;\\n}\\n\\n.form .validation-errors {\\n  min-height: 25px;\\n}\\n\\n.form .error-message {\\n  color: var(--ion-color-danger);\\n  text-align: right;\\n  font-size: 0.8em;\\n  padding-top: 5px;\\n}\\n\\n.form ion-input {\\n  --color: var(--ion-color-medium);\\n  --placeholder-font-weight: 400;\\n  --background: #fff;\\n  border-radius: 15px;\\n  --padding-start: 15px !important;\\n  margin-top: 0.7rem;\\n}\\n\\n.form ion-item {\\n  --background: transparent;\\n  border-radius: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0RvY3VtZW50cy9HaXRIdWIvYWlyc2VsLW1vYmlsZS9zcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQUE7RUFBQSxhQUFBO0VBQ0EseUJBQUE7VUFBQSxtQkFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURNQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUNIRjs7QURNQTtFQUNFLFlBQUE7RUFDQSw0QkFBQTtFQUFBLDZCQUFBO1VBQUEsc0JBQUE7RUFDQSxnQkFBQTtBQ0hGOztBRE1BO0VBQ0UsMEJBQUE7QUNIRjs7QURLQTtFQUNFLGlCQUFBO0FDRkY7O0FESUE7RUFDRSxtQkFBQTtFQUNBLHFCQUFBO0FDREY7O0FESUE7RUFDRSxnQkFBQTtFQUNBLDJCQUFBO0FDREY7O0FER0U7RUFDRSxnQkFBQTtBQ0RKOztBRElFO0VBQ0UsOEJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSjs7QURLRTtFQUNFLGdDQUFBO0VBQ0EsOEJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtBQ0hKOztBRE1FO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtBQ0pKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWNoZWNrYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuaW9uLWNoZWNrYm94IHtcbiAgLS1zaXplOiAxNnB4O1xuICBtYXJnaW4tbGVmdDogMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG59XG5cbi8vIGlvbi1jb250ZW50IHtcbi8vICAgLS1iYWNrZ3JvdW5kOiB1cmwoLi4vLi4vLi4vYXNzZXRzL2NvdmVyLXBpYy5qcGcpIDAgMC8xMDAlIDEwMCUgbm8tcmVwZWF0O1xuLy8gfVxuXG5pb24taW1nIHtcbiAgbWF4LXdpZHRoOiA3MHZ3O1xuICBtYXgtaGVpZ2h0OiA3MHZoO1xuICBtYXJnaW4tYm90dG9tOiA0dmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbmlvbi1zbGlkZSB7XG4gIGhlaWdodDogMzB2aDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn1cblxuaDEge1xuICBmb250LXNpemU6IDFyZW0gIWltcG9ydGFudDtcbn1cbnAge1xuICBmb250LXNpemU6IDAuOHJlbTtcbn1cbmlvbi1jb250ZW50IHtcbiAgLS1wYWRkaW5nLWVuZDogMjRweDtcbiAgLS1wYWRkaW5nLXN0YXJ0OiAyNHB4O1xufVxuXG4uZm9ybSB7XG4gIG1hcmdpbi10b3A6IDNyZW07XG4gIG1pbi13aWR0aDogMjUwcHggIWltcG9ydGFudDtcblxuICAudmFsaWRhdGlvbi1lcnJvcnMge1xuICAgIG1pbi1oZWlnaHQ6IDI1cHg7XG4gIH1cblxuICAuZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgcGFkZGluZy10b3A6IDVweDtcbiAgfVxuXG4gIGlvbi1pbnB1dCB7XG4gICAgLS1jb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gICAgLS1wbGFjZWhvbGRlci1mb250LXdlaWdodDogNDAwO1xuICAgIC0tYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIC0tcGFkZGluZy1zdGFydDogMTVweCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi10b3A6IDAuN3JlbTtcbiAgfVxuXG4gIGlvbi1pdGVtIHtcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIH1cbn1cblxuLy8gbG93ZXItY29udGVudCB7XG4vLyAgIGZsZXgtZ3JvdzogMTtcbi8vICAgZGlzcGxheTogZmxleDtcbi8vICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbi8vIH0iLCIubXktY2hlY2tib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5pb24tY2hlY2tib3gge1xuICAtLXNpemU6IDE2cHg7XG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbn1cblxuaW9uLWltZyB7XG4gIG1heC13aWR0aDogNzB2dztcbiAgbWF4LWhlaWdodDogNzB2aDtcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5pb24tc2xpZGUge1xuICBoZWlnaHQ6IDMwdmg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5cbmgxIHtcbiAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7XG59XG5cbnAge1xuICBmb250LXNpemU6IDAuOHJlbTtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAtLXBhZGRpbmctZW5kOiAyNHB4O1xuICAtLXBhZGRpbmctc3RhcnQ6IDI0cHg7XG59XG5cbi5mb3JtIHtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbiAgbWluLXdpZHRoOiAyNTBweCAhaW1wb3J0YW50O1xufVxuLmZvcm0gLnZhbGlkYXRpb24tZXJyb3JzIHtcbiAgbWluLWhlaWdodDogMjVweDtcbn1cbi5mb3JtIC5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgcGFkZGluZy10b3A6IDVweDtcbn1cbi5mb3JtIGlvbi1pbnB1dCB7XG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xuICAtLXBsYWNlaG9sZGVyLWZvbnQtd2VpZ2h0OiA0MDA7XG4gIC0tYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgLS1wYWRkaW5nLXN0YXJ0OiAxNXB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDAuN3JlbTtcbn1cbi5mb3JtIGlvbi1pdGVtIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  Validators,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n} from \"@angular/forms\";\nimport {\n  AlertController,\n  MenuController,\n  ToastController,\n} from \"@ionic/angular\";\n\nimport { AuthService } from \"src/app/shared/services/auth/auth.service\";\nimport { EmployeeService } from \"src/app/shared/services/employee/employee.service\";\nimport { NotificationService } from \"src/app/shared/handler/notification/notification.service\";\nimport { UsersService } from \"src/app/shared/services/users/users.service\";\nimport { WamsService } from \"src/app/shared/services/wams/wams.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.page.html\",\n  styleUrls: [\"./login.page.scss\"],\n})\nexport class LoginPage implements OnInit {\n  // Form\n  validations_form: FormGroup;\n  submit_form: FormGroup;\n  validation_messages = {\n    username: [\n      { type: \"required\", message: \"Username is required.\" },\n      { type: \"pattern\", message: \"Please enter a valid username.\" },\n    ],\n    password: [\n      { type: \"required\", message: \"Password is required.\" },\n      { type: \"minlength\", message: \"At least 6 characters long.\" },\n    ],\n  };\n\n  // Loading\n  isLoading: boolean = false;\n\n  // Stay Login\n  isLogin: boolean = false;\n\n  // Slide\n  slideOpts = {\n    initialSlide: 0,\n    // speed: 4000,\n    autoplay: {\n      delay: 4000,\n    },\n  };\n\n  // set a default password for user create user account\n  // use this password to login to obtain token in our system\n  // were not using their input password to login to our system.\n  // their input password will only check at AD\n  // if exist in AD then login to our system using this below password and the input username\n  defaultPassword = 'air$elUs3r'\n\n  constructor(\n    public alertController: AlertController,\n    public menu: MenuController,\n    private router: Router,\n    private authService: AuthService,\n    private employeeService: EmployeeService,\n    private userService: UsersService,\n    private wamsService: WamsService,\n    private formBuilder: FormBuilder,\n    private toastr: NotificationService\n  ) { }\n\n  ngOnInit() {\n    \n    window.addEventListener('keyboardDidShow', function() {\n      document.activeElement.scrollIntoView({behavior: 'smooth'});\n    });\n    // window.location.reload();\n    this.menu.enable(false, \"menuNotification\");\n\n    // \"username\": \"hafez_azman\",\n    // \"password\": \"5e1AIS04556\"\n\n    this.validations_form = this.formBuilder.group({\n      username: new FormControl(\n        // \"mobileapps\",\n        // \"haziq_y\",\n        // \"fadhillah\",\n        // \"shafiq_ab\",\n        // \"mahadzir_nadzri\",\n        // \"mohdhuzaimi\",\n         \"\",\n        // \"rfidapps\",\n        Validators.compose([\n          Validators.required,\n          // Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\"),\n          // Validators.email,\n        ])\n      ),\n      password: new FormControl(\n        // \"M0bile@321\",\n        // \"415F@dhill@h\",\n        // \"*AIS05163\",\n        // \"5e1AIS01780\",\n        // \"AIS03951++\",\n        // \"Ais1868@\",\n         \"\",\n        // \"RF1D@pps!!\",\n        Validators.compose([Validators.minLength(6), Validators.required])\n      ),\n    });\n  }\n\n  login() {\n    this.isLoading = true;\n\n    // to login AD AIR SELANGOR\n    let bodyAD = {\n      service_name: \"getActiveDirectory\",\n      username: this.validations_form.value.username,\n      password: this.validations_form.value.password,\n    };\n\n    // // STEP 1 = \n    ////// to check the credential exist in current database or not\n    // this.authService\n    //   .obtainToken(this.validations_form.value, this.isLogin)\n    //   .subscribe(\n    //     (res) => {\n    //       // Success\n\n    //       console.log(\"resAD = \", res)\n    //       // STEP 2\n    //       this.isLoading = false;\n    //       this.navigateByRole(this.authService.userType);\n    //     },\n    //     (err) => {\n\n    // // Failed\n    // // STEP 3\n\n    // // console.error(\"err\", err);\n\n    /////// to check credential at wams \n    this.wamsService.getService(bodyAD).subscribe(\n      (resAD) => {\n\n        console.log(\"sini 1\")\n        console.log(\"resAD = \", resAD)\n        let staff_id = resAD['staff_no']\n        // to find employee detail in table employee\n\n        ////// check respon status\n        if (resAD.status == \"valid\") {\n\n          ///// get the employee data from the respon based on hr_employee_number\n          // this.employeeService\n          //   .filter(\"hr_employee_number=\" + resAD.staff_no)\n          //   .subscribe(\n          //     (resEmp) => {\n\n          this.employeeService\n            .filter(\"hr_employee_number=\" + staff_id)\n            .subscribe(\n              (resEmp) => {\n\n                console.log(\"sini 2\", resEmp)\n                console.log(\"resEmp[0].uuid\", resEmp[0].uuid)\n                // to create user account in PIPE who AD is valid\n                // STEP 4\n                if (resEmp.length > 0) {\n                  console.log(\"sini 3\")\n\n                  let bodyPIPE = {\n                    username: this.validations_form.value.username,\n                    email: resAD.email ? resAD.email : \"\",\n                    // email: '',\n                    password1: this.defaultPassword,\n                    password2: this.defaultPassword,\n                  };\n\n                  ////// check in table user whether the user exist or not\n                  this.userService.filter('employee_id=' + resEmp[0].uuid).subscribe(\n                    (resUserSer) => {\n                      console.log(\"resUserSer == \", resUserSer)\n                      // console.log(\"resUserSerid == \", resUserSer[0]['id'])\n\n                      //// if user not will create new user \n                      if (resUserSer.length == 0) {\n                        console.log(\"acc not exist\")\n\n                        console.log(\"bodyPIPE = \", bodyPIPE)\n                        this.authService.registerAccount(bodyPIPE).subscribe(\n                          (resPIPE) => {\n\n                            console.log(\"sini 4\", resPIPE)\n\n                            if (resPIPE) {\n\n                              resAD[\"first_name\"] = resAD.name;\n                              resAD[\"status\"] = true;\n                              resAD[\"department\"] = \"\";\n                              resAD[\"employee_id\"] = resEmp[0].uuid;\n                              resAD[\"service_area\"] = resAD.region;\n                              resAD[\"user_type\"] = 'PL';\n\n                              this.userService\n                                .update(resAD, resPIPE.user.pk)\n                                .subscribe((resPIPE) => {\n                                  console.log(\"relogin => \", resPIPE)\n                                  this.retryLogin();\n\n                                });\n                            }\n                          },\n                          (err) => {\n                            console.error(\"err\", err);\n                          }\n                        );\n\n                      } else { ////// if user exist will update the info\n                        console.log(\"acc exist\")\n\n                        resAD[\"first_name\"] = resAD.name;\n                        resAD[\"status\"] = true;\n                        resAD[\"department\"] = \"\";\n                        resAD[\"service_area\"] = resAD.region;\n\n                        console.log(\"resUserSer['id']\", resUserSer[0]['id'])\n                        this.userService\n                          .update(resAD, resUserSer[0]['id'])\n                          .subscribe(\n                            (resPIPE) => {\n                              console.log(\"relogin => \", resPIPE\n                              )\n                              this.retryLogin();\n\n                            });\n                      }\n\n\n                    },\n                    (errUserSer) => {\n                      console.log(\"errUserSer\", errUserSer)\n                    }\n                  )\n                } else {\n                  this.empNotExist()\n                }\n              },\n              (err) => {\n                console.error(\"err\", err);\n              }\n            );\n        }\n        else {\n          this.isLoading = false;\n          this.userNotExist()\n          //   // to create user account in PIPE who AD is invalid\n          //   // STEP 5\n          //   let bodyPIPE = {\n          //     username: this.validations_form.value.username,\n          //     // email: \"\",\n          //     password1: this.validations_form.value.password,\n          //     password2: this.validations_form.value.password,\n          //   };\n          //   this.authService.registerAccount(bodyPIPE).subscribe(\n          //     (resPIPE) => {\n          //       this.retryLogin();\n          //     },\n          //     (err) => {\n          //       console.error(\"err\", err);\n          //     }\n          //   );\n        }\n      },\n      (err) => {\n        console.error(\"err\", err);\n      }\n    );\n\n    // //   },\n    // //   () => {\n    // //     // After\n    // //     // this.toastr.openToastr(\"Welcome back\");\n    // //   }\n    // // );\n\n    /* if (\n      this.loginForm.username == \"technical\" ||\n      this.loginForm.username == \"1\"\n    ) {\n      // technical\n      this.router.navigate([\"/technical/tabs/tab1\"]);\n    } else if (\n      this.loginForm.username == \"operator\" ||\n      this.loginForm.username == \"2\"\n    ) {\n      // operator\n      this.router.navigate([\"/operator/tabs/tab1\"]);\n    } else if (\n      this.loginForm.username == \"store-keeper\" ||\n      this.loginForm.username == \"3\"\n    ) {\n      // inventory\n      this.router.navigate([\"/store-keeper/tabs/tab1\"]);\n    } else if (\n      this.loginForm.username == \"store-supervisor\" ||\n      this.loginForm.username == \"4\"\n    ) {\n      // inventory\n      this.router.navigate([\"/store-supervisor/tabs/tab1\"]);\n    } else {\n      alert(\"wrong user!\");\n    } */\n  }\n\n  retryLogin() {\n\n    this.submit_form = this.formBuilder.group({\n      username: new FormControl(\n        this.validations_form.value.username,\n        // \"\",\n      ),\n      password: new FormControl(\n        this.defaultPassword,\n        // \"\",\n      ),\n    });\n    this.authService\n      .obtainToken(this.submit_form.value, this.isLogin)\n      .subscribe(\n        (res) => {\n          // Success\n          // STEP 2\n          this.isLoading = false;\n          this.navigateByRole(this.authService.userType);\n        },\n        (err) => {\n          // Failed\n          // STEP 3\n          this.isLoading = false;\n        },\n        () => { }\n      );\n  }\n\n  navigateByRole(userType: string) {\n    /* Data Reference From DB */\n\n    // ('OP', 'Operator'),\n    // ('SK', 'Store Keeper'),\n    // ('SS', 'Store Supervisor'),\n    // ('TC', 'Technical Crew')\n    console.log(\"userType = \", userType)\n    if (userType === \"TC\" || userType === \"PL\") {\n      // technical\n      this.router.navigate([\"/technical/tabs/tab1\"]);\n    } else if (userType === \"OP\") {\n      // operator\n      this.router.navigate([\"/operator/tabs/tab1\"]);\n    } else if (userType === \"SK\") {\n      // store keeper\n      this.router.navigate([\"/store-keeper/tabs/tab1\"]);\n    } else if (userType === \"SS\") {\n      // store supervisor\n      this.router.navigate([\"/store-supervisor/tabs/tab1\"]);\n    } else if (userType === \"IV\") {\n      // inventory\n      this.router.navigate([\"/inventory-management/tabs/tab1\"]);\n    } else {\n      this.wrongCredential();\n    }\n  }\n\n  async forgotPassword() {\n    const alert = await this.alertController.create({\n      header: \"Forgot Password\",\n      subHeader: \"Disclaimer\",\n      message:\n        \"Forgot password is for operator ONLY. Meanwhile, for technical, please refer WAMS and for store keeper, please refer ERP\",\n      inputs: [\n        {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Enter email\",\n        },\n      ],\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          handler: () => { },\n        },\n        {\n          text: \"Submit\",\n          handler: () => {\n            this.emailCheck();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async emailCheck() {\n    const alert = await this.alertController.create({\n      header: \"Forgot Password\",\n      message:\n        \"Forgot password success. Please refer your email for further details.\",\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n\n  async wrongCredential() {\n    const alert = await this.alertController.create({\n      header: \"Wrong Credential\",\n      message: \"You have entered wrong credentials. Please try again.\",\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n\n  async empNotExist() {\n    const alert = await this.alertController.create({\n      header: \"Data Not Found\",\n      message: \"Employee not exist. Please try again.\",\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n\n  async userNotExist() {\n    const alert = await this.alertController.create({\n      header: \"Data Not Found\",\n      message: \"Username or password did not match. Please try again.\",\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n\n  navigateForgotPage() {\n    this.router.navigate([\"/forgot\"]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ToastController } from \"@ionic/angular\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationService {\n  constructor(public toastr: ToastController) {}\n\n  async openToastrConnection() {\n    let message = \"No connection\";\n    const toast = await this.toastr.create({\n      message: message,\n      duration: 3000,\n      position: \"top\",\n      color: \"warning\",\n    });\n    toast.present();\n  }\n\n  async openToastrError(statusText: string) {\n    let message = statusText;\n    const toast = await this.toastr.create({\n      message: message,\n      duration: 3000,\n      position: \"top\",\n      color: \"danger\",\n    });\n    toast.present();\n  }\n\n  async openToastr(statusText: string) {\n    let message = statusText;\n    const toast = await this.toastr.create({\n      message: message,\n      duration: 3000,\n      position: \"top\",\n      color: \"primary\",\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { UsersModel } from \"./users.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UsersService {\n  url: string = environment.baseUrl + \"v1/users/\";\n\n  // Data\n  public umodels: UsersModel[] = [];\n  public umodel: UsersModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body: Form): Observable<UsersModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"UsersModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<UsersModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"UsersModel\", res);\n        this.umodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<UsersModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<UsersModel>(urlID).pipe(\n      tap((res: UsersModel) => {\n        console.log(\"UsersModel\", res);\n        this.umodel = res;\n      })\n    );\n  }\n\n  update(body, id: string): Observable<UsersModel> {\n    let urlUpdate = this.url + id + \"/\";\n    console.log(\"urlUpdate\", urlUpdate)\n    return this.http.patch<UsersModel>(urlUpdate, body).pipe(\n      tap((res) => {\n        console.log(\"UsersModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"UsersModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<UsersModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    console.log(\"urlFilter\", urlFilter)\n    return this.http.get<UsersModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"UsersModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WamsService {\n  url: string = environment.baseUrl + \"v1/wams/services/\";\n  // url: string = \"http://127.0.0.1:8000/v1/wams/services/\";\n\n  constructor(private http: HttpClient) { }\n\n  getService(body): Observable<any> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(body.service_name, res);\n      })\n    );\n  }\n\n  getEmployee(): Observable<any> {\n    let body = {\n      service_name: \"getEmployee\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getEmployee\", res);\n      })\n    );\n  }\n\n  getWorkOrderActivity(): Observable<any> {\n    let body = {\n      service_name: \"getWorkOrderActivity\",\n      // from_date: \"2021-08-20T00:00:00+00:00\",\n      // to_date: \"2021-08-20T23:59:59+00:00\"\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getWorkOrderActivity\", res);\n      })\n    );\n  }\n\n  getAssetSyncOutbound(): Observable<any> {\n    let body = {\n      service_name: \"getAssetSyncOutbound\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getAssetSyncOutbound\", res);\n      })\n    );\n  }\n\n  getAssetBadgeNo(badge_no): Observable<any> {\n    let body = {\n      service_name: \"getAsset\",\n      badge_number: badge_no,\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getAsset\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-login-login-module-es5.js"}