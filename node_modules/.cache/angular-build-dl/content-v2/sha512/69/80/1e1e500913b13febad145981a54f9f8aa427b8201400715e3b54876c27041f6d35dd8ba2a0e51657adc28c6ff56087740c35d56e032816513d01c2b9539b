{"version":3,"sources":["src/app/pages/inventory-management/stock-receive/stock-receive.page.html","src/app/pages/inventory-management/stock-receive/stock-receive-routing.module.ts","src/app/pages/inventory-management/stock-receive/stock-receive.module.ts","src/app/pages/inventory-management/stock-receive/stock-receive.page.scss","src/app/pages/inventory-management/stock-receive/stock-receive.page.ts","src/app/shared/services/inventory-grn/inventory-grn.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"homePage('/technical/tabs/tab1')\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"> Stock Receive </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"clickLogout()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge size=\\\"small\\\" color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\">\\n          <!-- {{ notificationService.totalnotificationbyuser }} -->\\n          10\\n        </ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n  <ion-toolbar class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-segment [(ngModel)]=\\\"type\\\">\\n      <ion-segment-button value=\\\"toreceive\\\">\\n        <ion-label style=\\\"font-weight: bold;color:black;\\\">Inventory</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"delivered\\\">\\n        <ion-label style=\\\"font-weight: bold;color:black;\\\">Non Inventory</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n  <div [ngSwitch]=\\\"type\\\">\\n    <div *ngSwitchCase=\\\"'toreceive'\\\">\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-card>\\n            <ion-card-content>\\n              <ion-row>\\n                <ion-col size=\\\"9\\\">\\n                  <p>Purchase Order 3231414</p>\\n                  <p>Expected Date Of Delivery </p>\\n                  <p>on 20 Apr 2021</p>\\n                </ion-col>\\n                <ion-col size=\\\"3\\\" style=\\\"padding-top: 15px;\\\" class=\\\"ion-text-right\\\">\\n                  <ion-button (click)=\\\"scan()\\\">Scan</ion-button>\\n                </ion-col>\\n              </ion-row>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-card>\\n            <ion-card-content>\\n              <ion-row>\\n                <ion-col size=\\\"9\\\">\\n                  <p>Purchase Order 5265461</p>\\n                  <p>Expected Date Of Delivery </p>\\n                  <p>on 20 Apr 2021</p>\\n                </ion-col>\\n                <ion-col size=\\\"3\\\" style=\\\"padding-top: 15px;\\\" class=\\\"ion-text-right\\\">\\n                  <ion-button (click)=\\\"scan()\\\">Scan</ion-button>\\n                </ion-col>\\n              </ion-row>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-card>\\n            <ion-card-content>\\n              <ion-row>\\n                <ion-col size=\\\"9\\\">\\n                  <p>Purchase Order 5265461</p>\\n                  <p>Expected Date Of Delivery </p>\\n                  <p>on 20 Apr 2021</p>\\n                </ion-col>\\n                <ion-col size=\\\"3\\\" style=\\\"padding-top: 15px;\\\" class=\\\"ion-text-right\\\">\\n                  <ion-button (click)=\\\"scan()\\\">Scan</ion-button>\\n                </ion-col>\\n              </ion-row>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"'delivered'\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\" class=\\\"ion-text-center\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Start Date</ion-label>\\n              <ion-datetime displayFormat=\\\"DD-MM-YYYY\\\" placeholder=\\\"Select date\\\"></ion-datetime>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\" class=\\\"ion-text-center\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">End Date</ion-label>\\n              <ion-datetime displayFormat=\\\"DD-MM-YYYY\\\" placeholder=\\\"Select date\\\"></ion-datetime>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-card>\\n        <ion-card-content>\\n          <p>Purchase Order 3231414</p>\\n          <p>Placed on 04 Apr 2020</p>\\n          <p>Paid on 04 Apr 2020</p>\\n          <p>Expected Date of Delivery on 20 Apr 2020</p>\\n          <hr />\\n          <p>CONTACTOR - 32A 240V 4 POLES (SCHNEIDER)</p>\\n          <p>EACT000005</p>\\n          <p>QTY 2</p>\\n          <hr />\\n          <p>CONTACTOR (MAGNETIC) - 3TF54 22-OXL2 132kW (SIEMENS)</p>\\n          <p>EACT010010</p>\\n          <p>QTY 10</p>\\n          <hr />\\n          <p>CONTACTOR (MAGNETIC) - LC1D50M7</p>\\n          <p>EACT010018</p>\\n          <p>QTY 1</p>\\n        </ion-card-content>\\n      </ion-card>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StockReceivePage } from './stock-receive.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StockReceivePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StockReceivePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StockReceivePageRoutingModule } from './stock-receive-routing.module';\n\nimport { StockReceivePage } from './stock-receive.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StockReceivePageRoutingModule\n  ],\n  declarations: [StockReceivePage]\n})\nexport class StockReceivePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ludmVudG9yeS1tYW5hZ2VtZW50L3N0b2NrLXJlY2VpdmUvc3RvY2stcmVjZWl2ZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, NgZone } from \"@angular/core\";\nimport { AlertController, ModalController, ActionSheetController } from \"@ionic/angular\";\nimport { ListItemPage } from '../list-item/list-item.page';\nimport { NavigationExtras, Router } from \"@angular/router\";\nimport { InventoryGrnService } from 'src/app/shared/services/inventory-grn/inventory-grn.service';\nimport {\n  Validators,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-stock-receive',\n  templateUrl: './stock-receive.page.html',\n  styleUrls: ['./stock-receive.page.scss'],\n})\nexport class StockReceivePage implements OnInit {\n  type: string = \"toreceive\";\n  category: string = \"All\";\n  categorys = [\"All\", \"CM\", \"PM\"];\n  items: any[];\n\n  private logs = new Array<string>();\n  public scanValue: any;\n  bBarcode: boolean = false;\n  bRfid: boolean = false;\n\n  // Loading\n  isLoading: boolean = false;\n\n  // lists\n  pendings = [\n    {\n      type: \"CM\",\n      date: \"14 February 2020\",\n      desc: \"Maintenance need to do at Petaling zone near......\",\n      color: \"success\"\n    },\n    {\n      type: \"CM\",\n      date: \"12 February 2020\",\n      desc: \"There have a water leakage at Sepang zone that......\",\n      color: \"warning\"\n    },\n    {\n      type: \"PM\",\n      date: \"13 February 2020\",\n      desc: \"Need to replace components at Kuala Lumpur zone......\",\n      color: \"danger\"\n    },\n    {\n      type: \"PM\",\n      date: \"11 February 2020\",\n      desc: \"Gombak have a water disrupted at 10.00 am......\",\n      color: \"danger\"\n    },\n  ];\n  completeds = [\n    {\n      id: \"WORKORDER-2020-00011\",\n      desc: \"Services have been done at Petaling zone at......\",\n    },\n    {\n      id: \"WORKORDER-2020-00009\",\n      desc: \"Kuala Lumpur service have been completed at......\",\n    },\n    {\n      id: \"WORKORDER-2020-00007\",\n      desc: \"Sepang zone water disruption have been lifted off at......\",\n    },\n    {\n      id: \"WORKORDER-2020-00006\",\n      desc: \"Gombak zone have been completely run so far so good......\",\n    },\n    {\n      id: \"WORKORDER-2020-00005\",\n      desc: \"Hulu Langat area have back to normal......\",\n    },\n  ];\n  approvals = [\n    {\n      dateOfSubmission: \"2020-03-03\",\n      assetName: \"SLUICE VALVE-SLUICE VALVE-GROUND-200-MM\",\n      quantity: \"11\",\n      status: \"approve\",\n    },\n    {\n      dateOfSubmission: \"2020-03-02\",\n      assetName: \"SLUICE VALVE-SCOUR VALVE-GROUND-150-MM\",\n      quantity: \"7\",\n      status: \"reject\",\n    },\n    {\n      dateOfSubmission: \"2020-03-01\",\n      assetName: \"MECHANICAL LEVEL INDICATOR-LEVEL INDICATOR-ABOVE GROUND\",\n      quantity: \"5\",\n      status: \"reject\",\n    },\n    {\n      dateOfSubmission: \"2020-03-01\",\n      assetName: \"MECHANICAL LEVEL INDICATOR-LEVEL INDICATOR-ABOVE GROUND\",\n      quantity: \"5\",\n      status: \"pending\",\n    },\n    {\n      dateOfSubmission: \"2020-03-01\",\n      assetName: \"MECHANICAL LEVEL INDICATOR-LEVEL INDICATOR-ABOVE GROUND\",\n      quantity: \"5\",\n      status: \"pending\",\n    },\n  ];\n\n  // Form\n  stockReceiveForm: FormGroup;\n\n  constructor(\n    public actionSheetController: ActionSheetController,\n    public alertController: AlertController,\n    public modalController: ModalController,\n    private ngZone: NgZone,\n    private router: Router,\n    private inventoryGrnService: InventoryGrnService,\n    // private formBuilder: FormBuilder\n  ) { }\n\n  private L(...args: any[]) {\n    let v = args.join(\" \");\n    console.log(v);\n    this.ngZone.run(() => {\n      this.logs.push(v);\n    });\n  }\n\n  ngOnInit() {\n    this.onRegister2DBarcodeListener();\n    this.onRegisterRFIDListener();\n    this.items = this.pendings;\n\n    // this.stockReceiveForm = this.formBuilder.group({\n\n    // username: new FormControl(\n    //   // \"hafez.azman@airselangor.com\", /// technician \n    //   \"testing\", // inventory\n    //   Validators.compose([\n    //     Validators.required,\n    //     // Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\"),\n    //     // Validators.email,\n    //   ])\n    // ),\n    // password: new FormControl(\n    //   // \"airselrfid@2020\",\n    //   \"PabloEscobar\",\n    //   Validators.compose([Validators.minLength(6), Validators.required])\n    // ),\n    // })\n  }\n\n  updateData(data) {\n    console.log('data = ', data)\n    this.ngZone.run(() => {\n      this.scanValue = data;\n      alert(this.scanValue);\n    });\n\n    // // start update data with service\n    // this.isLoading = true;\n    // this.inventoryGrnService.post(this.stockReceiveForm.value).subscribe(\n    //   (res) => {\n    //     // Success\n    //     this.isLoading = false;\n    //     console.log('res = ', res)\n    //   },\n    //   () => {\n    //     // Failed\n    //     this.isLoading = false;\n    //   },\n    //   () => {\n    //     // After\n    //     // this.toastr.openToastr(\"Welcome back\");\n    //     // this.navigateByRole(this.authService.userType);\n    //   }\n    // );\n    // // end\n  }\n\n  onRegister2DBarcodeListener() {\n    console.log(\"[register onRegister2DBarcodeListener] \");\n    const ev = \"com.scanner.broadcast\";\n    var isGlobal = true;\n\n    var listener = (event) => {\n      console.log(JSON.stringify(event));\n\n      if (event.SCAN_STATE == \"success\") {\n        this.ngZone.run(() => {\n          if (this.bBarcode) {\n            this.updateData(event.data);\n          }\n        });\n      }\n    };\n    // broadcaster.addEventListener(ev, isGlobal, listener);\n  }\n\n  onRegisterRFIDListener() {\n    console.log(\"[register onRegisterRFIDListener] \");\n    const ev = \"android.intent.action.scanner.RFID\";\n    var isGlobal = true;\n\n    var listener = (event) => {\n      console.log(JSON.stringify(event));\n\n      if (event.SCAN_STATE == \"success\") {\n        this.ngZone.run(() => {\n          if (this.bRfid) {\n            this.updateData(event.data);\n          }\n        });\n      }\n    };\n    // broadcaster.addEventListener(ev, isGlobal, listener);\n  }\n\n  async scan() {\n    const actionSheet = await this.actionSheetController.create({\n      header: \"Choose method\",\n      buttons: [\n        {\n          text: \"RFID\",\n          icon: \"scan\",\n          handler: () => {\n            console.log(\"RFID clicked\");\n            this.bBarcode = false;\n            this.bRfid = true;\n          },\n        },\n        {\n          text: \"QR Code\",\n          icon: \"qr-code\",\n          handler: () => {\n            console.log(\"QR Code clicked\");\n            this.bBarcode = true;\n            this.bRfid = false;\n          },\n        },\n        {\n          text: \"Badge No.\",\n          icon: \"search\",\n          handler: () => {\n            console.log(\"Badge No. clicked\");\n            this.searchBadgeNo();\n          },\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          icon: \"close\",\n          handler: () => {\n            console.log(\"Cancel clicked\");\n          },\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async searchBadgeNo() {\n    const alert = await this.alertController.create({\n      header: \"Badge No.\",\n      message: \"Enter a badge number to search the asset\",\n      inputs: [\n        {\n          name: \"badge_no\",\n          type: \"text\",\n          placeholder: \"\",\n        },\n      ],\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          handler: () => {\n            console.log(\"Cancel clicked\");\n          },\n        },\n        {\n          text: \"Search\",\n          handler: (data) => {\n            if (data.badge_no) {\n              let navigationExtras: NavigationExtras = {\n                state: {\n                  badge_no: data.badge_no,\n                },\n              };\n              this.router.navigate([\"/technical/tabs/tab2\"], navigationExtras);\n            } else {\n              this.presentAlert(\n                \"Error\",\n                \"Please enter badge number to find asset detail\"\n              );\n            }\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async presentAlert(header: string, message: string) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { InventoryGrnModel } from './inventory-grn.model';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class InventoryGrnService {\n  url: string = environment.baseUrl + \"v1/inventory-grn/\";\n\n  // Data\n  public ormodels: InventoryGrnModel[] = [];\n  public ormodel: InventoryGrnModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body: Form): Observable<InventoryGrnModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"InventoryGrnModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<InventoryGrnModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"InventoryGrnModel\", res);\n        this.ormodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<InventoryGrnModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<InventoryGrnModel>(urlID).pipe(\n      tap((res: InventoryGrnModel) => {\n        console.log(\"InventoryGrnModel\", res);\n        this.ormodel = res;\n      })\n    );\n  }\n\n  update(id: string, body: Form): Observable<InventoryGrnModel> {\n    return this.http.patch<InventoryGrnModel>(this.url + id + '/', body).pipe(\n      tap((res) => {\n        console.log(\"InventoryGrnModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"InventoryGrnModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<InventoryGrnModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<InventoryGrnModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"InventoryGrnModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~pages-inventory-management-stock-receive-stock-receive-module~stock-receive-stock-receive-module-es5.js"}