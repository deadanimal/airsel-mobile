{"version":3,"sources":["src/app/pages/technical/multiple-retagging/multiple-retagging.page.html","src/app/pages/technical/multiple-retagging/multiple-retagging-routing.module.ts","src/app/pages/technical/multiple-retagging/multiple-retagging.module.ts","src/app/pages/technical/multiple-retagging/multiple-retagging.page.scss","src/app/pages/technical/multiple-retagging/multiple-retagging.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"homePage('/technical/tabs/tab1')\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\">\\n      Multiple Retagging\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\"></ion-badge>\\n        <!--{{ notificationService.totalnotificationbyuser }}-->\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-text-center\\\">\\n    <ion-button color=\\\"primary\\\" (click)=\\\"StartScan()\\\">Start Scan</ion-button>\\n  </div>\\n  <ion-card *ngFor=\\\"let assetdetail of assetdetailmultiple\\\">\\n    <ion-card-header>\\n      <ion-fab horizontal=\\\"end\\\">\\n        <ion-fab-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"clickEdit(assetdetail.badge_no)\\\">\\n          <ion-icon name=\\\"document-text\\\"></ion-icon>\\n        </ion-fab-button>\\n      </ion-fab>\\n      <ion-card-title>Badge No<br />{{ assetdetail.badge_no }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <p>Asset Id: {{ assetdetail.asset_id }}</p>\\n      <p>Asset Type: {{ assetdetail.asset_type }}</p>\\n      <p>Asset Location: {{ assetdetail.asset_location }}</p>\\n      <!-- <p>Asset Location: {{ assetregistration.location_description }}</p> -->\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MultipleRetaggingPage } from './multiple-retagging.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MultipleRetaggingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MultipleRetaggingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MultipleRetaggingPageRoutingModule } from './multiple-retagging-routing.module';\n\nimport { MultipleRetaggingPage } from './multiple-retagging.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MultipleRetaggingPageRoutingModule\n  ],\n  declarations: [MultipleRetaggingPage]\n})\nexport class MultipleRetaggingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9tdWx0aXBsZS1yZXRhZ2dpbmcvbXVsdGlwbGUtcmV0YWdnaW5nLnBhZ2Uuc2NzcyJ9 */\"","declare var broadcaster: any;\n\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from \"@angular/router\";\nimport {\n  AlertController,\n  LoadingController\n} from \"@ionic/angular\";\n\nimport { NotificationsService } from \"src/app/shared/services/notifications/notifications.service\";\nimport { AssetsService } from 'src/app/shared/services/assets/assets.service';\nimport { AssetLocatioSyncService } from 'src/app/shared/services/asset-location-sync/asset-location-sync.service';\n\n@Component({\n  selector: 'app-multiple-retagging',\n  templateUrl: './multiple-retagging.page.html',\n  styleUrls: ['./multiple-retagging.page.scss'],\n})\nexport class MultipleRetaggingPage implements OnInit {\n  assetdetailmultiple = [];\n  feed: any;\n  // feed = {\n  //   badge_no: \"MOTR-0000789\", \n  //   asset_id: '040570271910', \n  //   asset_type: \"MOTOR-SQUIRRL-CAGE\", \n  //   asset_location: \"TAMAN PUNCAK SAUJANA PUMP HOUSE-PUMP-02\"\n  // };\n  type = \"\";\n  public scanValue: any;\n  assetloc: any;\n\n  constructor(\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public notificationService: NotificationsService,\n    private assetsService: AssetsService,\n    private ngZone: NgZone,\n    private assetLocatioSyncService: AssetLocatioSyncService,\n    ) { \n      this.route.queryParams.subscribe((params) => {\n        if (this.router.getCurrentNavigation().extras.state) {\n          this.type = this.router.getCurrentNavigation().extras.state.type;\n        }\n      });\n    }\n\n  ngOnInit() {\n    console.log(\"trytype\", this.type);\n  }\n\n  ionViewWillEnter() {\n    \n  }\n\n  ionViewDidEnter() {\n\n  }\n\n  ionViewWillLeave(){\n\n  }\n\n  ionViewDidLeave(){\n    \n  }\n\n  GetAssetData() {\n    // for (let i = 0; i < 3; i++) {\n    //   this.assetdetailmultiple.push(this.feed)\n    // }\n  }\n\n  clickEdit(badge_no: string) {\n    //console.log(\"try1\", badge_no);\n    this.assetsService.filter(\"badge_no=\" + badge_no).subscribe(\n      (res) => {\n        var assetregistration = res['results'];\n        //console.log(\"try1\", assetregistration[0]);\n        if(assetregistration[0]){\n          var navigationExtras: NavigationExtras = {\n            state: {\n              asset_detail: assetregistration[0]\n            }\n          }\n        }\n        this.router.navigate([\"/technical/asset-detail\"], navigationExtras);\n      },\n      (err) => {\n        console.error(\"err\", err);\n      }\n    )\n  }\n  \n  homePage(path: string) {\n    this.router.navigate([path]);\n  }\n\n  StartScan() {\n    this.assetdetailmultiple = [];\n    if (this.type == \"RFID\") {\n      this.loadingController\n      .create({\n        message: \"Please scan the RFID tag ...\",\n        backdropDismiss:true\n      })\n      .then((loading) => {\n        loading.present();\n        //loading.dismiss();\n        this.GetAssetData();\n        console.log(\"[register onRegister2DBarcodeListener] \");\n        const ev = \"com.scanner.broadcast\";\n        var isGlobal = true;\n\n        var listener = (event) => {\n          console.log(JSON.stringify(event));\n\n          if (event.SCAN_STATE == \"success\") {\n            this.ngZone.run(() => {\n              \n                var data = event.data.trim();\n\n                //this.updateQrbarcode(event.data, asset);\n\n                //loading.dismiss();\n                //broadcaster.removeEventListener(ev, listener);\n                //this.updateQrbarcode(event.data, asset);\n                \n                //var badge = asset.badge_number.trim();\n                // if(data == badge){\n                  \n                // }else{\n                //     this.warningAlert(\n                //       \"Error\",\n                //       \"Batch number not match. Please try again,\"\n                //     );\n                // }\n                \n              \n            });\n          }\n        };\n      });\n    }\n    else if (this.type == \"QRC\") {\n      this.loadingController\n      .create({\n        message: \"Please scan the QR Code ...\",\n        backdropDismiss:true\n      })\n      .then((loading) => {\n        loading.present();\n        this.GetAssetData();\n\n        const ev = \"com.scanner.broadcast\";\n        var isGlobal = true;\n        var listener = (event) => {\n          console.log(JSON.stringify(event));\n\n          if (event.SCAN_STATE == \"success\") {\n            var data = event.data.trim();\n            var addinto = \"true\";\n            this.assetdetailmultiple.forEach(element => {\n              if(data == element.badge_no){\n                addinto = \"false\";\n              }\n            });\n            if (addinto == \"true\"){\n              this.updateQrbarcode(data);\n            }\n\n            // this.ngZone.run(() => {\n            //   broadcaster.removeEventListener(ev, listener);          \n            // });\n          }\n        };\n        broadcaster.addEventListener(ev, isGlobal, listener);\n      })\n    }\n  }\n\n  updateQrbarcode(data) {\n    this.scanValue = data;\n    this.assetsService.filter(\"badge_no=\" + this.scanValue).subscribe(\n      (res) => {\n        if (res['results'].length > 0) {\n          this.assetLocatioSyncService.filter(\"node_id=\" + res['results'][0].node_id).subscribe(\n            (res) => {\n              if (res.length > 0) {\n                this.assetloc = res[0].description\n              }\n            }\n          );\n\n          this.feed = {\n            badge_no: res[0].badge_no, \n            asset_id: res[0].asset_id, \n            asset_type: res[0].asset_type, \n            asset_location: this.assetloc\n          };\n        }\n      }\n    )\n    this.assetdetailmultiple.push(this.feed)\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~multiple-retagging-multiple-retagging-module~pages-technical-multiple-retagging-multiple-ret~6fdd8e80-es5.js"}