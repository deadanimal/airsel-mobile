{"version":3,"sources":["src/app/pages/technical/operational-reading/operational-reading.page.html","src/app/pages/technical/operational-reading/operational-reading-routing.module.ts","src/app/pages/technical/operational-reading/operational-reading.module.ts","src/app/pages/technical/operational-reading/operational-reading.page.scss","src/app/pages/technical/operational-reading/operational-reading.page.ts","src/app/shared/services/asset-registrations/asset-registrations.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"clickBack()\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"></ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge size=\\\"small\\\" color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\">\\n          {{ notificationService.totalnotificationbyuser }}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\">\\n    <h4 class=\\\"ion-text-center ion-padding\\\">Operational Reading</h4>\\n    <ion-list class=\\\"line-input\\\">\\n      <form [formGroup]=\\\"operationalreadingFormGroup\\\">\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Asset Description</ion-label>\\n          <ion-textarea rows=\\\"3\\\" readonly formControlName=\\\"asset_description\\\"></ion-textarea>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Badge Number</ion-label>\\n          <ion-input type=\\\"text\\\" readonly formControlName=\\\"badge_number\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Location</ion-label>\\n          <ion-textarea rows=\\\"3\\\" readonly formControlName=\\\"location\\\"></ion-textarea>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Measurement Type</ion-label>\\n          <!-- <ion-input type=\\\"text\\\" formControlName=\\\"measurent_type\\\"></ion-input> -->\\n\\n          <ion-select formControlName=\\\"measurent_type\\\" *ngIf=\\\"showButton == 'yes'\\\">\\n            <ion-select-option value=\\\"\\\">Please select</ion-select-option>\\n            <ion-select-option *ngFor=\\\"let choice of MeasurementTypeData\\\" [value]=\\\"choice.measurement_type\\\">\\n              {{choice.measurement_type}}\\n            </ion-select-option>\\n          </ion-select>\\n          <ion-input type=\\\"text\\\" *ngIf=\\\"showButton == 'no'\\\" [disabled]=\\\"true\\\" readonly formControlName=\\\"measurent_type\\\">\\n          </ion-input>\\n          <!-- <ion-select formControlName=\\\"measurent_type\\\">\\n            <ion-select-option selected value=\\\"RUNNING-HOUR\\\">RUNNING HOUR</ion-select-option>\\n            <ion-select-option value=\\\"TEMPERATURE-SENSOR\\\">TEMPERATURE SENSOR</ion-select-option>\\n          </ion-select> -->\\n\\n          <!-- \\n            1. Call data from /measurement-types\\n            2. Save @ variable\\n            3. Contoh measurements\\n           -->\\n        </ion-item>\\n\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Reading Date</ion-label>\\n          <ion-datetime *ngIf=\\\"showButton == 'yes'\\\" displayFormat=\\\"YYYY-MM-DD HH:mm:ss\\\"\\n            formControlName=\\\"reading_datetime\\\">\\n          </ion-datetime>\\n          <ion-datetime *ngIf=\\\"showButton == 'no'\\\" [disabled]=\\\"true\\\" displayFormat=\\\"YYYY-MM-DD HH:mm:ss\\\"\\n            formControlName=\\\"reading_datetime\\\">\\n          </ion-datetime>\\n          <!-- <ion-input *ngIf=\\\"showButton == yes\\\" type=\\\"text\\\" [disabled]=\\\"true\\\" readonly\\n            formControlName=\\\"reading_datetime\\\"></ion-input> -->\\n        </ion-item>\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"stacked\\\">Reading Time</ion-label>\\n          <ion-datetime displayFormat=\\\"HH:mm\\\" formControlName=\\\"reading_time\\\"></ion-datetime>\\n        </ion-item> -->\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Current Value</ion-label>\\n          <ion-input *ngIf=\\\"showButton == 'yes'\\\" type=\\\"number\\\" formControlName=\\\"current_value\\\"></ion-input>\\n          <ion-input *ngIf=\\\"showButton == 'no'\\\" type=\\\"number\\\" [disabled]=\\\"true\\\" readonly\\n            formControlName=\\\"current_value\\\">\\n          </ion-input>\\n        </ion-item>\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"stacked\\\">Initial Value</ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"initial_value_flag\\\"></ion-input>\\n        </ion-item> -->\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"stacked\\\">Owning Organization</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"owning_organization\\\"></ion-input>\\n        </ion-item> -->\\n\\n      </form>\\n    </ion-list>\\n\\n    <!-- <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"ion-text-start\\\">Measurement Type</ion-label>\\n      <ion-button (click)=\\\"clickAddMeasurementType()\\\">Add</ion-button>\\n    </ion-item> -->\\n\\n    <ion-card *ngIf=\\\"operationalreadingFormGroup.value.measurement_type\\\">\\n      <ion-card-header>\\n        <ion-fab horizontal=\\\"end\\\">\\n          <ion-fab-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"clickEdit(operationalreadingFormGroup.value)\\\">\\n            <ion-icon name=\\\"create\\\"></ion-icon>\\n          </ion-fab-button>\\n          <!-- <ion-fab-button\\n            size=\\\"small\\\"\\n            color=\\\"danger\\\"\\n            (click)=\\\"clickRemove(i)\\\"\\n          >\\n            <ion-icon name=\\\"trash\\\"></ion-icon>\\n          </ion-fab-button> -->\\n        </ion-fab>\\n        <ion-card-title>Measurement Type <br />\\n          {{ operationalreadingFormGroup.value.measurement_type\\n          }}</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p>\\n          Reading Date/Time: {{\\n          operationalreadingFormGroup.value.reading_date_time | date }}\\n        </p>\\n        <p>\\n          Current Value: {{ operationalreadingFormGroup.value.current_value }}\\n        </p>\\n        <p>\\n          Created Date: {{ operationalreadingFormGroup.value.record_date |\\n          date:'mediumDate' }}\\n        </p>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <div class=\\\"ion-text-center ion-padding\\\">\\n      <ion-button color=\\\"light\\\" (click)=\\\"clickBack()\\\">Back</ion-button>\\n      <ion-button *ngIf=\\\"showButton == 'yes'\\\" color=\\\"primary\\\" (click)=\\\"submit()\\\">Submit</ion-button>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperationalReadingPage } from './operational-reading.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OperationalReadingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OperationalReadingPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { OperationalReadingPageRoutingModule } from \"./operational-reading-routing.module\";\n\nimport { OperationalReadingPage } from \"./operational-reading.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    OperationalReadingPageRoutingModule,\n  ],\n  declarations: [OperationalReadingPage],\n})\nexport class OperationalReadingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9vcGVyYXRpb25hbC1yZWFkaW5nL29wZXJhdGlvbmFsLXJlYWRpbmcucGFnZS5zY3NzIn0= */\"","import { DatePipe, Location } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport {\n  Validators,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router, NavigationExtras } from \"@angular/router\";\nimport {\n  AlertController,\n  MenuController,\n  ModalController,\n} from \"@ionic/angular\";\n// import { BarcodeScanner } from \"@ionic-native/barcode-scanner/ngx\";\nimport { Camera, CameraOptions } from \"@ionic-native/camera/ngx\";\n\nimport { AssetRegistrationsService } from \"src/app/shared/services/asset-registrations/asset-registrations.service\";\nimport { NotificationsService } from \"src/app/shared/services/notifications/notifications.service\";\nimport { OperationalReadingsService } from \"src/app/shared/services/operational-readings/operational-readings.service\";\nimport { MeasurementTypePage } from \"../measurement-type/measurement-type.page\";\nimport { AssetsService } from 'src/app/shared/services/assets/assets.service';\nimport { OwningorganisationsService } from 'src/app/shared/services/owning-organisations/owning-organisations.service';\nimport { AssetLocatioSyncService } from 'src/app/shared/services/asset-location-sync/asset-location-sync.service';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n@Component({\n  selector: \"app-operational-reading\",\n  templateUrl: \"./operational-reading.page.html\",\n  styleUrls: [\"./operational-reading.page.scss\"],\n  providers: [DatePipe],\n})\nexport class OperationalReadingPage implements OnInit {\n\n  OwningOrganisationsList = []\n  OpreationalReading: any\n  MeasurementTypeData: any\n\n  // Forms\n  operationalreadingFormGroup: FormGroup;\n  myDate = new Date();\n\n  measurementtypes = [];\n  process: string;\n  showButton = 'yes'\n\n  constructor(\n    public alertController: AlertController,\n    public formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    public location: Location,\n    public menu: MenuController,\n    public modalController: ModalController,\n    private assetregistrationService: AssetRegistrationsService,\n    public notificationService: NotificationsService,\n    private operationalreadingService: OperationalReadingsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    // private barcodeScanner: BarcodeScanner,\n    private camera: Camera,\n    private assetsService: AssetsService,\n    private owningorganisationsService: OwningorganisationsService,\n    private assetLocatioSyncService: AssetLocatioSyncService,\n    private authService: AuthService\n  ) {\n    this.getOwningOrganisationsList()\n    this.operationalreadingFormGroup = this.formBuilder.group({\n      asset_id: new FormControl(\"\", Validators.required),\n      badge_number: new FormControl({value:\"\",disabled: true}, Validators.required),\n      current_value: new FormControl(\"\"),\n      measurent_identifier: new FormControl(\"\"),\n      measurent_type: new FormControl(\"\"),\n      initial_value_flag: new FormControl(\"\"),\n      owning_organization: new FormControl(\"\"),\n      reading_datetime: new FormControl(\"\"),\n      submitted_datetime: new FormControl(\"\"),\n      created_date: new FormControl(\"\"),\n      modified_date: new FormControl(\"\"),\n      location: new FormControl({value:\"\",disabled: true}),\n      asset_description: new FormControl({value:\"\",disabled: true}),\n      record_by: new FormControl(this.authService.userID),\n      modified_by: new FormControl(this.authService.userID)\n      // record_date: new FormControl(\n      //   this.datePipe.transform(this.myDate, \"yyyy-MM-dd\")\n      // ),\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        // To get process from work request list\n        this.process = this.router.getCurrentNavigation().extras.state.process;\n\n        // To set value based on previous page\n        this.OpreationalReading = this.router.getCurrentNavigation().extras.state.operationalreading\n        console.log(\"OpreationalReading = \", this.OpreationalReading)\n        this.operationalreadingFormGroup.patchValue({\n          ...this.router.getCurrentNavigation().extras.state.operationalreading,\n        });\n\n        if (this.router.getCurrentNavigation().extras.state.badge_no) {\n          this.showButton = 'yes'\n          console.log(\"this.showButton\", this.showButton)\n          let badge_no = this.router.getCurrentNavigation().extras.state\n            .badge_no;\n          this.assetsService\n            .filter(\"badge_no=\" + badge_no)\n            .subscribe((res) => {\n\n              console.log(\"res qweqweewwq\", res['results'][0].description);\n              if (res['results'][0].measurement_types) {\n                console.log(\"measurement_types.length = \", res['results'][0].measurement_types.length)\n                // res[0].measurement_types\n                let header = \"Operational Reading\"\n                let body = \"No Measurement Required From This Asset\"\n                this.emptyMeasuremntType(header, body)\n              }\n              this.MeasurementTypeData = res['results'][0].measurement_types\n              this.getAssetLocationSync(res['results'][0].node_id)\n              this.getAssetExtended(res['results'][0].id)\n              this.operationalreadingFormGroup.patchValue({\n                asset_description: res['results'][0].description,\n                badge_number: res['results'][0].badge_no,\n                asset_id: res['results'][0].asset_id,\n                owning_organization: res['results'][0].owning_access_group,\n              });\n            });\n        } else {\n          this.showButton = 'no'\n          console.log(\"this.showButton\", this.showButton)\n          this.assetsService\n            .filter(\"asset_id=\" + this.OpreationalReading.asset_id)\n            .subscribe((res) => {\n              console.log(\"asset qweqwe = \", res)\n\n              if (res['results'][0].measurement_types) {\n                console.log(\"measurement_types.length = \", res['results'][0].measurement_types.length)\n                let header = \"Operational Reading\"\n                let body = \"No Measurement Required From This Asset\"\n                this.emptyMeasuremntType(header, body)\n                // res[0].measurement_types\n              }\n\n              this.MeasurementTypeData = res['results'][0].measurement_types\n              this.operationalreadingFormGroup.patchValue({\n                asset_description: res['results'][0].description,\n                measurent_type: this.OpreationalReading.measurent_type,\n                reading_datetime: this.OpreationalReading['reading_datetime'],\n                current_value: this.OpreationalReading['current_value'],\n              });\n              console.log(\"this.operationalreadingFormGroup\", this.operationalreadingFormGroup)\n              this.getAssetLocationSync(res['results'][0].node_id)\n              this.getAssetExtended(res['results'][0].id)\n            });\n        }\n      }\n    });\n  }\n\n  ionViewDidEnter() {\n    console.log(\"ionViewDidEnter OperationalReadingPage\");\n  }\n\n  ionViewDidLeave() {\n    console.log(\"ionViewDidLeave OperationalReadingPage\")\n  }\n\n  ngOnInit() {\n    console.log(\"ngOnInit OperationalReadingPage\");\n\n    this.menu.enable(false, \"menuNotification\");\n  }\n\n  ngOnDestroy() {\n    console.log(\"ngOnDestroy OperationalReadingPage\");\n  }\n\n  getAssetLocationSync(node_id) {\n    // setInterval(() => {\n    console.log(\"test node_id => \", node_id)\n    this.assetLocatioSyncService.filter(\"node_id=\" + node_id).subscribe(\n      (res) => {\n        console.log(\"res assetlsService = \", res)\n\n        if (res.length != 0) {\n          this.operationalreadingFormGroup.patchValue({\n            location: res[0].description,\n            // node_id: res[0].node_id,\n            // description: \"NA\",\n            // long_description: res[0].detailed_description\n          })\n        }\n      },\n      (err) => {\n        console.log(\"err assetlsService = \", err)\n      }\n    )\n    // }, 10000);\n  }\n\n  getOwningOrganisationsList() {\n    this.owningorganisationsService.get().subscribe(\n      (res) => {\n        console.log(\"owningorganisationsService = \", res)\n        this.OwningOrganisationsList = res\n      }\n    )\n  }\n\n  getAssetExtended(assetid) {\n\n    this.assetsService\n      .getOneExtended(assetid)\n      .subscribe((res) => {\n\n        console.log(\"res measurementtypes = \", res);\n        this.MeasurementTypeData = res['results'].measurement_types\n      });\n  }\n\n  async presentAlert(header: string, message: string) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n  async emptyMeasuremntType(header, message) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: \"OK\",\n          handler: () => {\n            this.router.navigate([\"/technical/operational-reading-list\"]);\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async submit() {\n    this.operationalreadingService\n      .post(this.operationalreadingFormGroup.value)\n      .subscribe(\n        (res) => {\n          console.log(\"res\", res);\n          this.alertOperationalReading(\n            \"Operational Reading\",\n            // \"Your operational reading have successfully submitted into the system. Thank you.\"\n            \"Your operational reading has been successfully updated into the system.\"\n          );\n        },\n        (err) => {\n          console.error(\"err\", err);\n        }\n      );\n  }\n\n  async alertOperationalReading(header, message) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: \"OK\",\n          handler: () => {\n            this.router.navigate([\"/technical/operational-reading-list\"]);\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async clickAddMeasurementType() {\n    const modal = await this.modalController.create({\n      component: MeasurementTypePage,\n      componentProps: { asset: this.operationalreadingFormGroup.value },\n    });\n    modal.onDidDismiss().then((value) => {\n      this.operationalreadingFormGroup.patchValue({\n        ...value.data,\n        reading_date_time: new Date(value.data.reading_date).toISOString(),\n      });\n    });\n    return await modal.present();\n  }\n\n  clickBack() {\n    this.router.navigate([\"/technical/operational-reading-list\"]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n\n  async clickEdit(measurementtype) {\n    const modal = await this.modalController.create({\n      component: MeasurementTypePage,\n      componentProps: { measurementtype: measurementtype },\n    });\n    return await modal.present();\n  }\n\n  clickRemove(index: number) {\n    this.measurementtypes.splice(index, 1);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetRegistrationsModel } from \"./asset-registrations.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetRegistrationsService {\n  url: string = environment.baseUrl + \"v1/asset-registration/\";\n\n  // Data\n  public amodels: AssetRegistrationsModel[] = [];\n  public amodel: AssetRegistrationsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body): Observable<AssetRegistrationsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetRegistrationsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetRegistrationsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetRegistrationsModel>(urlID).pipe(\n      tap((res: AssetRegistrationsModel) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodel = res;\n      })\n    );\n  }\n\n  update(body): Observable<AssetRegistrationsModel> {\n    return this.http.patch<AssetRegistrationsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetRegistrationsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetRegistrationsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  patch_asset(body): Observable<AssetRegistrationsModel> {\n    let urlPatchAsset = this.url + \"patch_asset/\";\n    return this.http.post<any>(urlPatchAsset, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~pages-technical-operational-reading-operational-reading-module~pages-technical-technical-module-es5.js"}