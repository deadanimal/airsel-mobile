{"version":3,"sources":["./src/app/pages/technical/asset-registration/asset-registration.page.html","./src/app/pages/technical/asset-registration/asset-registration-routing.module.ts","./src/app/pages/technical/asset-registration/asset-registration.module.ts","./src/app/pages/technical/asset-registration/asset-registration.page.scss","./src/app/pages/technical/asset-registration/asset-registration.page.ts","./src/app/shared/services/asset-attribute-column/asset-attribute-column.service.ts","./src/app/shared/services/asset-attribute-predefine/asset-attribute-prodefine.service.ts","./src/app/shared/services/asset-attribute-reference/asset-attribute-reference.service.ts","./src/app/shared/services/asset-groups/asset-groups.service.ts","./src/app/shared/services/maintenance-manager/maintenance-manager.service.ts","./src/app/shared/services/organisations/organisations.service.ts","./src/app/shared/services/regions/regions.service.ts","./src/app/shared/services/state/states.service.ts"],"names":[],"mappings":"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","file":"asset-registration-asset-registration-module-es2015.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"clickBack()\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"> Asset Registration </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge size=\\\"small\\\" color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\">\\n          {{ notificationService.totalnotificationbyuser }}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"segmentModal == 'first'\\\">\\n    <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper [disableRipple]=\\\"isDisableRipple\\\">\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n          <ng-template matStepLabel>Asset Grouping</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Asset Primary Category</ion-label>\\n              <!-- <ion-select placeholder=\\\"Please select\\\" (ionChange)='onChangeAssPrimaryCat($event.target.value)'\\n                formControlName=\\\"asset_primary_category\\\">\\n                <ion-select-option *ngFor=\\\"let primarycategory of primarycategories\\\"\\n                  [value]=\\\"primarycategory.asset_type_code\\\">\\n                  {{ primarycategory.asset_type_description }}</ion-select-option>\\n              </ion-select> -->\\n\\n              <ionic-selectable [items]=\\\"primarycategories\\\" itemValueField=\\\"id\\\" itemTextField=\\\"asset_type_description\\\"\\n                [canSearch]=\\\"true\\\" formControlName=\\\"asset_primary_category\\\" (onChange)=\\\"onChangeAssPrimaryCat($event)\\\">\\n              </ionic-selectable>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.primary_category }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Asset Identity</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"asset_identity\\\" [required]=\\\"true\\\"></ion-input>\\n              <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"identity\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let identity of identities\\\"\\n                  [value]=\\\"identity.id\\\"\\n                  >{{ identity.name }}</ion-select-option\\n                >\\n              </ion-select> -->\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.identity }}</small\\n              > -->\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Sub-category 1</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"sub_category_1\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.sub_category_1 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Sub-category 2</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"sub_category_2\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.sub_category_2 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Model number</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"model_number\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n              >{{ validation_messages.sub_category_2 }}</small\\n            > -->\\n            </ion-item>\\n            <ion-input type=\\\"hidden\\\" formControlName=\\\"bo\\\" [value]=\\\"assetAttrData\\\"></ion-input>\\n          </div>\\n\\n          <!-- <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div> -->\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\n          <ng-template matStepLabel>Asset Categorization</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <div class=\\\"row\\\">\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Asset or Component Type</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"asset_or_component_type\\\" readonly [value]=\\\"assetOrComponent\\\">\\n                </ion-input>\\n                <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"asset_or_component_type\\\">\\n                  <ion-select-option *ngFor=\\\"let assComp of assetOrCompList\\\" [value]=\\\"assComp.id\\\">{{ assComp.name }}\\n                  </ion-select-option>\\n                </ion-select> -->\\n                <!-- <small class=\\\"validation_messages\\\"\\n                  >{{ validation_messages.type_asset }}</small\\n                > -->\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Asset Class/Asset Category</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"asset_class_asset_category\\\" [value]=\\\"assetCategoryData\\\">\\n                </ion-input>\\n                <!-- <small class=\\\"validation_messages\\\"\\n                  >{{ validation_messages.category }}</small\\n                > -->\\n              </ion-item>\\n              <ion-radio-group formControlName=\\\"handed_over_asset_or_procured\\\">\\n                <ion-list-header>\\n                  <ion-label>Hand Over Asset or Procured</ion-label>\\n                </ion-list-header>\\n\\n                <ion-item>\\n                  <ion-label>Asset Handover</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"AH\\\"></ion-radio>\\n                </ion-item>\\n\\n                <ion-item>\\n                  <ion-label>Procured</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"PC\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.acquired_by }}</small\\n              > -->\\n            </div>\\n          </div>\\n\\n          <!-- <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div> -->\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\n        <form [formGroup]=\\\"thirdFormGroup\\\">\\n          <ng-template matStepLabel>Asset Owning</ng-template>\\n          <div class=\\\"line-input\\\">\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Asset Owning Department</ion-label>\\n              <ion-select formControlName=\\\"asset_owning_department\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let assOwnDep of assOwningDepartList\\\" [value]=\\\"assOwnDep.id\\\">\\n                  {{ assOwnDep.name }}\\n                </ion-select-option>\\n              </ion-select>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.sub_category_2 }}</small> \\n              -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Main Operation</ion-label>\\n              <ion-select formControlName=\\\"main_operation\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let mainOpList of mainOperationList\\\" [value]=\\\"mainOpList.id\\\">\\n                  {{ mainOpList.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Region</ion-label>\\n              <ion-select formControlName=\\\"region\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region.id\\\">{{ region.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Operation</ion-label>\\n              <ion-select formControlName=\\\"operation\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let operateList of operationList\\\" [value]=\\\"operateList.id\\\">\\n                  {{ operateList.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-radio-group (click)=\\\"onChangeParent($event.target.value)\\\">\\n              <ion-list-header>\\n                <ion-label>Parent Location</ion-label>\\n              </ion-list-header>\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <div>\\n                      <ion-item>\\n                        <ion-label>New Parent</ion-label>\\n                        <!-- <ion-radio (change)='onChangeParent($event.target.value)' slot=\\\"start\\\" value=\\\"true\\\" checked></ion-radio> -->\\n                        <!-- <ion-radio (ionSelect)=\\\"onChangeParent('true')\\\"></ion-radio> -->\\n                        <ion-radio slot=\\\"start\\\" value=\\\"0\\\" selected=\\\"selected\\\"></ion-radio>\\n                      </ion-item>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col>\\n                    <div>\\n                      <ion-item>\\n                        <ion-label>Existing Parent</ion-label>\\n                        <ion-radio slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\n                      </ion-item>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-radio-group>\\n\\n            <ion-item *ngIf=\\\"parentLocaDiv == 0\\\">\\n              <ion-label position=\\\"stacked\\\">New</ion-label>\\n              <ion-input formControlName=\\\"new_parent_location\\\" type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"parentLocaDiv == 1\\\">\\n              <ion-label position=\\\"stacked\\\">Existing</ion-label>\\n              <ion-select formControlName=\\\"parent_location\\\" type=\\\"text\\\"></ion-select>\\n            </ion-item>\\n\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"fourthFormGroup\\\">\\n        <form [formGroup]=\\\"fourthFormGroup\\\">\\n          <ng-template matStepLabel>Asset Location</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-radio-group (click)=\\\"onChangeAssLoc($event.target.value)\\\">\\n              <ion-list-header>\\n                <ion-label>Asset Location</ion-label>\\n              </ion-list-header>\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label>New</ion-label>\\n                      <!-- <ion-radio (change)='onChangeParent($event.target.value)' slot=\\\"start\\\" value=\\\"true\\\" checked></ion-radio> -->\\n                      <!-- <ion-radio (ionSelect)=\\\"onChangeParent('true')\\\"></ion-radio> -->\\n                      <ion-radio slot=\\\"start\\\" value=\\\"0\\\" checked></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label>Existing</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-radio-group>\\n\\n            <ion-item *ngIf=\\\"assetLocDiv == 1\\\">\\n              <ion-label>Location</ion-label>\\n\\n              <!-- <ionic-selectable [items]=\\\"primarycategories\\\" itemValueField=\\\"id\\\" itemTextField=\\\"asset_type_description\\\"\\n                [canSearch]=\\\"true\\\" formControlName=\\\"asset_primary_category\\\" (onChange)=\\\"onChangeAssPrimaryCat($event)\\\">\\n              </ionic-selectable> -->\\n              <ionic-selectable [items]=\\\"assetLocationData\\\" itemValueField=\\\"uuid\\\" itemTextField=\\\"description\\\"\\n                [canSearch]=\\\"true\\\" formControlName=\\\"parent_location\\\" (ionChange)=\\\"portChange($event)\\\">\\n              </ionic-selectable>\\n            </ion-item>\\n\\n            <div *ngIf=\\\"assetLocDiv == 0\\\">\\n\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Location Description</ion-label>\\n                <ion-input formControlName=\\\"location_description\\\" placeholder=\\\"Location Description\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Building</ion-label>\\n                <ion-input formControlName=\\\"building\\\" placeholder=\\\"Building\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Address 1</ion-label>\\n                <ion-input formControlName=\\\"address_line_1\\\" placeholder=\\\"Address 1\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Address 2</ion-label>\\n                <ion-input formControlName=\\\"address_line_2\\\" placeholder=\\\"Address 2\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Address 3</ion-label>\\n                <ion-input formControlName=\\\"address_line_3\\\" placeholder=\\\"Address 3\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">City</ion-label>\\n                <ion-input formControlName=\\\"city\\\" placeholder=\\\"City\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">State</ion-label>\\n                <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"state\\\">\\n                  <ion-select-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.code\\\">\\n                    {{ state.state }}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Postal Code</ion-label>\\n                <ion-input formControlName=\\\"postal_code\\\" placeholder=\\\"Postal Code\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Country</ion-label>\\n                <ion-input formControlName=\\\"country\\\" placeholder=\\\"Country\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Tag Number</ion-label>\\n                <ion-input formControlName=\\\"tag_number\\\" placeholder=\\\"Tag Number\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Location/Department</ion-label>\\n                <ion-select placeholder=\\\"Please select\\\" style=\\\"max-width: 100% !important;\\\"\\n                  formControlName=\\\"service_area\\\">\\n                  <ion-select-option *ngFor=\\\"let servArea of servAreaList\\\" [value]=\\\"servArea.id\\\">\\n                    {{ servArea.name }}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Location Main Contact</ion-label>\\n                <ion-input formControlName=\\\"location_main_contact\\\" placeholder=\\\"Location Main Contact\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Maintenance Manager</ion-label>\\n                <!-- <ion-input formControlName=\\\"location_asset_maintenance_manager\\\"\\n                  placeholder=\\\"Location/Asset Maintenance Manager\\\"></ion-input> -->\\n                <!-- <ion-select placeholder=\\\"Please select\\\" style=\\\"max-width: 100% !important;\\\"\\n                  formControlName=\\\"location_asset_maintenance_manager\\\">\\n                  <ion-select-option *ngFor=\\\"let maintMan of maintenanceManagerData\\\" [value]=\\\"maintMan.id\\\">\\n                    {{ maintMan.description }}</ion-select-option>\\n                </ion-select> -->\\n                <ionic-selectable [items]=\\\"maintenanceManagerData\\\" style=\\\"max-width: 100% !important;\\\"\\n                  itemValueField=\\\"id\\\" itemTextField=\\\"description\\\" [canSearch]=\\\"true\\\"\\n                  formControlName=\\\"location_asset_maintenance_manager\\\" (ionChange)=\\\"onChangeLocAssMaiMan($event)\\\">\\n                </ionic-selectable>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Planner</ion-label>\\n                <!-- <ion-input formControlName=\\\"maintenance_planner\\\" placeholder=\\\"Planner\\\"></ion-input> -->\\n                <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"maintenance_planner\\\">\\n                  <ion-select-option *ngFor=\\\"let planner of plannerData\\\" [value]=\\\"planner.id\\\">\\n                    {{ planner.description }}</ion-select-option>\\n                </ion-select> -->\\n                <ionic-selectable [items]=\\\"plannerData\\\" style=\\\"max-width: 100% !important;\\\" itemValueField=\\\"id\\\"\\n                  itemTextField=\\\"description\\\" [canSearch]=\\\"true\\\" formControlName=\\\"maintenance_planner\\\"\\n                  (ionChange)=\\\"onChangeLocAssMaiMan($event)\\\">\\n                </ionic-selectable>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">GIS/ESRI ID</ion-label>\\n                <ion-input formControlName=\\\"gis_esri_id\\\" placeholder=\\\"GIS/ESRI ID\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Latitude</ion-label>\\n                <ion-input formControlName=\\\"latitude\\\" placeholder=\\\"Latitude\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Longitude</ion-label>\\n                <ion-input formControlName=\\\"longitude\\\" placeholder=\\\"Longitude\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Asset Critically</ion-label>\\n                <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"asset_criticality\\\">\\n                  <ion-select-option *ngFor=\\\"let assCrit of assCriticalList\\\" [value]=\\\"assCrit.id\\\">\\n                    {{ assCrit.name }}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <!-- <ion-item>\\n                <ion-label position=\\\"stacked\\\">Cost Center</ion-label>\\n                <ion-input formControlName=\\\"cost_center\\\" placeholder=\\\"Cost Center\\\"></ion-input>\\n              </ion-item> -->\\n\\n            </div>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"fifthFormGroup\\\">\\n        <form [formGroup]=\\\"fifthFormGroup\\\">\\n          <ng-template matStepLabel>Asset Detailed Description</ng-template>\\n          <div class=\\\"line-input\\\">\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Size/Capacity 1</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"size_capacity_1\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.size_capacity_1 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Unit Measurement 1</ion-label>\\n              <!-- <ion-input type=\\\"text\\\" formControlName=\\\"size_capacity_1_unit_measurement\\\"></ion-input> -->\\n\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"size_capacity_1_unit_measurement\\\">\\n                <ion-select-option *ngFor=\\\"let meaType1 of measurement_types\\\" [value]=\\\"meaType1.value\\\">\\n                  {{ meaType1.desc }}</ion-select-option>\\n              </ion-select>\\n\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Size/Capacity 2</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"size_capacity_2\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                        >{{ validation_messages.size_capacity_2 }}</small\\n                      > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Unit Measurement 2</ion-label>\\n              <!-- <ion-input type=\\\"text\\\" formControlName=\\\"size_capacity_2_unit_measurement\\\"></ion-input> -->\\n\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"size_capacity_2_unit_measurement\\\">\\n                <ion-select-option *ngFor=\\\"let meaType2 of measurement_types\\\" [value]=\\\"meaType2.value\\\">\\n                  {{ meaType2.desc }}</ion-select-option>\\n              </ion-select>\\n\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Size/Capacity 3</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"size_capacity_3\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.size_capacity_3 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Unit Measurement 3</ion-label>\\n              <!-- <ion-input type=\\\"text\\\" formControlName=\\\"size_capacity_3_unit_measurement\\\"></ion-input> -->\\n\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"size_capacity_3_unit_measurement\\\">\\n                <ion-select-option *ngFor=\\\"let meaType3 of measurement_types\\\" [value]=\\\"meaType3.value\\\">\\n                  {{ meaType3.desc }}</ion-select-option>\\n              </ion-select>\\n\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Detailed Description</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"detailed_description\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Serial Number</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"serial_number\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.serial_number }}</small\\n              > -->\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Tag Number</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"asset_tag_number\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.asset_tag_number }}</small\\n              > -->\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Purchased/Installed/Hand Over Date</ion-label>\\n              <ion-datetime displayFormat=\\\"MMM, DD YYYY\\\" formControlName=\\\"purchase_date_installed_handed_over_date\\\">\\n              </ion-datetime>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.purchase_date_installed_handed_over_date }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Condition Rating </ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"condition_rating\\\">\\n                <ion-select-option *ngFor=\\\"let rating of conditionRatingList\\\" [value]=\\\"rating.id\\\">{{ rating.name }}\\n                </ion-select-option>\\n              </ion-select>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.rating }}</small\\n              > -->\\n            </ion-item>\\n\\n            <!-- <ion-item>\\n              <ion-label position=\\\"stacked\\\">Status</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"status\\\">\\n                <ion-select-option *ngFor=\\\"let status of statuses\\\" [value]=\\\"status.value\\\">{{ status.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item> -->\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Maintenance Specification</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"maintenance_specification\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Measurement Type</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"measurement_type\\\">\\n                <ion-select-option *ngFor=\\\"let measuringtype of measuringtypes\\\" [value]=\\\"measuringtype.value\\\">\\n                  {{ measuringtype.name }}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Warranty</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"warranty\\\">\\n                <ion-select-option *ngFor=\\\"let warranti of warrantyList\\\" [value]=\\\"warranti.id\\\">\\n                  {{ warranti.name }}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Actual warranty period</ion-label>\\n              <ion-input formControlName=\\\"actual_warranty_period\\\" type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Warranty vendor name</ion-label>\\n              <ion-input formControlName=\\\"warranty_vendor_name\\\" type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n          </div>\\n\\n          <!-- <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div> -->\\n        </form>\\n      </mat-step>\\n      <!-- <mat-step [stepControl]=\\\"sixthFormGroup\\\">\\n        <form [formGroup]=\\\"sixthFormGroup\\\">\\n          <ng-template matStepLabel>Asset Warranty Information</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-radio-group formControlName=\\\"is_warranty\\\">\\n              <ion-list-header>\\n                <ion-label>Warranty</ion-label>\\n              </ion-list-header>\\n\\n              <ion-item>\\n                <ion-label>Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"true\\\"></ion-radio>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label>No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"false\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Actual Warranty Period</ion-label>\\n              <ion-input\\n                type=\\\"number\\\"\\n                formControlName=\\\"warranty_period_actual\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Warranty Vendor Name</ion-label>\\n              <ion-select\\n                placeholder=\\\"Please select\\\"\\n                formControlName=\\\"warranty_vendor\\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let organisation of organisations\\\"\\n                  [value]=\\\"organisation.id\\\"\\n                  >{{ organisation.name }}</ion-select-option\\n                >\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n\\n          <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div>\\n        </form>\\n      </mat-step> -->\\n      <!-- <mat-step [stepControl]=\\\"seventhFormGroup\\\">\\n        <form [formGroup]=\\\"seventhFormGroup\\\">\\n          <ng-template matStepLabel>PO Detail</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Purchase Order Vendor Name</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"po_vendor\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let organisation of organisations\\\"\\n                  [value]=\\\"organisation.id\\\"\\n                  >{{ organisation.name }}</ion-select-option\\n                >\\n              </ion-select>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Purchase Cost</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"po_cost\\\"></ion-input>\\n            </ion-item>\\n          </div>\\n        </form>\\n      </mat-step> -->\\n    </mat-vertical-stepper>\\n\\n    <div class=\\\"ion-padding ion-text-center\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"changeSegment('second')\\\">Next</ion-button>\\n      <ion-button color=\\\"light\\\" (click)=\\\"clickBack()\\\">Cancel</ion-button>\\n    </div>\\n  </div>\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"segmentModal == 'second'\\\">\\n    <h4 class=\\\"ion-text-center ion-padding\\\">Asset Technical Spec</h4>\\n\\n    <ion-list class=\\\"ion-padding line-input\\\">\\n      <form [formGroup]=\\\"sixthFormGroup\\\">\\n        <!-- <div *ngIf=\\\"assetAttrColumn != ''\\\"> -->\\n        <ion-item *ngIf=\\\"assetAttrColumn.bottom_water_level == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Bottom water level</ion-label>\\n          <ion-input formControlName=\\\"bottom_water_level\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.brand == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Brand</ion-label>\\n          <ion-input formControlName=\\\"brand\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.capacity_size == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Capacity size</ion-label>\\n          <ion-input formControlName=\\\"capacity_size\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.closing_torque == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Closing torque</ion-label>\\n          <ion-input formControlName=\\\"closing_torque\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.communication_protocol == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Comunication protocol</ion-label>\\n          <ion-input formControlName=\\\"communication_protocol\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.coverage_range == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Coverage range</ion-label>\\n          <ion-input formControlName=\\\"coverage_range\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.dimention == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Dimention</ion-label>\\n          <ion-input formControlName=\\\"dimention\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.environmental_performance == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Environmental Performance</ion-label>\\n          <ion-input formControlName=\\\"environmental_performance\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.flow_rate == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Flow rate</ion-label>\\n          <ion-input formControlName=\\\"flow_rate\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.frequency == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Frequency</ion-label>\\n          <ion-input formControlName=\\\"frequency\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.horse_power == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Horse power</ion-label>\\n          <ion-input formControlName=\\\"horse_power\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.hysteresis == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Hysterasis</ion-label>\\n          <ion-input formControlName=\\\"hysteresis\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.infrastructure_status == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Infrastracture status</ion-label>\\n          <ion-input formControlName=\\\"infrastructure_status\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.infrastructure_status_reason == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Infrastracture status reason</ion-label>\\n          <ion-input formControlName=\\\"infrastructure_status_reason\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.inlet_diameter == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Inlet diameter</ion-label>\\n          <ion-input formControlName=\\\"inlet_diameter\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.installation == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Installation</ion-label>\\n          <ion-input formControlName=\\\"installation\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.insulation == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Insulation</ion-label>\\n          <ion-input formControlName=\\\"insulation\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.legal_name == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Legal name</ion-label>\\n          <ion-input formControlName=\\\"legal_name\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.manufacturer == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Manufacturer</ion-label>\\n          <!-- <ion-input formControlName=\\\"manufacturer\\\" type=\\\"text\\\"></ion-input> -->\\n          <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"manufacturer\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreMan of assetAttPredefineMans\\\" [value]=\\\"assAttPreMan.id\\\">\\n              {{ assAttPreMan.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select> -->\\n\\n          <ionic-selectable [items]=\\\"assetAttPredefineMans\\\" style=\\\"max-width: 100% !important;\\\" itemValueField=\\\"id\\\"\\n            itemTextField=\\\"characteristic_value\\\" [canSearch]=\\\"true\\\" formControlName=\\\"manufacturer\\\"\\n            (ionChange)=\\\"onChangeLocAssMaiMan($event)\\\">\\n          </ionic-selectable>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.manufacturer_year == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Manufacturer year</ion-label>\\n          <ion-input formControlName=\\\"manufacturer_year\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.manufacture_part_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Manufacturer part number</ion-label>\\n          <ion-input formControlName=\\\"manufacture_part_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.material_type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Material type</ion-label>\\n          <ion-input formControlName=\\\"material_type\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.model == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Model</ion-label>\\n          <ion-input formControlName=\\\"model\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.motor_current == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Motor current</ion-label>\\n          <ion-input formControlName=\\\"motor_current\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.no_of_channel == true\\\">\\n          <ion-label required position=\\\"stacked\\\">No of channer</ion-label>\\n          <ion-input formControlName=\\\"no_of_channel\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.no_of_phases == true\\\">\\n          <ion-label required position=\\\"stacked\\\">No of phase</ion-label>\\n          <ion-input formControlName=\\\"no_of_phases\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.no_of_stage == true\\\">\\n          <ion-label required position=\\\"stacked\\\">No of stage</ion-label>\\n          <ion-input formControlName=\\\"no_of_stage\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.opening_torque == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Opening torque</ion-label>\\n          <ion-input formControlName=\\\"opening_torque\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.outlet_diameter == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Outlet diameter</ion-label>\\n          <ion-input formControlName=\\\"outlet_diameter\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.power_supply_type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Power supply type</ion-label>\\n          <ion-input formControlName=\\\"power_supply_type\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.pump_head == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Pump head</ion-label>\\n          <ion-input formControlName=\\\"pump_head\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.revolutions_per_minute == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Revolution per minute</ion-label>\\n          <ion-input formControlName=\\\"revolutions_per_minute\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.source_from == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Source from</ion-label>\\n          <ion-input formControlName=\\\"source_from\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.staging_height == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Staging height</ion-label>\\n          <ion-input formControlName=\\\"staging_height\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.supply_location == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Supply location</ion-label>\\n          <ion-input formControlName=\\\"supply_location\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.temperature == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Temperature</ion-label>\\n          <ion-input formControlName=\\\"temperature\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.top_water_level == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Top water level</ion-label>\\n          <ion-input formControlName=\\\"top_water_level\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Type</ion-label>\\n          <ion-input formControlName=\\\"type\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.valve_diameter == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Value diameter</ion-label>\\n          <ion-input formControlName=\\\"valve_diameter\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.valve_pressure_rating == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Valve pressuring rate</ion-label>\\n          <ion-input formControlName=\\\"valve_pressure_rating\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <!-- <ion-list-header *ngIf=\\\"assetAttrColumn != ''\\\">\\n          <ion-label>Vehicle</ion-label>\\n        </ion-list-header> -->\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_chasis_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">chassis number</ion-label>\\n          <ion-input formControlName=\\\"vehicle_chasis_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_engine_capacity == true\\\">\\n          <ion-label required position=\\\"stacked\\\">engine capacity</ion-label>\\n          <ion-input formControlName=\\\"vehicle_engine_capacity\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_engine_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">engine number</ion-label>\\n          <ion-input formControlName=\\\"vehicle_engine_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_vendor == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance vendor</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_insurance_vendor\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_insurance_vendor\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreInsVen of assetAttPredefinePreInsVens\\\" [value]=\\\"assAttPreInsVen.id\\\">\\n              {{ assAttPreInsVen.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_model == true\\\">\\n          <ion-label required position=\\\"stacked\\\">model</ion-label>\\n          <ion-input formControlName=\\\"vehicle_model\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_auto_windscreen_insured == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance windscreen</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_auto_windscreen_insured\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_cover_note_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance cover no</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_cover_note_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_date_period_from == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance date from</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_date_period_from\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_date_period_to == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance date to</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_date_period_to\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_no_claim_discount == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance claim discount no</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_no_claim_discount\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_policy_type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance policy type</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_insurance_policy_type\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_insurance_policy_type\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreInsPol of assetAttPredefineInsPols\\\" [value]=\\\"assAttPreInsPol.id\\\">\\n              {{ assAttPreInsPol.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_sum_insured == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance sum insured</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_sum_insured\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_total_premium == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance total premium</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_total_premium\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_puspakom_date_inspection == true\\\">\\n          <ion-label required position=\\\"stacked\\\">puspakom date inspection</ion-label>\\n          <ion-input formControlName=\\\"vehicle_puspakom_date_inspection\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_owner_status == true\\\">\\n          <ion-label required position=\\\"stacked\\\">owner status</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_owner_status\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_owner_status\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreVehOwnSta of assetAttPredefineOwnStas\\\"\\n              [value]=\\\"assAttPreVehOwnSta.id\\\">\\n              {{ assAttPreVehOwnSta.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_register_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">register date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_register_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_roadtax_rate == true\\\">\\n          <ion-label required position=\\\"stacked\\\">roadtax rate</ion-label>\\n          <ion-input formControlName=\\\"vehicle_roadtax_rate\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_puspakom_expired_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">puspakom expired date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_puspakom_expired_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_spad_permit_date_period_to == true\\\">\\n          <ion-label required position=\\\"stacked\\\">spad permit date to</ion-label>\\n          <ion-input formControlName=\\\"vehicle_spad_permit_date_period_to\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_roadtax_renew_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">roadtax renew date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_roadtax_renew_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_roadtax_expired_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">roadtax expire date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_roadtax_expired_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_spad_no_license_operator == true\\\">\\n          <ion-label required position=\\\"stacked\\\">spad no license operator</ion-label>\\n          <ion-input formControlName=\\\"vehicle_spad_no_license_operator\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_spad_permit_date_period_from == true\\\">\\n          <ion-label required position=\\\"stacked\\\">spad permit date from</ion-label>\\n          <ion-input formControlName=\\\"vehicle_spad_permit_date_period_from\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_seating_capacity == true\\\">\\n          <ion-label required position=\\\"stacked\\\">seating capacity</ion-label>\\n          <ion-input formControlName=\\\"vehicle_seating_capacity\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_registration_owner == true\\\">\\n          <ion-label required position=\\\"stacked\\\">registration owner</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_registration_owner\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_registration_owner\\\">\\n            <ion-select-option *ngFor=\\\"let assAttregOw of assetAttPredefineRegOwns\\\"\\n              [value]=\\\"assAttregOw.characteristic_value\\\">\\n              {{ assAttregOw.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.voltage == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Voltage</ion-label>\\n          <ion-input formControlName=\\\"voltage\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <!-- </div> -->\\n\\n      </form>\\n    </ion-list>\\n\\n    <div class=\\\"ion-text-center ion-padding\\\">\\n      <ion-button color=\\\"light\\\" (click)=\\\"changeSegment('first')\\\">Back</ion-button>\\n      <ion-button *ngIf=\\\"process != 'view'\\\" (click)=\\\"register()\\\">Submit</ion-button>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AssetRegistrationPage } from './asset-registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssetRegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssetRegistrationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AssetRegistrationPageRoutingModule } from './asset-registration-routing.module';\n\nimport { AssetRegistrationPage } from './asset-registration.page';\nimport { MatStepperModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AssetRegistrationPageRoutingModule,\n    MatInputModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    IonicSelectableModule\n  ],\n  declarations: [AssetRegistrationPage]\n})\nexport class AssetRegistrationPageModule { }\n","export default \".validation_messages {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0RvY3VtZW50cy9HaXRIdWIvYWlyc2VsLW1vYmlsZS9zcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9hc3NldC1yZWdpc3RyYXRpb24vYXNzZXQtcmVnaXN0cmF0aW9uLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvdGVjaG5pY2FsL2Fzc2V0LXJlZ2lzdHJhdGlvbi9hc3NldC1yZWdpc3RyYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGVjaG5pY2FsL2Fzc2V0LXJlZ2lzdHJhdGlvbi9hc3NldC1yZWdpc3RyYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZhbGlkYXRpb25fbWVzc2FnZXMge1xuICBjb2xvcjogcmVkO1xufVxuIiwiLnZhbGlkYXRpb25fbWVzc2FnZXMge1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  Validators,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AlertController, MenuController } from \"@ionic/angular\";\n\nimport { AssetsService } from \"src/app/shared/services/assets/assets.service\";\nimport { AssetGroupsService } from \"src/app/shared/services/asset-groups/asset-groups.service\";\nimport { AssetTypesService } from \"src/app/shared/services/asset-types/asset-types.service\";\nimport { AuthService } from \"src/app/shared/services/auth/auth.service\";\nimport { NotificationsService } from 'src/app/shared/services/notifications/notifications.service';\nimport { OrganisationsService } from \"src/app/shared/services/organisations/organisations.service\";\nimport { RegionsService } from \"src/app/shared/services/regions/regions.service\";\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { AssetRegistrationsService } from 'src/app/shared/services/asset-registrations/asset-registrations.service';\nimport { StatesService } from 'src/app/shared/services/state/states.service';\nimport { AssetAttributeColumnService } from 'src/app/shared/services/asset-attribute-column/asset-attribute-column.service';\nimport { AssetAttributePredefineService } from 'src/app/shared/services/asset-attribute-predefine/asset-attribute-prodefine.service';\nimport { AssetAttributeReferenceService } from 'src/app/shared/services/asset-attribute-reference/asset-attribute-reference.service';\nimport { MaintenanceManagerService } from 'src/app/shared/services/maintenance-manager/maintenance-manager.service';\nimport { PlannerService } from 'src/app/shared/services/planner/planner.service';\nimport { AssetLocatioSyncService } from 'src/app/shared/services/asset-location-sync/asset-location-sync.service';\n\nclass Port {\n  public id: number;\n  public name: string;\n}\n\n@Component({\n  selector: \"app-asset-registration\",\n  templateUrl: \"./asset-registration.page.html\",\n  styleUrls: [\"./asset-registration.page.scss\"],\n})\nexport class AssetRegistrationPage implements OnInit {\n  // Stepper\n  isLinear = false;\n  isDisableRipple = true;\n\n  typeassets = [];\n  regions = [];\n  states = [];\n  organisations = [];\n  departments = [\n    { value: \"CB\", name: \"Customer Billing Services\" },\n    { value: \"DB\", name: \"Distribution\" },\n    { value: \"ED\", name: \"Engineering Services - Distribution\" },\n    { value: \"FL\", name: \"Fleet\" },\n    { value: \"LN\", name: \"Land\" },\n    { value: \"NR\", name: \"NRW\" },\n    { value: \"PN\", name: \"Production Northern\" },\n    { value: \"PS\", name: \"Production Southern\" },\n    { value: \"SD\", name: \"SCADA\" },\n    { value: \"WQ\", name: \"Water Quality\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel1s = [\n    { value: \"CB\", name: \"Customer Billing Services\" },\n    { value: \"DB\", name: \"Distribution\" },\n    { value: \"FL\", name: \"Fleet\" },\n    { value: \"GA\", name: \"General Admin\" },\n    { value: \"PD\", name: \"Production\" },\n    { value: \"SD\", name: \"SCADA\" },\n    { value: \"WQ\", name: \"Water Quality\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel3s = [\n    { value: \"ND\", name: \"NRW - District Metering Zone\" },\n    { value: \"NT\", name: \"NRW - Transmission Network\" },\n    { value: \"NW\", name: \"NRW - Water Balancing Area\" },\n    { value: \"PH\", name: \"Pump House\" },\n    { value: \"RS\", name: \"Reservoir\" },\n    { value: \"VD\", name: \"Valve - Distribution Main\" },\n    { value: \"VT\", name: \"Valve - Trunk Main\" },\n    { value: \"WT\", name: \"Water Treatment Plant\" },\n    { value: \"WL\", name: \"WQ Laboratory Services\" },\n    { value: \"WO\", name: \"WQ - Online Analyzer\" },\n    { value: \"WR\", name: \"WQ - River Monitoring Station\" },\n    { value: \"WS\", name: \"WQ Sampling Station\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel4s = [\n    { value: \"NR\", name: \"NRW\" },\n    { value: \"PH\", name: \"Pump House\" },\n    { value: \"RS\", name: \"Reservoir\" },\n    { value: \"TP\", name: \"Treatment Plant Name\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel5s = [\n    { value: \"AS\", name: \"Aeration System\" },\n    { value: \"BR\", name: \"Balancing Reservoir\" },\n    { value: \"BD\", name: \"Buildings\" },\n    { value: \"CD\", name: \"Chemical Dosing\" },\n    { value: \"CS\", name: \"Coagulation System\" },\n    { value: \"DT\", name: \"Draw of Tower\" },\n    { value: \"ES\", name: \"Earthing System\" },\n    { value: \"EP\", name: \"Electrical Panel\" },\n    { value: \"ES\", name: \"Electrical System\" },\n    { value: \"FS\", name: \"Filtration Process\" },\n    { value: \"FC\", name: \"Flocculation\" },\n    { value: \"OR\", name: \"Off River Storage Reservoir\" },\n    { value: \"RW\", name: \"Raw Water Process\" },\n    { value: \"SP\", name: \"Sedimentation Process\" },\n    { value: \"SS\", name: \"Solar System\" },\n    { value: \"ST\", name: \"Sludge Treament Process\" },\n    { value: \"SW\", name: \"Settled Water Process\" },\n    { value: \"TI\", name: \"Tangki Imbang 3MG\" },\n    { value: \"TO\", name: \"Tangki Imbangan 4MG (OLD)\" },\n    { value: \"TN\", name: \"Tangki Imbangan 4MG (NEW)\" },\n    { value: \"TS\", name: \"Telemetry System\" },\n    { value: \"TP\", name: \"Treatment Process\" },\n    { value: \"TW\", name: \"Treated Water Process\" },\n    { value: \"WA\", name: \"Water Analysis\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel6s = [\n    { value: \"AP\", name: \"Actiflo Process\" },\n    { value: \"AC\", name: \"Activated Carbon Process\" },\n    { value: \"AS\", name: \"Aeration System\" },\n    { value: \"ES\", name: \"Alum Process\" },\n    { value: \"BP\", name: \"Backwash Process\" },\n    { value: \"BR\", name: \"Balancing Reservoir\" },\n    { value: \"BO\", name: \"Boat House\" },\n    { value: \"BU\", name: \"Buildings\" },\n    { value: \"CD\", name: \"Chemical Dosing\" },\n    { value: \"CM\", name: \"Chemical Process\" },\n    { value: \"CP\", name: \"Chlorination Process\" },\n    { value: \"CO\", name: \"Coagulation Process\" },\n    { value: \"CR\", name: \"Chemical Room\" },\n    { value: \"CC\", name: \"Control Centre\" },\n    { value: \"CR\", name: \"Control Room\" },\n    { value: \"DP\", name: \"Data Process\" },\n    { value: \"DS\", name: \"Distrafication\" },\n    { value: \"DO\", name: \"Draw Off Process\" },\n    { value: \"ES\", name: \"Earthing System\" },\n    { value: \"EL\", name: \"Electrical System\" },\n    { value: \"FS\", name: \"Facilities System\" },\n    { value: \"FP\", name: \"Filtration Process\" },\n    { value: \"FW\", name: \"Filtered Water Sampling\" },\n    { value: \"FO\", name: \"Flocculation Process\" },\n    { value: \"FL\", name: \"Fluoride Process\" },\n    { value: \"LB\", name: \"Laboratory\" },\n    { value: \"LP\", name: \"Lime Process\" },\n    { value: \"OA\", name: \"Online Analyzer\" },\n    { value: \"PR\", name: \"Polymer (Residual) Dosing\" },\n    { value: \"PA\", name: \"Poly Aluminium Chloride Process\" },\n    { value: \"PP\", name: \"Polymer Process\" },\n    { value: \"PS\", name: \"Power Supply\" },\n    { value: \"RM\", name: \"Rapid Mixing\" },\n    { value: \"RE\", name: \"Residual Emergency Lagoon\" },\n    { value: \"RT\", name: \"Residual Thickened Pumping Station\" },\n    { value: \"RI\", name: \"Raw Water Intake System\" },\n    { value: \"RS\", name: \"Raw Water Pumping System\" },\n    { value: \"RP\", name: \"Raw Water Process\" },\n    { value: \"RE\", name: \"Raw Water Pipeline\" },\n    { value: \"RV\", name: \"Reservoir\" },\n    { value: \"SS\", name: \"SCADA System\" },\n    { value: \"SD\", name: \"Sedimentation Process\" },\n    { value: \"SL\", name: \"Settled Water Process\" },\n    { value: \"SS\", name: \"Settled Water Sampling\" },\n    { value: \"SW\", name: \"Settled Water Pumping System\" },\n    { value: \"SB\", name: \"Sludge Balancing\" },\n    { value: \"ST\", name: \"Sludge Treament Process\" },\n    { value: \"SQ\", name: \"Solid Liquid Separation\" },\n    { value: \"SA\", name: \"Solar System\" },\n    { value: \"SI\", name: \"Sodium Alumino Silicate Process\" },\n    { value: \"SO\", name: \"Soda Ash Process\" },\n    { value: \"TA\", name: \"Tangki Sedit SYABAS\" },\n    { value: \"TE\", name: \"Telemetry System\" },\n    { value: \"TP\", name: \"Treated Water Process\" },\n    { value: \"TS\", name: \"Treated Water Sampling\" },\n    { value: \"TL\", name: \"Treated Water Pipeline\" },\n    { value: \"TW\", name: \"Treated Water Pumping System\" },\n    { value: \"TT\", name: \"Treatment Process\" },\n    { value: \"WA\", name: \"Water Analysis\" },\n    { value: \"WO\", name: \"Workshop\" },\n    { value: \"WT\", name: \"Water Transfer\" },\n    { value: \"WP\", name: \"Wash Water Process\" },\n    { value: \"WR\", name: \"Wash Water Recovery\" },\n    { value: \"WS\", name: \"Wash Water System\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n\n  categories = [];\n  identities = [];\n  primarycategories = [];\n  groupsubcategory1s = [];\n  groupsubcategory2s = [];\n  statuses = [{ value: \"NA\", name: \"Not Available\" }];\n  measuringtypes = [\n    { value: \"FM\", name: \"Flow Meter Readings\" },\n    { value: \"TP\", name: \"Temperature\" },\n    { value: \"OT\", name: \"Other\" },\n  ];\n\n  measurement_types = [\n    { desc: 'Bar', value: 'bar' },\n    { desc: 'Celsius', value: '°C' },\n    { desc: 'Hour', value: 'hr' },\n    { desc: 'Kilogram', value: 'kg' },\n    { desc: 'Kilometer', value: 'km' },\n    { desc: 'Kilowatt', value: 'kW' },\n    { desc: 'Megapascal Pressure Unit', value: 'Mpa' },\n    { desc: 'Meter', value: 'm' },\n    { desc: 'Meter per second', value: 'm/s' },\n    { desc: 'Milimetre', value: 'mm' },\n    { desc: 'Millions of Gallons per Day', value: 'MGD' },\n    { desc: 'Millions of liters per day ', value: 'MLD' },\n    { desc: 'Miligram', value: 'mg' },\n    { desc: 'Revolutions per minute', value: 'RPM' },\n    { desc: 'Horsepower', value: 'hp' },\n    { desc: 'Voltage', value: 'V' },\n    { desc: 'Cubic meter', value: 'm³' },\n    { desc: 'Cubic meter per hour', value: 'm³/hr' },\n    { desc: 'Decibels woth reference to one milliwatt', value: 'dBm' },\n    { desc: 'Liter per second', value: 'l/s' },\n    { desc: 'Megametre per second', value: 'mm/s' },\n    { desc: 'Millihenrys', value: 'mH' },\n    { desc: 'Millivolts', value: 'mV' },\n    { desc: 'pH', value: 'pH' },\n    { desc: 'Percent', value: '%' },\n    { desc: 'Watt', value: 'W' },\n    { desc: 'Voltage direct current', value: 'VDC' },\n    { desc: 'nanometers', value: 'nm' },\n    { desc: 'Milliamperes', value: 'mA' },\n    { desc: 'Pound per square inch', value: 'psi' },\n    { desc: \"Ampere\", value: 'amp' },\n    { desc: \"Kilovolt Ampere\", value: 'kva' },\n    { desc: \"Hertz\", value: 'hz' },\n    { desc: \"Ampere\", value: 'amp' },\n    { desc: \"Ampere\", value: 'amp' },\n    { desc: \"Ampere\", value: 'amp' },\n  ]\n\n  // asset attribute // \n  assetAttrColumn: any\n  assetAttrData: any\n  assetCategoryData: any\n  assetAttPredefine: any\n  assetAttPredefineMans: any = [] // manufacturer\n  assetAttPredefinePreInsVens: any = [] // vehicle_insurance_vendor\n  assetAttPredefineInsPols: any = [] // vehicle_insurance_policy_type\n  assetAttPredefineOwnStas: any = [] //vehicle_owner_status\n  assetAttPredefineRegOwns: any = [] // vehicle_registration_owner\n\n  // hide show div\n  parentLocaDiv = 0;\n  assetLocDiv = 0;\n  port: Port;\n  segmentModal = \"first\";\n  process = \"create\";\n\n  // state data\n  stateList = [\n    { id: 'JHR', name: 'Johor' },\n    { id: 'KDH', name: 'Kedah' },\n    { id: 'KEL', name: 'Kelantan' },\n    { id: 'KUL', name: 'Kuala Lumpur' },\n    { id: 'LBN', name: 'Labuan' },\n    { id: 'MLK', name: 'Melaka' },\n    { id: 'NSN', name: 'Negeri Sembilan' },\n    { id: 'PHG', name: 'Pahang' },\n    { id: 'PJY', name: 'Putrajaya' },\n    { id: 'PLS', name: 'Perlis' },\n    { id: 'PNG', name: 'Penang' },\n    { id: 'PRK', name: 'Perak' },\n    { id: 'SBH', name: 'Sabah' },\n    { id: 'SGR', name: 'Selangor' },\n    { id: 'SWK', name: 'Serawak' },\n    { id: 'TRG', name: 'Terengganu' },\n  ];\n\n  // service area\n  servAreaList = [\n    { id: 'GOMBAK', name: 'GOMBAK' },\n    { id: 'HEADQUARTERS', name: 'HEADQUARTERS' },\n    { id: 'HULU-LANGAT', name: 'HULU LANGAT' },\n    { id: 'HULU-SELANGOR', name: 'HULU SELANGOR' },\n    { id: 'KLANG', name: 'KLANG' },\n    { id: 'KUALA-LANGAT', name: 'KUALA LANGAT' },\n    { id: 'KUALA-LUMPUR', name: 'KUALA LUMPUR' },\n    { id: 'KUALA-SELANGOR', name: 'KUALA SELANGOR' },\n    { id: 'NORTH', name: 'NORTH' },\n    { id: 'PETALING', name: 'PETALING' },\n    { id: 'SABAK-BERNAM', name: 'SABAK BERNAM' },\n    { id: 'SEPANG', name: 'SEPANG' },\n    { id: 'SOUTH', name: 'SOUTH' },\n  ];\n\n  // asset criticality\n  assCriticalList = [\n    { id: '01', name: '01 Asset Failure Low Impact' },\n    { id: '02', name: '02' },\n    { id: '03', name: '03' },\n    { id: '04', name: '04' },\n    { id: '05', name: '05' },\n    { id: '06', name: '06' },\n    { id: '07', name: '07' },\n    { id: '08', name: '08' },\n    { id: '09', name: '09 Highest' }\n  ];\n\n  // asset owning department\n  assOwningDepartList = [\n    { id: 'CBD', name: 'CUSTOMER BILLING SERVICES' },\n    { id: 'DISTRIBUTION', name: 'DISTRIBUTION' },\n    { id: 'ES-D', name: 'ENGINEERING SERVICES – DISTRIBUTION' },\n    { id: 'FLEET', name: 'FLEET' },\n    { id: 'LAND', name: 'LAND' },\n    { id: 'NRW', name: 'NRW' },\n    { id: 'PD-N', name: 'PRODUCTION NORTHERN' },\n    { id: 'PD-S', name: 'PRODUCTION SOUTHERN' },\n    { id: 'SCADA', name: 'SCADA' },\n    { id: 'WQ', name: 'WATER QUALITY' }\n  ];\n\n  // main operation\n  mainOperationList = [\n    { id: 'CUSTOMER-BILLING-SERVICES', name: 'CUSTOMER BILLING SERVICES' },\n    { id: 'DISTRIBUTION', name: 'DISTRIBUTION' },\n    { id: 'GENERAL-ADMIN', name: 'GENERAL ADMIN' },\n    { id: 'PRODUCTION', name: 'PRODUCTION' },\n    { id: 'SCADA', name: 'SCADA' },\n    { id: 'WATER-QUALITY', name: 'WATER QUALITY' },\n    { id: 'FLEET', name: 'FLEET' },\n  ];\n\n  // condition rating\n  conditionRatingList = [\n    { id: 1, name: 'Very Good' },\n    { id: 2, name: 'Good' },\n    { id: 3, name: 'Average' },\n    { id: 4, name: 'Poor' },\n    { id: 5, name: 'Replace' },\n  ];\n\n  // warranty\n  warrantyList = [\n    { id: 'Available', name: 'Yes' },\n    { id: 'Not-Available', name: 'No' },\n  ];\n\n  // search region\n  ports = [\n    { id: 1, name: 'Tokai' },\n    { id: 2, name: 'Vladivostok' },\n    { id: 3, name: 'Navlakhi' }\n  ];\n\n  // operation list\n\n  operationList = [\n    { id: 'NRW-DISTRICT METERING ZONE', name: 'NRW-DISTRICT METERING ZONE' },\n    { id: 'NRW-TRANSMISSION NETWORK', name: 'NRW-TRANSMISSION NETWORK' },\n    { id: 'NRW-WATER BALANCING AREA', name: 'NRW-WATER BALANCING AREA' },\n    { id: 'PUMP HOUSE', name: 'PUMP HOUSE' },\n    { id: 'RESERVOIR', name: 'RESERVOIR' },\n    { id: 'VALVE-DISTRIBUTION MAIN', name: 'VALVE-DISTRIBUTION MAIN' },\n    { id: 'VALVE-TRUNK MAIN', name: 'VALVE-TRUNK MAIN' },\n    { id: 'WATER TREATMENT PLANT', name: 'WATER TREATMENT PLANT' },\n    { id: 'WQ-ONLINE ANALYZER', name: 'WQ-ONLINE ANALYZER' },\n    { id: 'WQ-RIVER MONITORING STATION', name: 'WQ-RIVER MONITORING STATION' },\n    { id: 'WQ-SAMPLING STATION', name: 'WQ-SAMPLING STATION' },\n    { id: 'WQ-LABORATORY SERVICES', name: 'WQ-LABORATORY SERVICES' },\n  ];\n\n  // asset // component\n  assetOrCompList = [\n    { id: 'Asset', name: 'Asset' },\n    { id: 'Component', name: 'Component' },\n  ];\n\n  //asset Or Component\n  assetOrComponent = ''\n\n  // Forms\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n  fourthFormGroup: FormGroup;\n  fifthFormGroup: FormGroup;\n  sixthFormGroup: FormGroup;\n  seventhFormGroup: FormGroup;\n  warrantyFormGroup: FormGroup;\n  validation_messages = [];\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public alertController: AlertController,\n    public menu: MenuController,\n    public assetsService: AssetsService,\n    public assetGroupsService: AssetGroupsService,\n    public assetTypesService: AssetTypesService,\n    public authService: AuthService,\n    public notificationService: NotificationsService,\n    public organisationsService: OrganisationsService,\n    public regionsService: RegionsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private assetRegistrationsService: AssetRegistrationsService,\n    private statesService: StatesService,\n    private assetAttributeColumnService: AssetAttributeColumnService,\n    private assetAttributePredefineService: AssetAttributePredefineService,\n    private assetAttributeReferenceService: AssetAttributeReferenceService,\n    private maintenanceManagerService: MaintenanceManagerService,\n    private plannerService: PlannerService,\n    private assetLocatioSyncService: AssetLocatioSyncService\n  ) {\n    // console.log(\"parentLocaDiv = \", this.parentLocaDiv)\n    this.firstFormGroup = this.formBuilder.group({\n      asset_primary_category: [\"\"], // primary cat\n      asset_identity: [\"\"],\n      sub_category_1: [\"\"],\n      sub_category_2: [\"\"],\n      model_number: [\"\"],\n      bo: [\"\"]\n    });\n    this.secondFormGroup = this.formBuilder.group({\n      asset_or_component_type: [\"\"],\n      asset_class_asset_category: [\"\"],\n      handed_over_asset_or_procured: [\"\"],\n    });\n    this.thirdFormGroup = this.formBuilder.group({\n      asset_owning_department: [\"\"],\n      main_operation: [\"\"],\n      region: [\"\"],\n      operation: [\"\"],\n      parent_location: [\"\"],\n      new_parent_location: [\"\"],\n    });\n    this.fourthFormGroup = this.formBuilder.group({\n      location_description: [\"\"],\n      building: [\"\"],\n      address_line_1: [\"\"],\n      address_line_2: [\"\"],\n      address_line_3: [\"\"],\n      city: [\"\"],\n      state: [\"\"],\n      postal_code: [\"\"],\n      country: [\"\"],\n      tag_number: [\"\"],\n      service_area: [\"\"],\n      location_main_contact: [\"\"],\n      location_asset_maintenance_manager: [\"\"],\n      maintenance_planner: [\"\"],\n      gis_esri_id: [\"\"],\n      latitude: [\"\"],\n      longitude: [\"\"],\n      asset_criticality: [\"\"],\n      cost_center: [\"\"],\n    });\n    this.fifthFormGroup = this.formBuilder.group({\n      size_capacity_1: [\"\"],\n      size_capacity_1_unit_measurement: [\"\"],\n      size_capacity_2: [\"\"],\n      size_capacity_2_unit_measurement: [\"\"],\n      size_capacity_3: [\"\"],\n      size_capacity_3_unit_measurement: [\"\"],\n      detailed_description: [\"\"],\n      serial_number: [\"\"],\n      asset_tag_number: [\"\"],\n      purchase_date_installed_handed_over_date: [\"\"],\n      condition_rating: [\"\"],\n      status: [\"\"],\n      maintenance_specification: [\"\"],\n      measurement_type: [\"\"],\n      warranty: [\"\"],\n      actual_warranty_period: [\"\"],\n      warranty_vendor_name: [\"\"],\n    });\n    this.sixthFormGroup = this.formBuilder.group({\n      bottom_water_level: [\"\"],\n      brand: [\"\"],\n      capacity_size: [\"\"],\n      closing_torque: [\"\"],\n      communication_protocol: [\"\"],\n      coverage_range: [\"\"],\n      dimention: [\"\"],\n      environmental_performance: [\"\"],\n      flow_rate: [\"\"],\n      frequency: [\"\"],\n      horse_power: [\"\"],\n      hysteresis: [\"\"],\n      infrastructure_status: [\"\"],\n      infrastructure_status_reason: [\"\"],\n      inlet_diameter: [\"\"],\n      installation: [\"\"],\n      insulation: [\"\"],\n      legal_name: [\"\"],\n      manufacturer: [\"\"],\n      manufacturer_year: [\"\"],\n      manufacture_part_number: [\"\"],\n      material_type: [\"\"],\n      model: [\"\"],\n      motor_current: [\"\"],\n      no_of_channel: [\"\"],\n      no_of_phases: [\"\"],\n      no_of_stage: [\"\"],\n      opening_torque: [\"\"],\n      outlet_diameter: [\"\"],\n      power_supply_type: [\"\"],\n      pump_head: [\"\"],\n      revolutions_per_minute: [\"\"],\n      source_from: [\"\"],\n      staging_height: [\"\"],\n      supply_location: [\"\"],\n      temperature: [\"\"],\n      top_water_level: [\"\"],\n      type: [\"\"],\n      valve_diameter: [\"\"],\n      valve_pressure_rating: [\"\"],\n      vehicle_chasis_number: [\"\"],\n      vehicle_engine_capacity: [\"\"],\n      vehicle_engine_number: [\"\"],\n      vehicle_insurance_vendor: [\"\"],\n      vehicle_model: [\"\"],\n      vehicle_insurance_auto_windscreen_insured: [\"\"],\n      vehicle_insurance_cover_note_number: [\"\"],\n      vehicle_insurance_date_period_from: [\"\"],\n      vehicle_insurance_date_period_to: [\"\"],\n      vehicle_insurance_no_claim_discount: [\"\"],\n      vehicle_insurance_policy_type: [\"\"],\n      vehicle_insurance_sum_insured: [\"\"],\n      vehicle_insurance_total_premium: [\"\"],\n      vehicle_puspakom_date_inspection: [\"\"],\n      vehicle_owner_status: [\"\"],\n      vehicle_register_date: [\"\"],\n      vehicle_roadtax_rate: [\"\"],\n      vehicle_puspakom_expired_date: [\"\"],\n      vehicle_spad_permit_date_period_to: [\"\"],\n      vehicle_roadtax_renew_date: [\"\"],\n      vehicle_roadtax_expired_date: [\"\"],\n      vehicle_spad_no_license_operator: [\"\"],\n      vehicle_spad_permit_date_period_from: [\"\"],\n      vehicle_seating_capacity: [\"\"],\n      vehicle_registration_owner: [\"\"],\n      voltage: [\"\"],\n      status: [\"IC\"]\n    });\n\n    /// get data form asset reg list\n    this.route.queryParams.subscribe((params) => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.process = 'view';\n        let assetregistration = this.router.getCurrentNavigation().extras.state\n          .assetregistration;\n        this.firstFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.secondFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.thirdFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.fourthFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.fifthFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.sixthFormGroup.patchValue({\n          ...assetregistration\n        });\n\n      }\n    });\n  }\n\n  ngOnInit() {\n\n    this.getRegion()\n    this.getState()\n    this.getOrganisations()\n    this.getAssetType()\n    this.getAssetGroup()\n    this.getAttributePredefine()\n    this.getMaintenanceManager()\n    this.getPlanner()\n    this.getAssetLocationSync()\n  }\n\n  removeDuplicates(originalArray, prop) {\n    console\n    var newArray = [];\n    var lookupObject = [];\n\n    for (var i in originalArray) {\n\n      lookupObject[originalArray[i][prop]] = originalArray[i];\n      console.log(i, \" qqqqq= \", originalArray[i])\n    }\n\n    for (i in lookupObject) {\n      this.assetLocationData.push(lookupObject[i]);\n    }\n    console.log(\"uniqueArray is: \" + this.assetLocationData);\n    // return this.assetLocationData;\n  }\n\n  assetLocationData: any = []\n  getAssetLocationSync() {\n\n    console.log(\"iiiiiiiiii\")\n    this.assetLocatioSyncService.get_asset_location().subscribe(\n      (res) => {\n        console.log(\"assetLocatioSyncService = \", res)\n        // let assetLocationarr = res\n        // this.assetLocationData.push(res)\n        this.assetLocationData = res\n\n        // var newArray = [];\n        // var lookupObject = {};\n\n        // for (var i in assetLocationarr) {\n        //   console.log(\"i = \", i)\n        //   // lookupObject[assetLocationarr[i][prop]] = assetLocationarr[i];\n        //   // if(){\n\n        //   // }\n        // }\n        // this.assetLocationData = this.removeDuplicates(assetLocationarr, \"node_id\");\n        console.log(\"uniqueArray is: \" + this.assetLocationData);\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  plannerData = []\n  getPlanner() {\n    this.plannerService.get().subscribe(\n      (res) => {\n        // console.log(\"planner = \", res)\n        if (res) this.plannerData = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n\n  }\n\n  maintenanceManagerData = []\n  getMaintenanceManager() {\n    this.maintenanceManagerService.get().subscribe(\n      (res) => {\n        // console.log(\"regions = \", res)\n        if (res) this.maintenanceManagerData = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getAttributePredefine() {\n    this.assetAttributePredefineService.get().subscribe(\n      (res) => {\n        // console.log(\"assetAttPredefine = \", res)\n\n        res.forEach(element => {\n          // console.log(\"assetAttPredefine element = \", element)\n          // console.log(\"assetAttPredefine attribute_field_name = \", element.attribute_field_name)\n\n          if (element.attribute_field_name == \"manufacturer\") {\n            this.assetAttPredefineMans.push(element); // manufacturer\n            // console.log(\"assetAttPredefineMans = \", this.assetAttPredefineMans)\n          }\n          if (element.attribute_field_name == \"vehicle_insurance_vendor\") {\n            this.assetAttPredefinePreInsVens.push(element); // vehicle_insurance_vendor\n          }\n          if (element.attribute_field_name == \"vehicle_insurance_policy_type\") {\n            this.assetAttPredefineInsPols.push(element); // vehicle_insurance_policy_type\n          }\n          if (element.attribute_field_name == \"vehicle_owner_status\") {\n            this.assetAttPredefineOwnStas.push(element); //vehicle_owner_status\n          }\n          if (element.attribute_field_name == \"vehicle_registration_owner\") {\n            this.assetAttPredefineRegOwns.push(element); // vehicle_registration_owner\n          }\n        });\n\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getRegion() {\n    this.regionsService.get().subscribe(\n      (res) => {\n        // console.log(\"regions = \", res)\n        if (res) this.regions = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getState() {\n    this.statesService.get().subscribe(\n      (res) => {\n        // console.log(\"states = \", res)\n        if (res) this.states = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getOrganisations() {\n    this.organisationsService.get().subscribe(\n      (res) => {\n        if (res) this.organisations = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getAssetType() {\n    this.assetTypesService.get().subscribe(\n      (res) => {\n        if (res) {\n          // console.log('this.primarycategories = ', res)\n          this.primarycategories = res;\n          // this.primarycategories = res.filter(function (data) {\n          //   if (data.category.toString().toLowerCase().indexOf(\"at\") !== -1)\n          //     return true;\n          //   return false;\n          // });\n\n          // console.log('this.primarycategories = ', this.primarycategories)\n\n          this.typeassets = res\n          // .filter(function (data) {\n          //   if (data.category.toString().toLowerCase().indexOf(\"ac\") !== -1)\n          //     return true;\n          //   return false;\n          // });\n\n          this.categories = res\n          // .filter(function (data) {\n          //   if (data.category.toString().toLowerCase().indexOf(\"ag\") !== -1)\n          //     return true;\n          //   return false;\n          // });\n        }\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getAssetGroup() {\n    this.assetGroupsService.get().subscribe(\n      (res) => {\n        if (res) {\n          this.identities = res.filter(function (data) {\n            if (data.category.toString().toLowerCase().indexOf(\"ai\") !== -1)\n              return true;\n            return false;\n          });\n\n          this.groupsubcategory1s = res.filter(function (data) {\n            if (data.category.toString().toLowerCase().indexOf(\"s1\") !== -1)\n              return true;\n            return false;\n          });\n\n          this.groupsubcategory2s = res.filter(function (data) {\n            if (data.category.toString().toLowerCase().indexOf(\"s2\") !== -1)\n              return true;\n            return false;\n          });\n        }\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  register() {\n    let postAssets = {\n      ...this.firstFormGroup.value,\n      ...this.secondFormGroup.value,\n      ...this.thirdFormGroup.value,\n      ...this.fourthFormGroup.value,\n      ...this.fifthFormGroup.value,\n      ...this.sixthFormGroup.value,\n      // ...this.seventhFormGroup.value,\n      // created_by: this.authService.userID\n    };\n\n    // console.log('postAssets = ', postAssets);\n    // this.assetsService.post(postAssets).subscribe( \n    this.assetRegistrationsService.post(postAssets).subscribe(\n      (res) => {\n        if (res) {\n          // console.log(\"register_res = \", res);\n          this.presentAlert(\"Success\", \"Your asset successfully registered into the system.\");\n        } else {\n          console.log('eweqqweeq');\n        }\n      },\n      (err) => {\n        console.error(\"register_rerr\", err);\n        // this.validation_messages = err.error;\n        this.presentAlert(\"Error\", \"There are error occured on your form. Please check your form again.\");\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  async presentAlert(header: string, message: string) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: \"OK\",\n          handler: () => {\n            if (header == \"Success\") this.homePage(\"/technical/tabs/tab1\");\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  homePage(path: string) {\n    this.router.navigate([path]);\n  }\n\n  clickBack() {\n    this.router.navigate([\"/technical/asset-registration-list\"]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n\n  onChangeParent(event) {\n    if (event == 0) {\n      this.parentLocaDiv = 0\n    } else {\n      this.parentLocaDiv = 1\n    }\n  }\n\n  onChangeAssLoc(event) {\n    if (event == 0) {\n      this.assetLocDiv = 0\n    } else {\n      this.assetLocDiv = 1\n    }\n  }\n\n  changeSegment(segment) {\n    this.segmentModal = segment;\n  }\n\n  portChange2(event) {\n\n  }\n\n  portChange(event: {\n    // console.log(event);\n    // if(value.length > 3)\n    component: IonicSelectableComponent,\n    value: any\n    // }\n  }) {\n    console.log('port:', event.value);\n  }\n\n  onChangeLocAssMaiMan(event: {\n    // console.log(event);\n    // if(value.length > 3)\n    component: IonicSelectableComponent,\n    value: any\n    // }\n  }) {\n    console.log('port:', event.value);\n  }\n  // onChangeLocAssMaiMan(event: {\n  //   // console.log(event);\n  //   // if(value.length > 3)\n  //   component: IonicSelectableComponent,\n  //   value: any\n  //   // }\n  // }) { }\n\n  onChangeAssPrimaryCat(event: {\n    // console.log(event);\n    // if(value.length > 3)\n    component: IonicSelectableComponent,\n    value: any\n    // }\n  }) {\n    console.log('port:', event.value.asset_type_code);\n    console.log(\"event = \", event)\n    let field = \"asset_type_id=\" + event.value.asset_type_description;\n\n    this.primarycategories.forEach(element => {\n      if (element.asset_type_code == event.value.asset_type_code) {\n        console.log(\"element = ---\", element);\n        this.assetAttrData = element.asset_bussiness_object\n        this.assetCategoryData = element.asset_category\n        if (element.asset_category == 'W1-TrackedGeneralComponent' || element.asset_category == 'W1-IOSvcGeneralComponent') {\n          this.assetOrComponent = 'Component'\n        } else { // W1-IOSvcGeneralComponent , W1-TrackedGeneralComponent\n          this.assetOrComponent = 'Asset'\n        }\n      }\n    });\n    this.assetAttributeColumnService.filter(field).subscribe(\n      (res) => {\n        if (res) {\n          this.assetAttrColumn = res[0]\n          // console.log(\" this.assetAttrColumn = \", this.assetAttrColumn);\n        }\n      },\n      () => {\n\n      }\n    )\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetAttributeColumnModel } from \"./asset-attribute-column.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetAttributeColumnService {\n  url: string = environment.baseUrl + \"v1/asset-attribute-column/\";\n\n  // Data\n  public amodels: AssetAttributeColumnModel[] = [];\n  public amodel: AssetAttributeColumnModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body): Observable<AssetAttributeColumnModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetAttributeColumnModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n        this.amodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetAttributeColumnModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetAttributeColumnModel>(urlID).pipe(\n      tap((res: AssetAttributeColumnModel) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n        this.amodel = res;\n      })\n    );\n  }\n\n  update(body): Observable<AssetAttributeColumnModel> {\n    return this.http.patch<AssetAttributeColumnModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetAttributeColumnModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetAttributeColumnModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  patch_asset(body): Observable<AssetAttributeColumnModel> {\n    let urlPatchAsset = this.url + \"patch_asset/\";\n    return this.http.post<any>(urlPatchAsset, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetAttributePredefineModel } from './asset-attribute-prodefine.model';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetAttributePredefineService {\n  url: string = environment.baseUrl + \"v1/asset-attribute-predefine/\";\n\n  // Data\n  public atmodels: AssetAttributePredefineModel[] = [];\n  public atmodel: AssetAttributePredefineModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body): Observable<AssetAttributePredefineModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetAttributePredefineModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n        this.atmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetAttributePredefineModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetAttributePredefineModel>(urlID).pipe(\n      tap((res: AssetAttributePredefineModel) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n        this.atmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<AssetAttributePredefineModel> {\n    return this.http.patch<AssetAttributePredefineModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetAttributePredefineModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetAttributePredefineModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetAttributeReferenceModel } from './asset-attribute-reference.model';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetAttributeReferenceService {\n  url: string = environment.baseUrl + \"v1/asset-attribute-reference/\";\n\n  // Data\n  public atmodels: AssetAttributeReferenceModel[] = [];\n  public atmodel: AssetAttributeReferenceModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body): Observable<AssetAttributeReferenceModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetAttributeReferenceModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n        this.atmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetAttributeReferenceModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetAttributeReferenceModel>(urlID).pipe(\n      tap((res: AssetAttributeReferenceModel) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n        this.atmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<AssetAttributeReferenceModel> {\n    return this.http.patch<AssetAttributeReferenceModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetAttributeReferenceModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetAttributeReferenceModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetGroupsModel } from \"./asset-groups.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetGroupsService {\n  url: string = environment.baseUrl + \"v1/asset-groups/\";\n\n  // Data\n  public agmodels: AssetGroupsModel[] = [];\n  public agmodel: AssetGroupsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body): Observable<AssetGroupsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetGroupsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n        this.agmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetGroupsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetGroupsModel>(urlID).pipe(\n      tap((res: AssetGroupsModel) => {\n        console.log(\"AssetGroupsModel\", res);\n        this.agmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<AssetGroupsModel> {\n    return this.http.patch<AssetGroupsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetGroupsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetGroupsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { MaintenanceManagerModel } from './maintenance-manager.model';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MaintenanceManagerService {\n  url: string = environment.baseUrl + \"v1/maintenance-manager/\";\n\n  // Data\n  public rmodels: MaintenanceManagerModel[] = [];\n  public rmodel: MaintenanceManagerModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body: Form): Observable<MaintenanceManagerModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<MaintenanceManagerModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n        this.rmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<MaintenanceManagerModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<MaintenanceManagerModel>(urlID).pipe(\n      tap((res: MaintenanceManagerModel) => {\n        console.log(\"MaintenanceManagerModel\", res);\n        this.rmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<MaintenanceManagerModel> {\n    return this.http.patch<MaintenanceManagerModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<MaintenanceManagerModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<MaintenanceManagerModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { OrganisationsModel } from \"./organisations.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganisationsService {\n  url: string = environment.baseUrl + \"v1/organisations/\";\n\n  // Data\n  public rmodels: OrganisationsModel[] = [];\n  public rmodel: OrganisationsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body: Form): Observable<OrganisationsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<OrganisationsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n        this.rmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<OrganisationsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<OrganisationsModel>(urlID).pipe(\n      tap((res: OrganisationsModel) => {\n        console.log(\"OrganisationsModel\", res);\n        this.rmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<OrganisationsModel> {\n    return this.http.patch<OrganisationsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<OrganisationsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<OrganisationsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { RegionsModel } from \"./regions.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionsService {\n  url: string = environment.baseUrl + \"v1/regions/\";\n\n  // Data\n  public mmodels: RegionsModel[] = [];\n  public mmodel: RegionsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body: Form): Observable<RegionsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<RegionsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n        this.mmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<RegionsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<RegionsModel>(urlID).pipe(\n      tap((res: RegionsModel) => {\n        console.log(\"RegionsModel\", res);\n        this.mmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<RegionsModel> {\n    return this.http.patch<RegionsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<RegionsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<RegionsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { StatesModel } from \"./states.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatesService {\n  url: string = environment.baseUrl + \"v1/states/\";\n\n  // Data\n  public mmodels: StatesModel[] = [];\n  public mmodel: StatesModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body: Form): Observable<StatesModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<StatesModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n        this.mmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<StatesModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<StatesModel>(urlID).pipe(\n      tap((res: StatesModel) => {\n        console.log(\"StatesModel\", res);\n        this.mmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<StatesModel> {\n    return this.http.patch<StatesModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<StatesModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<StatesModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}