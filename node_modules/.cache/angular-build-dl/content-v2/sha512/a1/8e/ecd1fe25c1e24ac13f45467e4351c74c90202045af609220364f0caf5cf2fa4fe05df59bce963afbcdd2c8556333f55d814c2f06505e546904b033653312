{"version":3,"sources":["./src/app/pages/technical/operational-reading-list/operational-reading-list.page.html","./src/app/pages/technical/operational-reading-list/operational-reading-list-routing.module.ts","./src/app/pages/technical/operational-reading-list/operational-reading-list.module.ts","./src/app/pages/technical/operational-reading-list/operational-reading-list.page.scss","./src/app/pages/technical/operational-reading-list/operational-reading-list.page.ts","./src/app/shared/services/wams/wams.service.ts"],"names":[],"mappings":"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","file":"default~operational-reading-list-operational-reading-list-module~pages-technical-operational-reading~1dffa3e2-es2015.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"homePage('/technical/tabs/tab1')\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"> Operational Reading </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge size=\\\"small\\\" color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\">\\n          {{ notificationService.totalnotificationbyuser }}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\">\\n    <div class=\\\"ion-text-center\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"clickNew()\\\">Update</ion-button>\\n    </div>\\n    <ion-card *ngFor=\\\"let operationalreading of operationalreadings\\\">\\n      <ion-card-header>\\n        <ion-fab horizontal=\\\"end\\\">\\n          <ion-fab-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"clickEdit(operationalreading)\\\">\\n            <ion-icon name=\\\"document-text\\\"></ion-icon>\\n          </ion-fab-button>\\n          <!-- <ion-fab-button\\n            size=\\\"small\\\"\\n            color=\\\"danger\\\"\\n            (click)=\\\"clickRemove(i)\\\"\\n          >\\n            <ion-icon name=\\\"trash\\\"></ion-icon>\\n          </ion-fab-button> -->\\n        </ion-fab>\\n        <ion-card-title>Badge Number<br />{{ operationalreading.badge_number }}</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p>Asset ID: {{ operationalreading.asset_id }}</p>\\n        <p>Created Date: {{ operationalreading.created_date | date:'dd/MM/yyyy' }}</p>\\n        <p>Status: Operational Reading Updated</p>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperationalReadingListPage } from './operational-reading-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OperationalReadingListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OperationalReadingListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OperationalReadingListPageRoutingModule } from './operational-reading-list-routing.module';\n\nimport { OperationalReadingListPage } from './operational-reading-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OperationalReadingListPageRoutingModule\n  ],\n  declarations: [OperationalReadingListPage]\n})\nexport class OperationalReadingListPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9vcGVyYXRpb25hbC1yZWFkaW5nLWxpc3Qvb3BlcmF0aW9uYWwtcmVhZGluZy1saXN0LnBhZ2Uuc2NzcyJ9 */\"","declare var broadcaster: any;\n\nimport { Component, NgZone, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, NavigationExtras, Router } from \"@angular/router\";\nimport {\n  ActionSheetController,\n  AlertController,\n  LoadingController,\n  MenuController,\n  ModalController,\n} from \"@ionic/angular\";\n\nimport { NotificationsService } from \"src/app/shared/services/notifications/notifications.service\";\nimport { OperationalReadingsService } from \"src/app/shared/services/operational-readings/operational-readings.service\";\nimport { AssetRegistrationsService } from \"src/app/shared/services/asset-registrations/asset-registrations.service\";\nimport { AssetsService } from \"src/app/shared/services/assets/assets.service\";\nimport { WamsService } from \"src/app/shared/services/wams/wams.service\";\n\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n@Component({\n  selector: \"app-operational-reading-list\",\n  templateUrl: \"./operational-reading-list.page.html\",\n  styleUrls: [\"./operational-reading-list.page.scss\"],\n})\nexport class OperationalReadingListPage implements OnInit {\n  // List\n  operationalreadings = [];\n\n  // data\n  private logs = new Array<string>();\n  public scanValue: any;\n  badge_no: any;\n  hex_code: any;\n  bBarcode: boolean = false;\n  bRfid: boolean = false;\n\n  private subscription: Subscription;\n\n  constructor(\n    private ngZone: NgZone,\n    private route: ActivatedRoute,\n    private router: Router,\n    public actionSheetController: ActionSheetController,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n    public menu: MenuController,\n    public modalController: ModalController,\n    public notificationService: NotificationsService,\n    private assetregistrationService: AssetRegistrationsService,\n    private operationalreadingService: OperationalReadingsService,\n    private assetsService: AssetsService,\n    private wamsService: WamsService,\n    private authService: AuthService\n  ) { }\n\n  private L(...args: any[]) {\n    let v = args.join(\" \");\n    console.log(v);\n    this.ngZone.run(() => {\n      this.logs.push(v);\n    });\n  }\n\n  ngOnInit() {\n    console.log(\"ngOnInit OperationalReadingListPage\");\n\n    broadcaster._debug = true;\n    // this.onRegister2DBarcodeListener();\n    // this.onRegisterRFIDListener();\n  }\n\n  ngOnDestroy() {\n    console.log(\"ngOnDestroy OperationalReadingListPage\");\n  }\n\n  presentAlert(header: string, message: string) {\n    this.alertController\n      .create({\n        header,\n        message,\n        buttons: [\"OK\"],\n      })\n      .then((loading) => {\n        loading.present();\n      });\n  }\n\n  onRegister2DBarcodeListener() {\n\n    this.loadingController\n      .create({\n        message: \"Please scan the QR code...\",\n        // dismissOnPageChange: true; \n        showBackdrop: true,\n        // enableBackdropDismiss: true;\n      })\n      .then((loading) => {\n\n        loading.present();\n\n        console.log(\"[register onRegister2DBarcodeListener] \");\n        const ev = \"com.scanner.broadcast\";\n        var isGlobal = true;\n\n        var listener = (event) => {\n          console.log(JSON.stringify(event));\n\n          if (event.SCAN_STATE == \"success\") {\n            this.ngZone.run(() => {\n              console.log(\"this.bBarcode = \", this.bBarcode);\n              if (this.bBarcode) {\n                loading.dismiss();\n                broadcaster.removeEventListener(ev, listener);\n                this.updateQrbarcode(event.data);\n              }\n            });\n          }\n        };\n\n        broadcaster.addEventListener(ev, isGlobal, listener);\n      });\n  }\n\n  onRegisterRFIDListener() {\n    this.loadingController\n      .create({\n        message: \"Please scan the RFID tag...\",\n      })\n      .then((loading) => {\n        loading.present();\n\n        console.log(\"[register onRegisterRFIDListener] \");\n        const ev = \"android.intent.action.scanner.RFID\";\n        var isGlobal = true;\n\n        var listener = (event) => {\n          console.log(JSON.stringify(event));\n\n          if (event.SCAN_STATE == \"success\") {\n            this.ngZone.run(() => {\n              console.log(\"this.bRfid = \", this.bRfid);\n              if (this.bRfid) {\n                loading.dismiss();\n                broadcaster.removeEventListener(ev, listener);\n                this.updateRfid(event.data);\n              }\n            });\n          }\n        };\n\n        broadcaster.addEventListener(ev, isGlobal, listener);\n      });\n  }\n\n  getOperationalReading() {\n    console.log(\"this.authService.userID\", this.authService.userID)\n    let objUser = {\n      userid: this.authService.userID\n    }\n    this.operationalreadingService.getDescOrderList(objUser).subscribe(\n      (res) => {\n        console.log(\"this.operationalreadingService res\", res);\n        this.operationalreadings = res;\n        // this.groupByAssetID(res);\n      },\n      (err) => {\n        console.error(\"err\", err);\n      }\n    );\n  }\n\n  groupByAssetID(res) {\n    let group = res.reduce((r, a) => {\n      r[a.asset_id] = [...(r[a.asset_id] || []), a];\n      return r;\n    }, {});\n    this.operationalreadings = group;\n  }\n\n  ionViewDidEnter() {\n    console.log(\"ionViewDidEnter OperationalReadingListPage\");\n\n    this.getOperationalReading();\n  }\n\n  ionViewDidLeave() {\n    console.log(\"ionViewDidLeave OperationalReadingListPage\");\n\n    // console.log(\"broadcaster\", broadcaster);\n    // if (!this.subscription || this.subscription.closed) return;\n    // this.subscription.unsubscribe();\n  }\n\n  homePage(path: string) {\n    this.router.navigate([path]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n\n  async clickNew() {\n    this.bRfid = false;\n    this.bBarcode = false;\n\n    const actionSheet = await this.actionSheetController.create({\n      header: \"Choose method\",\n      buttons: [\n        {\n          text: \"RFID\",\n          icon: \"scan\",\n          handler: () => {\n            this.bRfid = true;\n            this.bBarcode = false;\n            console.log(\"OPL RFID clicked\");\n            this.onRegisterRFIDListener();\n          },\n        },\n        {\n          text: \"QR Code\",\n          icon: \"qr-code\",\n          handler: () => {\n            this.bRfid = false;\n            this.bBarcode = true;\n            console.log(\"OPL QR Code clicked\");\n            this.onRegister2DBarcodeListener();\n          },\n        },\n        {\n          text: \"Badge No.\",\n          icon: \"search\",\n          handler: () => {\n            console.log(\"OPL Badge No. clicked\");\n            this.searchBadgeNo();\n          },\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          icon: \"close\",\n          handler: () => {\n            console.log(\"OPL Cancel clicked\");\n          },\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async searchBadgeNo() {\n    const alert = await this.alertController.create({\n      header: \"Badge No.\",\n      message: \"Enter a badge number to search the asset\",\n      inputs: [\n        {\n          name: \"badge_no\",\n          type: \"text\",\n          placeholder: \"\",\n        },\n      ],\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          handler: () => {\n            console.log(\"Cancel clicked\");\n          },\n        },\n        {\n          text: \"Search\",\n          handler: (data) => {\n            if (data.badge_no) {\n              this.loadingController\n                .create({\n                  message: \"Please wait...\",\n                })\n                .then((loading) => {\n                  loading.present();\n\n                  this.assetsService\n                    .filter(\"badge_no=\" + data.badge_no)\n                    .subscribe(\n                      (res) => {\n                        // if find, go to asset detail list\n                        if (res.length > 0) {\n                          loading.dismiss();\n                          let navigationExtras: NavigationExtras = {\n                            state: {\n                              badge_no: res[0].badge_no,\n                            },\n                          };\n\n                          this.router.navigate(\n                            [\"/technical/operational-reading\"],\n                            navigationExtras\n                          );\n                        }\n                        // else, find the asset in the wams to pump into PIPE's asset table\n                        else {\n                          // get data from wams\n                          this.wamsService\n                            .getAssetBadgeNo(data.badge_no)\n                            .subscribe(\n                              (res) => {\n                                loading.dismiss();\n\n                                if (res.results.length > 0) {\n                                  let navigationExtras: NavigationExtras = {\n                                    state: {\n                                      badge_no: data.badge_no,\n                                    },\n                                  };\n\n                                  this.router.navigate(\n                                    [\"/technical/operational-reading\"],\n                                    navigationExtras\n                                  );\n                                } else {\n                                  this.presentAlert(\n                                    \"Error\",\n                                    \"Sorry, asset is not found in the database.\"\n                                  );\n                                }\n                              },\n                              (err) => {\n                                console.error(\"err\", err);\n                                loading.dismiss();\n\n                                this.presentAlert(\n                                  \"Error\",\n                                  \"Sorry, there is a technical problem going on.\"\n                                );\n                              }\n                            );\n                        }\n                      },\n                      (err) => {\n                        console.log(\"err assetlsService = \", err);\n                        loading.dismiss();\n\n                        this.presentAlert(\n                          \"Error\",\n                          \"Sorry, there is a technical problem going on.\"\n                        );\n                      }\n                    );\n                });\n            } else {\n              this.presentAlert(\n                \"Error\",\n                \"Please enter badge number to find asset detail\"\n              );\n            }\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async clickEdit(operationalreading) {\n    let navigationExtras: NavigationExtras = {\n      state: {\n        operationalreading,\n        process: \"view\",\n      },\n    };\n\n    this.router.navigate([\"/technical/operational-reading\"], navigationExtras);\n  }\n\n  clickRemove(index: number) {\n    this.operationalreadings.splice(index, 1);\n  }\n\n  updateRfid(data) {\n    if (this.bRfid)\n      this.ngZone.run(() => {\n        this.scanValue = data;\n\n        if (this.scanValue != \"\") {\n          this.loadingController\n            .create({\n              message: \"Please wait...\",\n            })\n            .then((loading) => {\n              loading.present();\n\n              this.assetsService.filter(\"hex_code=\" + this.scanValue).subscribe(\n                (res) => {\n                  loading.dismiss();\n                  // if find, go to asset detail list\n                  if (res.length > 0) {\n                    let navigationExtras: NavigationExtras = {\n                      state: {\n                        badge_no: res[0].badge_no,\n                      },\n                    };\n\n                    this.router.navigate(\n                      [\"/technical/operational-reading\"],\n                      navigationExtras\n                    );\n                  }\n                  // else, suggest the user to use QR scanner OR search by badge number\n                  else {\n                    this.presentAlert(\n                      \"Error\",\n                      \"The asset is not found in the database. Please try again by using QR scanner OR search by badge number.\"\n                    );\n                  }\n                },\n                (err) => {\n                  console.log(\"err assetlsService = \", err);\n                  loading.dismiss();\n\n                  this.presentAlert(\n                    \"Error\",\n                    \"Sorry, there is a technical problem going on.\"\n                  );\n                }\n              );\n            });\n        } else {\n          this.presentAlert(\"Error\", \"RFID is invalid. Please try again.\");\n        }\n      });\n  }\n\n  updateQrbarcode(data) {\n    if (this.bBarcode)\n      this.ngZone.run(() => {\n        this.scanValue = data;\n\n        if (this.scanValue != \"\") {\n          this.loadingController\n            .create({\n              message: \"Please wait...\",\n            })\n            .then((loading) => {\n              loading.present();\n\n              this.assetsService.filter(\"badge_no=\" + this.scanValue).subscribe(\n                (res) => {\n                  // if find, go to asset detail list\n                  if (res.length > 0) {\n                    loading.dismiss();\n                    let navigationExtras: NavigationExtras = {\n                      state: {\n                        badge_no: res[0].badge_no,\n                      },\n                    };\n\n                    this.router.navigate(\n                      [\"/technical/operational-reading\"],\n                      navigationExtras\n                    );\n                  }\n                  // else, find the asset in the wams to pump into PIPE's asset table\n                  else {\n                    // get data from wams\n                    this.wamsService.getAssetBadgeNo(this.scanValue).subscribe(\n                      (res) => {\n                        loading.dismiss();\n\n                        if (res.results.length > 0) {\n                          let navigationExtras: NavigationExtras = {\n                            state: {\n                              badge_no: this.scanValue,\n                            },\n                          };\n\n                          this.router.navigate(\n                            [\"/technical/operational-reading\"],\n                            navigationExtras\n                          );\n                        } else {\n                          this.presentAlert(\n                            \"Error\",\n                            \"Sorry, asset is not found in the database.\"\n                          );\n                        }\n                      },\n                      (err) => {\n                        console.error(\"err\", err);\n                        loading.dismiss();\n\n                        this.presentAlert(\n                          \"Error\",\n                          \"Sorry, there is a technical problem going on.\"\n                        );\n                      }\n                    );\n                  }\n                },\n                (err) => {\n                  console.log(\"err assetlsService = \", err);\n                  loading.dismiss();\n\n                  this.presentAlert(\n                    \"Error\",\n                    \"Sorry, there is a technical problem going on.\"\n                  );\n                }\n              );\n            });\n        } else {\n          this.presentAlert(\"Error\", \"QR code is invalid. Please try again.\");\n        }\n      });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WamsService {\n  url: string = environment.baseUrl + \"v1/wams/services/\";\n  // url: string = \"http://127.0.0.1:8000/v1/wams/services/\";\n\n  constructor(private http: HttpClient) { }\n\n  getService(body): Observable<any> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(body.service_name, res);\n      })\n    );\n  }\n\n  getEmployee(): Observable<any> {\n    let body = {\n      service_name: \"getEmployee\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getEmployee\", res);\n      })\n    );\n  }\n\n  getWorkOrderActivity(): Observable<any> {\n    let body = {\n      service_name: \"getWorkOrderActivity\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getWorkOrderActivity\", res);\n      })\n    );\n  }\n\n  getAssetSyncOutbound(): Observable<any> {\n    let body = {\n      service_name: \"getAssetSyncOutbound\",\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getAssetSyncOutbound\", res);\n      })\n    );\n  }\n\n  getAssetBadgeNo(badge_no): Observable<any> {\n    let body = {\n      service_name: \"getAsset\",\n      badge_number: badge_no,\n    };\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"getAsset\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}