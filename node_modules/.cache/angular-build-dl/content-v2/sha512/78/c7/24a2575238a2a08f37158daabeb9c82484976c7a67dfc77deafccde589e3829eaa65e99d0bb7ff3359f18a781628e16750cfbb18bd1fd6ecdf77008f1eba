{"version":3,"sources":["./src/app/pages/technical/operational-reading/operational-reading.page.html","./src/app/pages/technical/operational-reading/operational-reading-routing.module.ts","./src/app/pages/technical/operational-reading/operational-reading.module.ts","./src/app/pages/technical/operational-reading/operational-reading.page.scss","./src/app/pages/technical/operational-reading/operational-reading.page.ts","./src/app/shared/services/asset-registrations/asset-registrations.service.ts"],"names":[],"mappings":"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","file":"default~pages-technical-operational-reading-operational-reading-module~pages-technical-technical-module-es2015.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"clickBack()\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"></ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge size=\\\"small\\\" color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\">\\n          {{ notificationService.totalnotificationbyuser }}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\">\\n    <h4 class=\\\"ion-text-center ion-padding\\\">Operational Reading</h4>\\n    <ion-list class=\\\"line-input\\\">\\n      <form [formGroup]=\\\"operationalreadingFormGroup\\\">\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Asset Description</ion-label>\\n          <ion-textarea rows=\\\"3\\\" readonly formControlName=\\\"asset_description\\\"></ion-textarea>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Badge Number</ion-label>\\n          <ion-input type=\\\"text\\\" readonly formControlName=\\\"badge_number\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Location</ion-label>\\n          <ion-textarea rows=\\\"3\\\" readonly formControlName=\\\"location\\\"></ion-textarea>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Measurement Type</ion-label>\\n          <!-- <ion-input type=\\\"text\\\" formControlName=\\\"measurent_type\\\"></ion-input> -->\\n\\n          <ion-select formControlName=\\\"measurent_type\\\" *ngIf=\\\"showButton == 'yes'\\\">\\n            <ion-select-option value=\\\"\\\">Please select</ion-select-option>\\n            <ion-select-option *ngFor=\\\"let choice of MeasurementTypeData\\\" [value]=\\\"choice.measurement_type\\\">\\n              {{choice.measurement_type}}\\n            </ion-select-option>\\n          </ion-select>\\n          <ion-input type=\\\"text\\\" *ngIf=\\\"showButton == 'no'\\\" [disabled]=\\\"true\\\" readonly formControlName=\\\"measurent_type\\\">\\n          </ion-input>\\n          <!-- <ion-select formControlName=\\\"measurent_type\\\">\\n            <ion-select-option selected value=\\\"RUNNING-HOUR\\\">RUNNING HOUR</ion-select-option>\\n            <ion-select-option value=\\\"TEMPERATURE-SENSOR\\\">TEMPERATURE SENSOR</ion-select-option>\\n          </ion-select> -->\\n\\n          <!-- \\n            1. Call data from /measurement-types\\n            2. Save @ variable\\n            3. Contoh measurements\\n           -->\\n        </ion-item>\\n\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Reading Date</ion-label>\\n          <ion-datetime *ngIf=\\\"showButton == 'yes'\\\" displayFormat=\\\"YYYY-MM-DD HH:mm:ss\\\"\\n            formControlName=\\\"reading_datetime\\\">\\n          </ion-datetime>\\n          <ion-datetime *ngIf=\\\"showButton == 'no'\\\" [disabled]=\\\"true\\\" displayFormat=\\\"YYYY-MM-DD HH:mm:ss\\\"\\n            formControlName=\\\"reading_datetime\\\">\\n          </ion-datetime>\\n          <!-- <ion-input *ngIf=\\\"showButton == yes\\\" type=\\\"text\\\" [disabled]=\\\"true\\\" readonly\\n            formControlName=\\\"reading_datetime\\\"></ion-input> -->\\n        </ion-item>\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"stacked\\\">Reading Time</ion-label>\\n          <ion-datetime displayFormat=\\\"HH:mm\\\" formControlName=\\\"reading_time\\\"></ion-datetime>\\n        </ion-item> -->\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Current Value</ion-label>\\n          <ion-input *ngIf=\\\"showButton == 'yes'\\\" type=\\\"number\\\" formControlName=\\\"current_value\\\"></ion-input>\\n          <ion-input *ngIf=\\\"showButton == 'no'\\\" type=\\\"number\\\" [disabled]=\\\"true\\\" readonly\\n            formControlName=\\\"current_value\\\">\\n          </ion-input>\\n        </ion-item>\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"stacked\\\">Initial Value</ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"initial_value_flag\\\"></ion-input>\\n        </ion-item> -->\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"stacked\\\">Owning Organization</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"owning_organization\\\"></ion-input>\\n        </ion-item> -->\\n\\n      </form>\\n    </ion-list>\\n\\n    <!-- <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"ion-text-start\\\">Measurement Type</ion-label>\\n      <ion-button (click)=\\\"clickAddMeasurementType()\\\">Add</ion-button>\\n    </ion-item> -->\\n\\n    <ion-card *ngIf=\\\"operationalreadingFormGroup.value.measurement_type\\\">\\n      <ion-card-header>\\n        <ion-fab horizontal=\\\"end\\\">\\n          <ion-fab-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"clickEdit(operationalreadingFormGroup.value)\\\">\\n            <ion-icon name=\\\"create\\\"></ion-icon>\\n          </ion-fab-button>\\n          <!-- <ion-fab-button\\n            size=\\\"small\\\"\\n            color=\\\"danger\\\"\\n            (click)=\\\"clickRemove(i)\\\"\\n          >\\n            <ion-icon name=\\\"trash\\\"></ion-icon>\\n          </ion-fab-button> -->\\n        </ion-fab>\\n        <ion-card-title>Measurement Type <br />\\n          {{ operationalreadingFormGroup.value.measurement_type\\n          }}</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p>\\n          Reading Date/Time: {{\\n          operationalreadingFormGroup.value.reading_date_time | date }}\\n        </p>\\n        <p>\\n          Current Value: {{ operationalreadingFormGroup.value.current_value }}\\n        </p>\\n        <p>\\n          Created Date: {{ operationalreadingFormGroup.value.record_date |\\n          date:'mediumDate' }}\\n        </p>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <div class=\\\"ion-text-center ion-padding\\\">\\n      <ion-button color=\\\"light\\\" (click)=\\\"clickBack()\\\">Back</ion-button>\\n      <ion-button *ngIf=\\\"showButton == 'yes'\\\" color=\\\"primary\\\" (click)=\\\"submit()\\\">Submit</ion-button>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperationalReadingPage } from './operational-reading.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OperationalReadingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OperationalReadingPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { OperationalReadingPageRoutingModule } from \"./operational-reading-routing.module\";\n\nimport { OperationalReadingPage } from \"./operational-reading.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    OperationalReadingPageRoutingModule,\n  ],\n  declarations: [OperationalReadingPage],\n})\nexport class OperationalReadingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9vcGVyYXRpb25hbC1yZWFkaW5nL29wZXJhdGlvbmFsLXJlYWRpbmcucGFnZS5zY3NzIn0= */\"","import { DatePipe, Location } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport {\n  Validators,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router, NavigationExtras } from \"@angular/router\";\nimport {\n  AlertController,\n  MenuController,\n  ModalController,\n} from \"@ionic/angular\";\n// import { BarcodeScanner } from \"@ionic-native/barcode-scanner/ngx\";\nimport { Camera, CameraOptions } from \"@ionic-native/camera/ngx\";\n\nimport { AssetRegistrationsService } from \"src/app/shared/services/asset-registrations/asset-registrations.service\";\nimport { NotificationsService } from \"src/app/shared/services/notifications/notifications.service\";\nimport { OperationalReadingsService } from \"src/app/shared/services/operational-readings/operational-readings.service\";\nimport { MeasurementTypePage } from \"../measurement-type/measurement-type.page\";\nimport { AssetsService } from 'src/app/shared/services/assets/assets.service';\nimport { OwningorganisationsService } from 'src/app/shared/services/owning-organisations/owning-organisations.service';\nimport { AssetLocatioSyncService } from 'src/app/shared/services/asset-location-sync/asset-location-sync.service';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n@Component({\n  selector: \"app-operational-reading\",\n  templateUrl: \"./operational-reading.page.html\",\n  styleUrls: [\"./operational-reading.page.scss\"],\n  providers: [DatePipe],\n})\nexport class OperationalReadingPage implements OnInit {\n\n  OwningOrganisationsList = []\n  OpreationalReading: any\n  MeasurementTypeData: any\n\n  // Forms\n  operationalreadingFormGroup: FormGroup;\n  myDate = new Date();\n\n  measurementtypes = [];\n  process: string;\n  showButton = 'yes'\n\n  constructor(\n    public alertController: AlertController,\n    public formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    public location: Location,\n    public menu: MenuController,\n    public modalController: ModalController,\n    private assetregistrationService: AssetRegistrationsService,\n    public notificationService: NotificationsService,\n    private operationalreadingService: OperationalReadingsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    // private barcodeScanner: BarcodeScanner,\n    private camera: Camera,\n    private assetsService: AssetsService,\n    private owningorganisationsService: OwningorganisationsService,\n    private assetLocatioSyncService: AssetLocatioSyncService,\n    private authService: AuthService\n  ) {\n    this.getOwningOrganisationsList()\n    this.operationalreadingFormGroup = this.formBuilder.group({\n      asset_id: new FormControl(\"\", Validators.required),\n      badge_number: new FormControl({value:\"\",disabled: true}, Validators.required),\n      current_value: new FormControl(\"\"),\n      measurent_identifier: new FormControl(\"\"),\n      measurent_type: new FormControl(\"\"),\n      initial_value_flag: new FormControl(\"\"),\n      owning_organization: new FormControl(\"\"),\n      reading_datetime: new FormControl(\"\"),\n      submitted_datetime: new FormControl(\"\"),\n      created_date: new FormControl(\"\"),\n      modified_date: new FormControl(\"\"),\n      location: new FormControl({value:\"\",disabled: true}),\n      asset_description: new FormControl({value:\"\",disabled: true}),\n      record_by: new FormControl(this.authService.userID),\n      modified_by: new FormControl(this.authService.userID)\n      // record_date: new FormControl(\n      //   this.datePipe.transform(this.myDate, \"yyyy-MM-dd\")\n      // ),\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        // To get process from work request list\n        this.process = this.router.getCurrentNavigation().extras.state.process;\n\n        // To set value based on previous page\n        this.OpreationalReading = this.router.getCurrentNavigation().extras.state.operationalreading\n        console.log(\"OpreationalReading = \", this.OpreationalReading)\n        this.operationalreadingFormGroup.patchValue({\n          ...this.router.getCurrentNavigation().extras.state.operationalreading,\n        });\n\n        if (this.router.getCurrentNavigation().extras.state.badge_no) {\n          this.showButton = 'yes'\n          console.log(\"this.showButton\", this.showButton)\n          let badge_no = this.router.getCurrentNavigation().extras.state\n            .badge_no;\n          this.assetsService\n            .filter(\"badge_no=\" + badge_no)\n            .subscribe((res) => {\n\n              console.log(\"res qweqweewwq\", res['results'][0].description);\n              if (res['results'][0].measurement_types) {\n                console.log(\"measurement_types.length = \", res['results'][0].measurement_types.length)\n                // res[0].measurement_types\n                let header = \"Operational Reading\"\n                let body = \"No Measurement Required From This Asset\"\n                this.emptyMeasuremntType(header, body)\n              }\n              this.MeasurementTypeData = res['results'][0].measurement_types\n              this.getAssetLocationSync(res['results'][0].node_id)\n              this.getAssetExtended(res['results'][0].id)\n              this.operationalreadingFormGroup.patchValue({\n                asset_description: res['results'][0].description,\n                badge_number: res['results'][0].badge_no,\n                asset_id: res['results'][0].asset_id,\n                owning_organization: res['results'][0].owning_access_group,\n              });\n            });\n        } else {\n          this.showButton = 'no'\n          console.log(\"this.showButton\", this.showButton)\n          this.assetsService\n            .filter(\"asset_id=\" + this.OpreationalReading.asset_id)\n            .subscribe((res) => {\n              console.log(\"asset qweqwe = \", res)\n\n              if (res['results'][0].measurement_types) {\n                console.log(\"measurement_types.length = \", res['results'][0].measurement_types.length)\n                let header = \"Operational Reading\"\n                let body = \"No Measurement Required From This Asset\"\n                this.emptyMeasuremntType(header, body)\n                // res[0].measurement_types\n              }\n\n              this.MeasurementTypeData = res['results'][0].measurement_types\n              this.operationalreadingFormGroup.patchValue({\n                asset_description: res['results'][0].description,\n                measurent_type: this.OpreationalReading.measurent_type,\n                reading_datetime: this.OpreationalReading['reading_datetime'],\n                current_value: this.OpreationalReading['current_value'],\n              });\n              console.log(\"this.operationalreadingFormGroup\", this.operationalreadingFormGroup)\n              this.getAssetLocationSync(res['results'][0].node_id)\n              this.getAssetExtended(res['results'][0].id)\n            });\n        }\n      }\n    });\n  }\n\n  ionViewDidEnter() {\n    console.log(\"ionViewDidEnter OperationalReadingPage\");\n  }\n\n  ionViewDidLeave() {\n    console.log(\"ionViewDidLeave OperationalReadingPage\")\n  }\n\n  ngOnInit() {\n    console.log(\"ngOnInit OperationalReadingPage\");\n\n    this.menu.enable(false, \"menuNotification\");\n  }\n\n  ngOnDestroy() {\n    console.log(\"ngOnDestroy OperationalReadingPage\");\n  }\n\n  getAssetLocationSync(node_id) {\n    // setInterval(() => {\n    console.log(\"test node_id => \", node_id)\n    this.assetLocatioSyncService.filter(\"node_id=\" + node_id).subscribe(\n      (res) => {\n        console.log(\"res assetlsService = \", res)\n\n        if (res.length != 0) {\n          this.operationalreadingFormGroup.patchValue({\n            location: res[0].description,\n            // node_id: res[0].node_id,\n            // description: \"NA\",\n            // long_description: res[0].detailed_description\n          })\n        }\n      },\n      (err) => {\n        console.log(\"err assetlsService = \", err)\n      }\n    )\n    // }, 10000);\n  }\n\n  getOwningOrganisationsList() {\n    this.owningorganisationsService.get().subscribe(\n      (res) => {\n        console.log(\"owningorganisationsService = \", res)\n        this.OwningOrganisationsList = res\n      }\n    )\n  }\n\n  getAssetExtended(assetid) {\n\n    this.assetsService\n      .getOneExtended(assetid)\n      .subscribe((res) => {\n\n        console.log(\"res measurementtypes = \", res);\n        this.MeasurementTypeData = res['results'].measurement_types\n      });\n  }\n\n  async presentAlert(header: string, message: string) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n  async emptyMeasuremntType(header, message) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: \"OK\",\n          handler: () => {\n            this.router.navigate([\"/technical/operational-reading-list\"]);\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async submit() {\n    this.operationalreadingService\n      .post(this.operationalreadingFormGroup.value)\n      .subscribe(\n        (res) => {\n          console.log(\"res\", res);\n          this.alertOperationalReading(\n            \"Operational Reading\",\n            // \"Your operational reading have successfully submitted into the system. Thank you.\"\n            \"Your operational reading has been successfully updated into the system.\"\n          );\n        },\n        (err) => {\n          console.error(\"err\", err);\n        }\n      );\n  }\n\n  async alertOperationalReading(header, message) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: \"OK\",\n          handler: () => {\n            this.router.navigate([\"/technical/operational-reading-list\"]);\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async clickAddMeasurementType() {\n    const modal = await this.modalController.create({\n      component: MeasurementTypePage,\n      componentProps: { asset: this.operationalreadingFormGroup.value },\n    });\n    modal.onDidDismiss().then((value) => {\n      this.operationalreadingFormGroup.patchValue({\n        ...value.data,\n        reading_date_time: new Date(value.data.reading_date).toISOString(),\n      });\n    });\n    return await modal.present();\n  }\n\n  clickBack() {\n    this.router.navigate([\"/technical/operational-reading-list\"]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n\n  async clickEdit(measurementtype) {\n    const modal = await this.modalController.create({\n      component: MeasurementTypePage,\n      componentProps: { measurementtype: measurementtype },\n    });\n    return await modal.present();\n  }\n\n  clickRemove(index: number) {\n    this.measurementtypes.splice(index, 1);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetRegistrationsModel } from \"./asset-registrations.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetRegistrationsService {\n  url: string = environment.baseUrl + \"v1/asset-registration/\";\n\n  // Data\n  public amodels: AssetRegistrationsModel[] = [];\n  public amodel: AssetRegistrationsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body): Observable<AssetRegistrationsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetRegistrationsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetRegistrationsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetRegistrationsModel>(urlID).pipe(\n      tap((res: AssetRegistrationsModel) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodel = res;\n      })\n    );\n  }\n\n  update(body): Observable<AssetRegistrationsModel> {\n    return this.http.patch<AssetRegistrationsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetRegistrationsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetRegistrationsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  patch_asset(body): Observable<AssetRegistrationsModel> {\n    let urlPatchAsset = this.url + \"patch_asset/\";\n    return this.http.post<any>(urlPatchAsset, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}