{"version":3,"sources":["./src/app/pages/technical/match/match.page.html","./src/app/pages/technical/match/match-routing.module.ts","./src/app/pages/technical/match/match.module.ts","./src/app/pages/technical/match/match.page.scss","./src/app/pages/technical/match/match.page.ts","./src/app/shared/services/asset-registrations/asset-registrations.service.ts"],"names":[],"mappings":"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","file":"match-match-module-es2015.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"homePage('/technical/tabs/tab1')\\\">\\n        <ion-icon\\n          src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\"\\n          style=\\\"font-size: 2rem\\\"\\n        ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"> Match </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge\\n          color=\\\"danger\\\"\\n          style=\\\"position: absolute; right: -5px; top: 1px\\\"\\n        ></ion-badge>\\n        <!--{{ notificationService.totalnotificationbyuser }}-->\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\">\\n    <ion-list class=\\\"line-input\\\">\\n      <small style=\\\"color: red\\\">* will return badge number value</small>\\n      <ion-item>\\n        <ion-label>2D Barcode </ion-label>\\n        <ion-toggle [(ngModel)]=\\\"bBarcode\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <small style=\\\"color: red\\\">* will return hex code value</small>\\n      <ion-item>\\n        <ion-label>RFID </ion-label>\\n        <ion-toggle [(ngModel)]=\\\"bRfid\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <div class=\\\"ion-padding\\\"></div>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Hex Code</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"hex_code\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Badge Number</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"badge_no\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n\\n  <div class=\\\"ion-padding ion-text-center\\\">\\n    <ion-button color=\\\"light\\\" (click)=\\\"cancel()\\\">Cancel</ion-button>\\n    <ion-button color=\\\"primary\\\" (click)=\\\"match()\\\">Match</ion-button>\\n  </div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MatchPage } from './match.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MatchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MatchPageRoutingModule } from './match-routing.module';\n\nimport { MatchPage } from './match.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatchPageRoutingModule\n  ],\n  declarations: [MatchPage]\n})\nexport class MatchPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9tYXRjaC9tYXRjaC5wYWdlLnNjc3MifQ== */\"","declare var broadcaster: any;\n\nimport { Component, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AlertController, MenuController } from \"@ionic/angular\";\n\nimport { AssetRegistrationsService } from \"src/app/shared/services/asset-registrations/asset-registrations.service\";\nimport { NotificationsService } from \"src/app/shared/services/notifications/notifications.service\";\n\n@Component({\n  selector: \"app-match\",\n  templateUrl: \"./match.page.html\",\n  styleUrls: [\"./match.page.scss\"],\n})\nexport class MatchPage implements OnInit {\n  private logs = new Array<string>();\n  public scanValue: any;\n  badge_no: any;\n  hex_code: any;\n  bBarcode: boolean = true;\n  bRfid: boolean = false;\n\n  constructor(\n    public alertController: AlertController,\n    public menu: MenuController,\n    private ngZone: NgZone,\n    private assetregistrationService: AssetRegistrationsService,\n    public notificationService: NotificationsService,\n    private router: Router\n  ) { }\n\n  private L(...args: any[]) {\n    let v = args.join(\" \");\n    console.log(v);\n    this.ngZone.run(() => {\n      this.logs.push(v);\n    });\n  }\n\n  ngOnInit() {\n    broadcaster._debug = true;\n    this.onRegister2DBarcodeListener();\n    this.onRegisterRFIDListener();\n  }\n\n  onRegister2DBarcodeListener() {\n    console.log(\"[register onRegister2DBarcodeListener] \");\n    const ev = \"com.scanner.broadcast\";\n    var isGlobal = true;\n\n    var listener = (event) => {\n      console.log(JSON.stringify(event));\n\n      if (event.SCAN_STATE == \"success\") {\n        this.ngZone.run(() => {\n          if (this.bBarcode) {\n            broadcaster.removeEventListener(ev, listener);\n            this.badge_no = event.data;\n          }\n        });\n      }\n    };\n\n    broadcaster.addEventListener(ev, isGlobal, listener);\n  }\n\n  onRegisterRFIDListener() {\n    console.log(\"[register onRegisterRFIDListener] \");\n    const ev = \"android.intent.action.scanner.RFID\";\n    var isGlobal = true;\n\n    var listener = (event) => {\n      console.log(JSON.stringify(event));\n\n      if (event.SCAN_STATE == \"success\") {\n        this.ngZone.run(() => {\n          if (this.bRfid) {\n            broadcaster.removeEventListener(ev, listener);\n            this.hex_code = event.data;\n          }\n        });\n      }\n    };\n    broadcaster.addEventListener(ev, isGlobal, listener);\n  }\n\n  match() {\n    if (this.hex_code && this.badge_no) {\n      let body = {\n        hex_code: this.hex_code,\n        badge_no: this.badge_no,\n      };\n      this.assetregistrationService.patch_asset(body).subscribe(\n        (res) => {\n          console.log(\"res\", res);\n          this.presentAlert(\n            \"Success\",\n            \"Your hex code have successfully updated in the database\"\n          );\n        },\n        (err) => {\n          console.error(\"err\", err);\n          this.presentAlert(\n            \"Error\",\n            \"The badge number is not found in the database. Please try again\"\n          );\n        }\n      );\n    } else {\n      this.presentAlert(\n        \"Error\",\n        \"Please scan both 2D barcode and RFID to get badge number and hex code\"\n      );\n    }\n  }\n\n  async presentAlert(header: string, message: string) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n\n  cancel() {\n    this.router.navigate([\"/technical/tabs/tab1\"]);\n  }\n\n  homePage(path: string) {\n    this.router.navigate([path]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetRegistrationsModel } from \"./asset-registrations.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetRegistrationsService {\n  url: string = environment.baseUrl + \"v1/asset-registration/\";\n\n  // Data\n  public amodels: AssetRegistrationsModel[] = [];\n  public amodel: AssetRegistrationsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body): Observable<AssetRegistrationsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetRegistrationsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetRegistrationsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetRegistrationsModel>(urlID).pipe(\n      tap((res: AssetRegistrationsModel) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodel = res;\n      })\n    );\n  }\n\n  update(body): Observable<AssetRegistrationsModel> {\n    return this.http.patch<AssetRegistrationsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetRegistrationsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetRegistrationsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  patch_asset(body): Observable<AssetRegistrationsModel> {\n    let urlPatchAsset = this.url + \"patch_asset/\";\n    return this.http.post<any>(urlPatchAsset, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}