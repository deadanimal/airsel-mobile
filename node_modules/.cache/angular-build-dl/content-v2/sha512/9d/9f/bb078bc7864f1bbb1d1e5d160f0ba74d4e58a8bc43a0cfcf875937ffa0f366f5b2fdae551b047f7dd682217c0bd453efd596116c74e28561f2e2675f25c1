{"version":3,"sources":["src/app/pages/technical/match/match.page.html","src/app/pages/technical/match/match-routing.module.ts","src/app/pages/technical/match/match.module.ts","src/app/pages/technical/match/match.page.scss","src/app/pages/technical/match/match.page.ts","src/app/shared/services/asset-registrations/asset-registrations.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"homePage('/technical/tabs/tab1')\\\">\\n        <ion-icon\\n          src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\"\\n          style=\\\"font-size: 2rem\\\"\\n        ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"> Match </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge\\n          color=\\\"danger\\\"\\n          style=\\\"position: absolute; right: -5px; top: 1px\\\"\\n        ></ion-badge>\\n        <!--{{ notificationService.totalnotificationbyuser }}-->\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\">\\n    <ion-list class=\\\"line-input\\\">\\n      <small style=\\\"color: red\\\">* will return badge number value</small>\\n      <ion-item>\\n        <ion-label>2D Barcode </ion-label>\\n        <ion-toggle [(ngModel)]=\\\"bBarcode\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <small style=\\\"color: red\\\">* will return hex code value</small>\\n      <ion-item>\\n        <ion-label>RFID </ion-label>\\n        <ion-toggle [(ngModel)]=\\\"bRfid\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <div class=\\\"ion-padding\\\"></div>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Hex Code</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"hex_code\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Badge Number</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"badge_no\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n\\n  <div class=\\\"ion-padding ion-text-center\\\">\\n    <ion-button color=\\\"light\\\" (click)=\\\"cancel()\\\">Cancel</ion-button>\\n    <ion-button color=\\\"primary\\\" (click)=\\\"match()\\\">Match</ion-button>\\n  </div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MatchPage } from './match.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MatchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MatchPageRoutingModule } from './match-routing.module';\n\nimport { MatchPage } from './match.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatchPageRoutingModule\n  ],\n  declarations: [MatchPage]\n})\nexport class MatchPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlY2huaWNhbC9tYXRjaC9tYXRjaC5wYWdlLnNjc3MifQ== */\"","declare var broadcaster: any;\n\nimport { Component, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AlertController, MenuController } from \"@ionic/angular\";\n\nimport { AssetRegistrationsService } from \"src/app/shared/services/asset-registrations/asset-registrations.service\";\nimport { NotificationsService } from \"src/app/shared/services/notifications/notifications.service\";\n\n@Component({\n  selector: \"app-match\",\n  templateUrl: \"./match.page.html\",\n  styleUrls: [\"./match.page.scss\"],\n})\nexport class MatchPage implements OnInit {\n  private logs = new Array<string>();\n  public scanValue: any;\n  badge_no: any;\n  hex_code: any;\n  bBarcode: boolean = true;\n  bRfid: boolean = false;\n\n  constructor(\n    public alertController: AlertController,\n    public menu: MenuController,\n    private ngZone: NgZone,\n    private assetregistrationService: AssetRegistrationsService,\n    public notificationService: NotificationsService,\n    private router: Router\n  ) { }\n\n  private L(...args: any[]) {\n    let v = args.join(\" \");\n    console.log(v);\n    this.ngZone.run(() => {\n      this.logs.push(v);\n    });\n  }\n\n  ngOnInit() {\n    broadcaster._debug = true;\n    this.onRegister2DBarcodeListener();\n    this.onRegisterRFIDListener();\n  }\n\n  onRegister2DBarcodeListener() {\n    console.log(\"[register onRegister2DBarcodeListener] \");\n    const ev = \"com.scanner.broadcast\";\n    var isGlobal = true;\n\n    var listener = (event) => {\n      console.log(JSON.stringify(event));\n\n      if (event.SCAN_STATE == \"success\") {\n        this.ngZone.run(() => {\n          if (this.bBarcode) {\n            broadcaster.removeEventListener(ev, listener);\n            this.badge_no = event.data;\n          }\n        });\n      }\n    };\n\n    broadcaster.addEventListener(ev, isGlobal, listener);\n  }\n\n  onRegisterRFIDListener() {\n    console.log(\"[register onRegisterRFIDListener] \");\n    const ev = \"android.intent.action.scanner.RFID\";\n    var isGlobal = true;\n\n    var listener = (event) => {\n      console.log(JSON.stringify(event));\n\n      if (event.SCAN_STATE == \"success\") {\n        this.ngZone.run(() => {\n          if (this.bRfid) {\n            broadcaster.removeEventListener(ev, listener);\n            this.hex_code = event.data;\n          }\n        });\n      }\n    };\n    broadcaster.addEventListener(ev, isGlobal, listener);\n  }\n\n  match() {\n    if (this.hex_code && this.badge_no) {\n      let body = {\n        hex_code: this.hex_code,\n        badge_no: this.badge_no,\n      };\n      this.assetregistrationService.patch_asset(body).subscribe(\n        (res) => {\n          console.log(\"res\", res);\n          this.presentAlert(\n            \"Success\",\n            \"Your hex code have successfully updated in the database\"\n          );\n        },\n        (err) => {\n          console.error(\"err\", err);\n          this.presentAlert(\n            \"Error\",\n            \"The badge number is not found in the database. Please try again\"\n          );\n        }\n      );\n    } else {\n      this.presentAlert(\n        \"Error\",\n        \"Please scan both 2D barcode and RFID to get badge number and hex code\"\n      );\n    }\n  }\n\n  async presentAlert(header: string, message: string) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n\n  cancel() {\n    this.router.navigate([\"/technical/tabs/tab1\"]);\n  }\n\n  homePage(path: string) {\n    this.router.navigate([path]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetRegistrationsModel } from \"./asset-registrations.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetRegistrationsService {\n  url: string = environment.baseUrl + \"v1/asset-registration/\";\n\n  // Data\n  public amodels: AssetRegistrationsModel[] = [];\n  public amodel: AssetRegistrationsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body): Observable<AssetRegistrationsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetRegistrationsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetRegistrationsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetRegistrationsModel>(urlID).pipe(\n      tap((res: AssetRegistrationsModel) => {\n        console.log(\"AssetRegistrationsModel\", res);\n        this.amodel = res;\n      })\n    );\n  }\n\n  update(body): Observable<AssetRegistrationsModel> {\n    return this.http.patch<AssetRegistrationsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetRegistrationsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetRegistrationsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n\n  patch_asset(body): Observable<AssetRegistrationsModel> {\n    let urlPatchAsset = this.url + \"patch_asset/\";\n    return this.http.post<any>(urlPatchAsset, body).pipe(\n      tap((res) => {\n        console.log(\"AssetRegistrationsModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"match-match-module-es5.js"}