{"version":3,"sources":["src/app/pages/technical/asset-registration/asset-registration.page.html","src/app/pages/technical/asset-registration/asset-registration-routing.module.ts","src/app/pages/technical/asset-registration/asset-registration.module.ts","src/app/pages/technical/asset-registration/asset-registration.page.scss","src/app/pages/technical/asset-registration/asset-registration.page.ts","src/app/shared/services/asset-attribute-column/asset-attribute-column.service.ts","src/app/shared/services/asset-attribute-predefine/asset-attribute-prodefine.service.ts","src/app/shared/services/asset-attribute-reference/asset-attribute-reference.service.ts","src/app/shared/services/asset-groups/asset-groups.service.ts","src/app/shared/services/maintenance-manager/maintenance-manager.service.ts","src/app/shared/services/organisations/organisations.service.ts","src/app/shared/services/regions/regions.service.ts","src/app/shared/services/state/states.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"clickBack()\\\">\\n        <ion-icon src=\\\"../../../../assets/icon/air-selangor-icon.svg\\\" style=\\\"font-size: 2rem\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"font-weight: bold\\\"> Asset Registration </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openNotification()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge size=\\\"small\\\" color=\\\"danger\\\" style=\\\"position: absolute; right: -5px; top: 1px\\\">\\n          {{ notificationService.totalnotificationbyuser }}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"content-core\\\">\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"segmentModal == 'first'\\\">\\n    <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper [disableRipple]=\\\"isDisableRipple\\\">\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n          <ng-template matStepLabel>Asset Grouping</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Asset Primary Category</ion-label>\\n              <!-- <ion-select placeholder=\\\"Please select\\\" (ionChange)='onChangeAssPrimaryCat($event.target.value)'\\n                formControlName=\\\"asset_primary_category\\\">\\n                <ion-select-option *ngFor=\\\"let primarycategory of primarycategories\\\"\\n                  [value]=\\\"primarycategory.asset_type_code\\\">\\n                  {{ primarycategory.asset_type_description }}</ion-select-option>\\n              </ion-select> -->\\n\\n              <ionic-selectable [items]=\\\"primarycategories\\\" itemValueField=\\\"id\\\" itemTextField=\\\"asset_type_description\\\"\\n                [canSearch]=\\\"true\\\" formControlName=\\\"asset_primary_category\\\" (onChange)=\\\"onChangeAssPrimaryCat($event)\\\">\\n              </ionic-selectable>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.primary_category }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Asset Identity</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"asset_identity\\\" [required]=\\\"true\\\"></ion-input>\\n              <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"identity\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let identity of identities\\\"\\n                  [value]=\\\"identity.id\\\"\\n                  >{{ identity.name }}</ion-select-option\\n                >\\n              </ion-select> -->\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.identity }}</small\\n              > -->\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Sub-category 1</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"sub_category_1\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.sub_category_1 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Sub-category 2</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"sub_category_2\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.sub_category_2 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Model number</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"model_number\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n              >{{ validation_messages.sub_category_2 }}</small\\n            > -->\\n            </ion-item>\\n            <ion-input type=\\\"hidden\\\" formControlName=\\\"bo\\\" [value]=\\\"assetAttrData\\\"></ion-input>\\n          </div>\\n\\n          <!-- <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div> -->\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\n          <ng-template matStepLabel>Asset Categorization</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <div class=\\\"row\\\">\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Asset or Component Type</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"asset_or_component_type\\\" readonly [value]=\\\"assetOrComponent\\\">\\n                </ion-input>\\n                <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"asset_or_component_type\\\">\\n                  <ion-select-option *ngFor=\\\"let assComp of assetOrCompList\\\" [value]=\\\"assComp.id\\\">{{ assComp.name }}\\n                  </ion-select-option>\\n                </ion-select> -->\\n                <!-- <small class=\\\"validation_messages\\\"\\n                  >{{ validation_messages.type_asset }}</small\\n                > -->\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Asset Class/Asset Category</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"asset_class_asset_category\\\" [value]=\\\"assetCategoryData\\\">\\n                </ion-input>\\n                <!-- <small class=\\\"validation_messages\\\"\\n                  >{{ validation_messages.category }}</small\\n                > -->\\n              </ion-item>\\n              <ion-radio-group formControlName=\\\"handed_over_asset_or_procured\\\">\\n                <ion-list-header>\\n                  <ion-label>Hand Over Asset or Procured</ion-label>\\n                </ion-list-header>\\n\\n                <ion-item>\\n                  <ion-label>Asset Handover</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"AH\\\"></ion-radio>\\n                </ion-item>\\n\\n                <ion-item>\\n                  <ion-label>Procured</ion-label>\\n                  <ion-radio slot=\\\"start\\\" value=\\\"PC\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.acquired_by }}</small\\n              > -->\\n            </div>\\n          </div>\\n\\n          <!-- <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div> -->\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\n        <form [formGroup]=\\\"thirdFormGroup\\\">\\n          <ng-template matStepLabel>Asset Owning</ng-template>\\n          <div class=\\\"line-input\\\">\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Asset Owning Department</ion-label>\\n              <ion-select formControlName=\\\"asset_owning_department\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let assOwnDep of assOwningDepartList\\\" [value]=\\\"assOwnDep.id\\\">\\n                  {{ assOwnDep.name }}\\n                </ion-select-option>\\n              </ion-select>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.sub_category_2 }}</small> \\n              -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Main Operation</ion-label>\\n              <ion-select formControlName=\\\"main_operation\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let mainOpList of mainOperationList\\\" [value]=\\\"mainOpList.id\\\">\\n                  {{ mainOpList.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Region</ion-label>\\n              <ion-select formControlName=\\\"region\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region.id\\\">{{ region.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Operation</ion-label>\\n              <ion-select formControlName=\\\"operation\\\" placeholder=\\\"Please select\\\">\\n                <ion-select-option *ngFor=\\\"let operateList of operationList\\\" [value]=\\\"operateList.id\\\">\\n                  {{ operateList.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-radio-group (click)=\\\"onChangeParent($event.target.value)\\\">\\n              <ion-list-header>\\n                <ion-label>Parent Location</ion-label>\\n              </ion-list-header>\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <div>\\n                      <ion-item>\\n                        <ion-label>New Parent</ion-label>\\n                        <!-- <ion-radio (change)='onChangeParent($event.target.value)' slot=\\\"start\\\" value=\\\"true\\\" checked></ion-radio> -->\\n                        <!-- <ion-radio (ionSelect)=\\\"onChangeParent('true')\\\"></ion-radio> -->\\n                        <ion-radio slot=\\\"start\\\" value=\\\"0\\\" selected=\\\"selected\\\"></ion-radio>\\n                      </ion-item>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col>\\n                    <div>\\n                      <ion-item>\\n                        <ion-label>Existing Parent</ion-label>\\n                        <ion-radio slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\n                      </ion-item>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-radio-group>\\n\\n            <ion-item *ngIf=\\\"parentLocaDiv == 0\\\">\\n              <ion-label position=\\\"stacked\\\">New</ion-label>\\n              <ion-input formControlName=\\\"new_parent_location\\\" type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"parentLocaDiv == 1\\\">\\n              <ion-label position=\\\"stacked\\\">Existing</ion-label>\\n              <ion-select formControlName=\\\"parent_location\\\" type=\\\"text\\\"></ion-select>\\n            </ion-item>\\n\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"fourthFormGroup\\\">\\n        <form [formGroup]=\\\"fourthFormGroup\\\">\\n          <ng-template matStepLabel>Asset Location</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-radio-group (click)=\\\"onChangeAssLoc($event.target.value)\\\">\\n              <ion-list-header>\\n                <ion-label>Asset Location</ion-label>\\n              </ion-list-header>\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label>New</ion-label>\\n                      <!-- <ion-radio (change)='onChangeParent($event.target.value)' slot=\\\"start\\\" value=\\\"true\\\" checked></ion-radio> -->\\n                      <!-- <ion-radio (ionSelect)=\\\"onChangeParent('true')\\\"></ion-radio> -->\\n                      <ion-radio slot=\\\"start\\\" value=\\\"0\\\" checked></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label>Existing</ion-label>\\n                      <ion-radio slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-radio-group>\\n\\n            <ion-item *ngIf=\\\"assetLocDiv == 1\\\">\\n              <ion-label>Location</ion-label>\\n\\n              <!-- <ionic-selectable [items]=\\\"primarycategories\\\" itemValueField=\\\"id\\\" itemTextField=\\\"asset_type_description\\\"\\n                [canSearch]=\\\"true\\\" formControlName=\\\"asset_primary_category\\\" (onChange)=\\\"onChangeAssPrimaryCat($event)\\\">\\n              </ionic-selectable> -->\\n              <ionic-selectable [items]=\\\"assetLocationData\\\" itemValueField=\\\"uuid\\\" itemTextField=\\\"description\\\"\\n                [canSearch]=\\\"true\\\" formControlName=\\\"parent_location\\\" (ionChange)=\\\"portChange($event)\\\">\\n              </ionic-selectable>\\n            </ion-item>\\n\\n            <div *ngIf=\\\"assetLocDiv == 0\\\">\\n\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Location Description</ion-label>\\n                <ion-input formControlName=\\\"location_description\\\" placeholder=\\\"Location Description\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Building</ion-label>\\n                <ion-input formControlName=\\\"building\\\" placeholder=\\\"Building\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Address 1</ion-label>\\n                <ion-input formControlName=\\\"address_line_1\\\" placeholder=\\\"Address 1\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Address 2</ion-label>\\n                <ion-input formControlName=\\\"address_line_2\\\" placeholder=\\\"Address 2\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Address 3</ion-label>\\n                <ion-input formControlName=\\\"address_line_3\\\" placeholder=\\\"Address 3\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">City</ion-label>\\n                <ion-input formControlName=\\\"city\\\" placeholder=\\\"City\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">State</ion-label>\\n                <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"state\\\">\\n                  <ion-select-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.code\\\">\\n                    {{ state.state }}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Postal Code</ion-label>\\n                <ion-input formControlName=\\\"postal_code\\\" placeholder=\\\"Postal Code\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Country</ion-label>\\n                <ion-input formControlName=\\\"country\\\" placeholder=\\\"Country\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Tag Number</ion-label>\\n                <ion-input formControlName=\\\"tag_number\\\" placeholder=\\\"Tag Number\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Location/Department</ion-label>\\n                <ion-select placeholder=\\\"Please select\\\" style=\\\"max-width: 100% !important;\\\"\\n                  formControlName=\\\"service_area\\\">\\n                  <ion-select-option *ngFor=\\\"let servArea of servAreaList\\\" [value]=\\\"servArea.id\\\">\\n                    {{ servArea.name }}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Location Main Contact</ion-label>\\n                <ion-input formControlName=\\\"location_main_contact\\\" placeholder=\\\"Location Main Contact\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Maintenance Manager</ion-label>\\n                <!-- <ion-input formControlName=\\\"location_asset_maintenance_manager\\\"\\n                  placeholder=\\\"Location/Asset Maintenance Manager\\\"></ion-input> -->\\n                <!-- <ion-select placeholder=\\\"Please select\\\" style=\\\"max-width: 100% !important;\\\"\\n                  formControlName=\\\"location_asset_maintenance_manager\\\">\\n                  <ion-select-option *ngFor=\\\"let maintMan of maintenanceManagerData\\\" [value]=\\\"maintMan.id\\\">\\n                    {{ maintMan.description }}</ion-select-option>\\n                </ion-select> -->\\n                <ionic-selectable [items]=\\\"maintenanceManagerData\\\" style=\\\"max-width: 100% !important;\\\"\\n                  itemValueField=\\\"id\\\" itemTextField=\\\"description\\\" [canSearch]=\\\"true\\\"\\n                  formControlName=\\\"location_asset_maintenance_manager\\\" (ionChange)=\\\"onChangeLocAssMaiMan($event)\\\">\\n                </ionic-selectable>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Planner</ion-label>\\n                <!-- <ion-input formControlName=\\\"maintenance_planner\\\" placeholder=\\\"Planner\\\"></ion-input> -->\\n                <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"maintenance_planner\\\">\\n                  <ion-select-option *ngFor=\\\"let planner of plannerData\\\" [value]=\\\"planner.id\\\">\\n                    {{ planner.description }}</ion-select-option>\\n                </ion-select> -->\\n                <ionic-selectable [items]=\\\"plannerData\\\" style=\\\"max-width: 100% !important;\\\" itemValueField=\\\"id\\\"\\n                  itemTextField=\\\"description\\\" [canSearch]=\\\"true\\\" formControlName=\\\"maintenance_planner\\\"\\n                  (ionChange)=\\\"onChangeLocAssMaiMan($event)\\\">\\n                </ionic-selectable>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">GIS/ESRI ID</ion-label>\\n                <ion-input formControlName=\\\"gis_esri_id\\\" placeholder=\\\"GIS/ESRI ID\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Latitude</ion-label>\\n                <ion-input formControlName=\\\"latitude\\\" placeholder=\\\"Latitude\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Longitude</ion-label>\\n                <ion-input formControlName=\\\"longitude\\\" placeholder=\\\"Longitude\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Asset Critically</ion-label>\\n                <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"asset_criticality\\\">\\n                  <ion-select-option *ngFor=\\\"let assCrit of assCriticalList\\\" [value]=\\\"assCrit.id\\\">\\n                    {{ assCrit.name }}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <!-- <ion-item>\\n                <ion-label position=\\\"stacked\\\">Cost Center</ion-label>\\n                <ion-input formControlName=\\\"cost_center\\\" placeholder=\\\"Cost Center\\\"></ion-input>\\n              </ion-item> -->\\n\\n            </div>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"fifthFormGroup\\\">\\n        <form [formGroup]=\\\"fifthFormGroup\\\">\\n          <ng-template matStepLabel>Asset Detailed Description</ng-template>\\n          <div class=\\\"line-input\\\">\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Size/Capacity 1</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"size_capacity_1\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.size_capacity_1 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Unit Measurement 1</ion-label>\\n              <!-- <ion-input type=\\\"text\\\" formControlName=\\\"size_capacity_1_unit_measurement\\\"></ion-input> -->\\n\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"size_capacity_1_unit_measurement\\\">\\n                <ion-select-option *ngFor=\\\"let meaType1 of measurement_types\\\" [value]=\\\"meaType1.value\\\">\\n                  {{ meaType1.desc }}</ion-select-option>\\n              </ion-select>\\n\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Size/Capacity 2</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"size_capacity_2\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                        >{{ validation_messages.size_capacity_2 }}</small\\n                      > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Unit Measurement 2</ion-label>\\n              <!-- <ion-input type=\\\"text\\\" formControlName=\\\"size_capacity_2_unit_measurement\\\"></ion-input> -->\\n\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"size_capacity_2_unit_measurement\\\">\\n                <ion-select-option *ngFor=\\\"let meaType2 of measurement_types\\\" [value]=\\\"meaType2.value\\\">\\n                  {{ meaType2.desc }}</ion-select-option>\\n              </ion-select>\\n\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Size/Capacity 3</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"size_capacity_3\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.size_capacity_3 }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Unit Measurement 3</ion-label>\\n              <!-- <ion-input type=\\\"text\\\" formControlName=\\\"size_capacity_3_unit_measurement\\\"></ion-input> -->\\n\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"size_capacity_3_unit_measurement\\\">\\n                <ion-select-option *ngFor=\\\"let meaType3 of measurement_types\\\" [value]=\\\"meaType3.value\\\">\\n                  {{ meaType3.desc }}</ion-select-option>\\n              </ion-select>\\n\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Detailed Description</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"detailed_description\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Serial Number</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"serial_number\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.serial_number }}</small\\n              > -->\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Tag Number</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"asset_tag_number\\\"></ion-input>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.asset_tag_number }}</small\\n              > -->\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Purchased/Installed/Hand Over Date</ion-label>\\n              <ion-datetime displayFormat=\\\"MMM, DD YYYY\\\" formControlName=\\\"purchase_date_installed_handed_over_date\\\">\\n              </ion-datetime>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.purchase_date_installed_handed_over_date }}</small\\n              > -->\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Condition Rating </ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"condition_rating\\\">\\n                <ion-select-option *ngFor=\\\"let rating of conditionRatingList\\\" [value]=\\\"rating.id\\\">{{ rating.name }}\\n                </ion-select-option>\\n              </ion-select>\\n              <!-- <small class=\\\"validation_messages\\\"\\n                >{{ validation_messages.rating }}</small\\n              > -->\\n            </ion-item>\\n\\n            <!-- <ion-item>\\n              <ion-label position=\\\"stacked\\\">Status</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"status\\\">\\n                <ion-select-option *ngFor=\\\"let status of statuses\\\" [value]=\\\"status.value\\\">{{ status.name }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item> -->\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Maintenance Specification</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"maintenance_specification\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Measurement Type</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"measurement_type\\\">\\n                <ion-select-option *ngFor=\\\"let measuringtype of measuringtypes\\\" [value]=\\\"measuringtype.value\\\">\\n                  {{ measuringtype.name }}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Warranty</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"warranty\\\">\\n                <ion-select-option *ngFor=\\\"let warranti of warrantyList\\\" [value]=\\\"warranti.id\\\">\\n                  {{ warranti.name }}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Actual warranty period</ion-label>\\n              <ion-input formControlName=\\\"actual_warranty_period\\\" type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Warranty vendor name</ion-label>\\n              <ion-input formControlName=\\\"warranty_vendor_name\\\" type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n          </div>\\n\\n          <!-- <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div> -->\\n        </form>\\n      </mat-step>\\n      <!-- <mat-step [stepControl]=\\\"sixthFormGroup\\\">\\n        <form [formGroup]=\\\"sixthFormGroup\\\">\\n          <ng-template matStepLabel>Asset Warranty Information</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-radio-group formControlName=\\\"is_warranty\\\">\\n              <ion-list-header>\\n                <ion-label>Warranty</ion-label>\\n              </ion-list-header>\\n\\n              <ion-item>\\n                <ion-label>Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"true\\\"></ion-radio>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label>No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"false\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Actual Warranty Period</ion-label>\\n              <ion-input\\n                type=\\\"number\\\"\\n                formControlName=\\\"warranty_period_actual\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Warranty Vendor Name</ion-label>\\n              <ion-select\\n                placeholder=\\\"Please select\\\"\\n                formControlName=\\\"warranty_vendor\\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let organisation of organisations\\\"\\n                  [value]=\\\"organisation.id\\\"\\n                  >{{ organisation.name }}</ion-select-option\\n                >\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n\\n          <div>\\n            <ion-button color=\\\"danger\\\" size=\\\"small\\\" matStepperPrevious>\\n              Back\\n            </ion-button>\\n            <ion-button color=\\\"success\\\" size=\\\"small\\\" matStepperNext\\n              >Next</ion-button\\n            >\\n          </div>\\n        </form>\\n      </mat-step> -->\\n      <!-- <mat-step [stepControl]=\\\"seventhFormGroup\\\">\\n        <form [formGroup]=\\\"seventhFormGroup\\\">\\n          <ng-template matStepLabel>PO Detail</ng-template>\\n          <div class=\\\"line-input\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Purchase Order Vendor Name</ion-label>\\n              <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"po_vendor\\\">\\n                <ion-select-option\\n                  *ngFor=\\\"let organisation of organisations\\\"\\n                  [value]=\\\"organisation.id\\\"\\n                  >{{ organisation.name }}</ion-select-option\\n                >\\n              </ion-select>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Purchase Cost</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"po_cost\\\"></ion-input>\\n            </ion-item>\\n          </div>\\n        </form>\\n      </mat-step> -->\\n    </mat-vertical-stepper>\\n\\n    <div class=\\\"ion-padding ion-text-center\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"changeSegment('second')\\\">Next</ion-button>\\n      <ion-button color=\\\"light\\\" (click)=\\\"clickBack()\\\">Cancel</ion-button>\\n    </div>\\n  </div>\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"segmentModal == 'second'\\\">\\n    <h4 class=\\\"ion-text-center ion-padding\\\">Asset Technical Spec</h4>\\n\\n    <ion-list class=\\\"ion-padding line-input\\\">\\n      <form [formGroup]=\\\"sixthFormGroup\\\">\\n        <!-- <div *ngIf=\\\"assetAttrColumn != ''\\\"> -->\\n        <ion-item *ngIf=\\\"assetAttrColumn.bottom_water_level == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Bottom water level</ion-label>\\n          <ion-input formControlName=\\\"bottom_water_level\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.brand == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Brand</ion-label>\\n          <ion-input formControlName=\\\"brand\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.capacity_size == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Capacity size</ion-label>\\n          <ion-input formControlName=\\\"capacity_size\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.closing_torque == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Closing torque</ion-label>\\n          <ion-input formControlName=\\\"closing_torque\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.communication_protocol == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Comunication protocol</ion-label>\\n          <ion-input formControlName=\\\"communication_protocol\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.coverage_range == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Coverage range</ion-label>\\n          <ion-input formControlName=\\\"coverage_range\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.dimention == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Dimention</ion-label>\\n          <ion-input formControlName=\\\"dimention\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.environmental_performance == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Environmental Performance</ion-label>\\n          <ion-input formControlName=\\\"environmental_performance\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.flow_rate == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Flow rate</ion-label>\\n          <ion-input formControlName=\\\"flow_rate\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.frequency == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Frequency</ion-label>\\n          <ion-input formControlName=\\\"frequency\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.horse_power == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Horse power</ion-label>\\n          <ion-input formControlName=\\\"horse_power\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.hysteresis == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Hysterasis</ion-label>\\n          <ion-input formControlName=\\\"hysteresis\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.infrastructure_status == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Infrastracture status</ion-label>\\n          <ion-input formControlName=\\\"infrastructure_status\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.infrastructure_status_reason == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Infrastracture status reason</ion-label>\\n          <ion-input formControlName=\\\"infrastructure_status_reason\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.inlet_diameter == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Inlet diameter</ion-label>\\n          <ion-input formControlName=\\\"inlet_diameter\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.installation == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Installation</ion-label>\\n          <ion-input formControlName=\\\"installation\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.insulation == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Insulation</ion-label>\\n          <ion-input formControlName=\\\"insulation\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.legal_name == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Legal name</ion-label>\\n          <ion-input formControlName=\\\"legal_name\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.manufacturer == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Manufacturer</ion-label>\\n          <!-- <ion-input formControlName=\\\"manufacturer\\\" type=\\\"text\\\"></ion-input> -->\\n          <!-- <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"manufacturer\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreMan of assetAttPredefineMans\\\" [value]=\\\"assAttPreMan.id\\\">\\n              {{ assAttPreMan.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select> -->\\n\\n          <ionic-selectable [items]=\\\"assetAttPredefineMans\\\" style=\\\"max-width: 100% !important;\\\" itemValueField=\\\"id\\\"\\n            itemTextField=\\\"characteristic_value\\\" [canSearch]=\\\"true\\\" formControlName=\\\"manufacturer\\\"\\n            (ionChange)=\\\"onChangeLocAssMaiMan($event)\\\">\\n          </ionic-selectable>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.manufacturer_year == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Manufacturer year</ion-label>\\n          <ion-input formControlName=\\\"manufacturer_year\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.manufacture_part_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Manufacturer part number</ion-label>\\n          <ion-input formControlName=\\\"manufacture_part_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.material_type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Material type</ion-label>\\n          <ion-input formControlName=\\\"material_type\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.model == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Model</ion-label>\\n          <ion-input formControlName=\\\"model\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.motor_current == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Motor current</ion-label>\\n          <ion-input formControlName=\\\"motor_current\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.no_of_channel == true\\\">\\n          <ion-label required position=\\\"stacked\\\">No of channer</ion-label>\\n          <ion-input formControlName=\\\"no_of_channel\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.no_of_phases == true\\\">\\n          <ion-label required position=\\\"stacked\\\">No of phase</ion-label>\\n          <ion-input formControlName=\\\"no_of_phases\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.no_of_stage == true\\\">\\n          <ion-label required position=\\\"stacked\\\">No of stage</ion-label>\\n          <ion-input formControlName=\\\"no_of_stage\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.opening_torque == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Opening torque</ion-label>\\n          <ion-input formControlName=\\\"opening_torque\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.outlet_diameter == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Outlet diameter</ion-label>\\n          <ion-input formControlName=\\\"outlet_diameter\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.power_supply_type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Power supply type</ion-label>\\n          <ion-input formControlName=\\\"power_supply_type\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.pump_head == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Pump head</ion-label>\\n          <ion-input formControlName=\\\"pump_head\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.revolutions_per_minute == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Revolution per minute</ion-label>\\n          <ion-input formControlName=\\\"revolutions_per_minute\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.source_from == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Source from</ion-label>\\n          <ion-input formControlName=\\\"source_from\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.staging_height == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Staging height</ion-label>\\n          <ion-input formControlName=\\\"staging_height\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.supply_location == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Supply location</ion-label>\\n          <ion-input formControlName=\\\"supply_location\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.temperature == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Temperature</ion-label>\\n          <ion-input formControlName=\\\"temperature\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.top_water_level == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Top water level</ion-label>\\n          <ion-input formControlName=\\\"top_water_level\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Type</ion-label>\\n          <ion-input formControlName=\\\"type\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.valve_diameter == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Value diameter</ion-label>\\n          <ion-input formControlName=\\\"valve_diameter\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.valve_pressure_rating == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Valve pressuring rate</ion-label>\\n          <ion-input formControlName=\\\"valve_pressure_rating\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <!-- <ion-list-header *ngIf=\\\"assetAttrColumn != ''\\\">\\n          <ion-label>Vehicle</ion-label>\\n        </ion-list-header> -->\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_chasis_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">chassis number</ion-label>\\n          <ion-input formControlName=\\\"vehicle_chasis_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_engine_capacity == true\\\">\\n          <ion-label required position=\\\"stacked\\\">engine capacity</ion-label>\\n          <ion-input formControlName=\\\"vehicle_engine_capacity\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_engine_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">engine number</ion-label>\\n          <ion-input formControlName=\\\"vehicle_engine_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_vendor == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance vendor</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_insurance_vendor\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_insurance_vendor\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreInsVen of assetAttPredefinePreInsVens\\\" [value]=\\\"assAttPreInsVen.id\\\">\\n              {{ assAttPreInsVen.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_model == true\\\">\\n          <ion-label required position=\\\"stacked\\\">model</ion-label>\\n          <ion-input formControlName=\\\"vehicle_model\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_auto_windscreen_insured == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance windscreen</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_auto_windscreen_insured\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_cover_note_number == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance cover no</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_cover_note_number\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_date_period_from == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance date from</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_date_period_from\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_date_period_to == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance date to</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_date_period_to\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_no_claim_discount == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance claim discount no</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_no_claim_discount\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_policy_type == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance policy type</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_insurance_policy_type\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_insurance_policy_type\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreInsPol of assetAttPredefineInsPols\\\" [value]=\\\"assAttPreInsPol.id\\\">\\n              {{ assAttPreInsPol.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_sum_insured == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance sum insured</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_sum_insured\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_insurance_total_premium == true\\\">\\n          <ion-label required position=\\\"stacked\\\">insurance total premium</ion-label>\\n          <ion-input formControlName=\\\"vehicle_insurance_total_premium\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_puspakom_date_inspection == true\\\">\\n          <ion-label required position=\\\"stacked\\\">puspakom date inspection</ion-label>\\n          <ion-input formControlName=\\\"vehicle_puspakom_date_inspection\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_owner_status == true\\\">\\n          <ion-label required position=\\\"stacked\\\">owner status</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_owner_status\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_owner_status\\\">\\n            <ion-select-option *ngFor=\\\"let assAttPreVehOwnSta of assetAttPredefineOwnStas\\\"\\n              [value]=\\\"assAttPreVehOwnSta.id\\\">\\n              {{ assAttPreVehOwnSta.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_register_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">register date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_register_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_roadtax_rate == true\\\">\\n          <ion-label required position=\\\"stacked\\\">roadtax rate</ion-label>\\n          <ion-input formControlName=\\\"vehicle_roadtax_rate\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_puspakom_expired_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">puspakom expired date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_puspakom_expired_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_spad_permit_date_period_to == true\\\">\\n          <ion-label required position=\\\"stacked\\\">spad permit date to</ion-label>\\n          <ion-input formControlName=\\\"vehicle_spad_permit_date_period_to\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_roadtax_renew_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">roadtax renew date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_roadtax_renew_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_roadtax_expired_date == true\\\">\\n          <ion-label required position=\\\"stacked\\\">roadtax expire date</ion-label>\\n          <ion-input formControlName=\\\"vehicle_roadtax_expired_date\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_spad_no_license_operator == true\\\">\\n          <ion-label required position=\\\"stacked\\\">spad no license operator</ion-label>\\n          <ion-input formControlName=\\\"vehicle_spad_no_license_operator\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_spad_permit_date_period_from == true\\\">\\n          <ion-label required position=\\\"stacked\\\">spad permit date from</ion-label>\\n          <ion-input formControlName=\\\"vehicle_spad_permit_date_period_from\\\" type=\\\"date\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_seating_capacity == true\\\">\\n          <ion-label required position=\\\"stacked\\\">seating capacity</ion-label>\\n          <ion-input formControlName=\\\"vehicle_seating_capacity\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.vehicle_registration_owner == true\\\">\\n          <ion-label required position=\\\"stacked\\\">registration owner</ion-label>\\n          <!-- <ion-input formControlName=\\\"vehicle_registration_owner\\\" type=\\\"text\\\"></ion-input> -->\\n          <ion-select placeholder=\\\"Please select\\\" formControlName=\\\"vehicle_registration_owner\\\">\\n            <ion-select-option *ngFor=\\\"let assAttregOw of assetAttPredefineRegOwns\\\"\\n              [value]=\\\"assAttregOw.characteristic_value\\\">\\n              {{ assAttregOw.characteristic_value }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"assetAttrColumn.voltage == true\\\">\\n          <ion-label required position=\\\"stacked\\\">Voltage</ion-label>\\n          <ion-input formControlName=\\\"voltage\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <!-- </div> -->\\n\\n      </form>\\n    </ion-list>\\n\\n    <div class=\\\"ion-text-center ion-padding\\\">\\n      <ion-button color=\\\"light\\\" (click)=\\\"changeSegment('first')\\\">Back</ion-button>\\n      <ion-button *ngIf=\\\"process != 'view'\\\" (click)=\\\"register()\\\">Submit</ion-button>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AssetRegistrationPage } from './asset-registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssetRegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssetRegistrationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AssetRegistrationPageRoutingModule } from './asset-registration-routing.module';\n\nimport { AssetRegistrationPage } from './asset-registration.page';\nimport { MatStepperModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AssetRegistrationPageRoutingModule,\n    MatInputModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    IonicSelectableModule\n  ],\n  declarations: [AssetRegistrationPage]\n})\nexport class AssetRegistrationPageModule { }\n","export default \".validation_messages {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0RvY3VtZW50cy9HaXRIdWIvYWlyc2VsLXJmaWQvbW9iaWxlL3NyYy9hcHAvcGFnZXMvdGVjaG5pY2FsL2Fzc2V0LXJlZ2lzdHJhdGlvbi9hc3NldC1yZWdpc3RyYXRpb24ucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy90ZWNobmljYWwvYXNzZXQtcmVnaXN0cmF0aW9uL2Fzc2V0LXJlZ2lzdHJhdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy90ZWNobmljYWwvYXNzZXQtcmVnaXN0cmF0aW9uL2Fzc2V0LXJlZ2lzdHJhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmFsaWRhdGlvbl9tZXNzYWdlcyB7XG4gIGNvbG9yOiByZWQ7XG59XG4iLCIudmFsaWRhdGlvbl9tZXNzYWdlcyB7XG4gIGNvbG9yOiByZWQ7XG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  Validators,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AlertController, MenuController } from \"@ionic/angular\";\n\nimport { AssetsService } from \"src/app/shared/services/assets/assets.service\";\nimport { AssetGroupsService } from \"src/app/shared/services/asset-groups/asset-groups.service\";\nimport { AssetTypesService } from \"src/app/shared/services/asset-types/asset-types.service\";\nimport { AuthService } from \"src/app/shared/services/auth/auth.service\";\nimport { NotificationsService } from 'src/app/shared/services/notifications/notifications.service';\nimport { OrganisationsService } from \"src/app/shared/services/organisations/organisations.service\";\nimport { RegionsService } from \"src/app/shared/services/regions/regions.service\";\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { AssetRegistrationsService } from 'src/app/shared/services/asset-registrations/asset-registrations.service';\nimport { StatesService } from 'src/app/shared/services/state/states.service';\nimport { AssetAttributeColumnService } from 'src/app/shared/services/asset-attribute-column/asset-attribute-column.service';\nimport { AssetAttributePredefineService } from 'src/app/shared/services/asset-attribute-predefine/asset-attribute-prodefine.service';\nimport { AssetAttributeReferenceService } from 'src/app/shared/services/asset-attribute-reference/asset-attribute-reference.service';\nimport { MaintenanceManagerService } from 'src/app/shared/services/maintenance-manager/maintenance-manager.service';\nimport { PlannerService } from 'src/app/shared/services/planner/planner.service';\nimport { AssetLocatioSyncService } from 'src/app/shared/services/asset-location-sync/asset-location-sync.service';\n\nclass Port {\n  public id: number;\n  public name: string;\n}\n\n@Component({\n  selector: \"app-asset-registration\",\n  templateUrl: \"./asset-registration.page.html\",\n  styleUrls: [\"./asset-registration.page.scss\"],\n})\nexport class AssetRegistrationPage implements OnInit {\n  // Stepper\n  isLinear = false;\n  isDisableRipple = true;\n\n  typeassets = [];\n  regions = [];\n  states = [];\n  organisations = [];\n  departments = [\n    { value: \"CB\", name: \"Customer Billing Services\" },\n    { value: \"DB\", name: \"Distribution\" },\n    { value: \"ED\", name: \"Engineering Services - Distribution\" },\n    { value: \"FL\", name: \"Fleet\" },\n    { value: \"LN\", name: \"Land\" },\n    { value: \"NR\", name: \"NRW\" },\n    { value: \"PN\", name: \"Production Northern\" },\n    { value: \"PS\", name: \"Production Southern\" },\n    { value: \"SD\", name: \"SCADA\" },\n    { value: \"WQ\", name: \"Water Quality\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel1s = [\n    { value: \"CB\", name: \"Customer Billing Services\" },\n    { value: \"DB\", name: \"Distribution\" },\n    { value: \"FL\", name: \"Fleet\" },\n    { value: \"GA\", name: \"General Admin\" },\n    { value: \"PD\", name: \"Production\" },\n    { value: \"SD\", name: \"SCADA\" },\n    { value: \"WQ\", name: \"Water Quality\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel3s = [\n    { value: \"ND\", name: \"NRW - District Metering Zone\" },\n    { value: \"NT\", name: \"NRW - Transmission Network\" },\n    { value: \"NW\", name: \"NRW - Water Balancing Area\" },\n    { value: \"PH\", name: \"Pump House\" },\n    { value: \"RS\", name: \"Reservoir\" },\n    { value: \"VD\", name: \"Valve - Distribution Main\" },\n    { value: \"VT\", name: \"Valve - Trunk Main\" },\n    { value: \"WT\", name: \"Water Treatment Plant\" },\n    { value: \"WL\", name: \"WQ Laboratory Services\" },\n    { value: \"WO\", name: \"WQ - Online Analyzer\" },\n    { value: \"WR\", name: \"WQ - River Monitoring Station\" },\n    { value: \"WS\", name: \"WQ Sampling Station\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel4s = [\n    { value: \"NR\", name: \"NRW\" },\n    { value: \"PH\", name: \"Pump House\" },\n    { value: \"RS\", name: \"Reservoir\" },\n    { value: \"TP\", name: \"Treatment Plant Name\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel5s = [\n    { value: \"AS\", name: \"Aeration System\" },\n    { value: \"BR\", name: \"Balancing Reservoir\" },\n    { value: \"BD\", name: \"Buildings\" },\n    { value: \"CD\", name: \"Chemical Dosing\" },\n    { value: \"CS\", name: \"Coagulation System\" },\n    { value: \"DT\", name: \"Draw of Tower\" },\n    { value: \"ES\", name: \"Earthing System\" },\n    { value: \"EP\", name: \"Electrical Panel\" },\n    { value: \"ES\", name: \"Electrical System\" },\n    { value: \"FS\", name: \"Filtration Process\" },\n    { value: \"FC\", name: \"Flocculation\" },\n    { value: \"OR\", name: \"Off River Storage Reservoir\" },\n    { value: \"RW\", name: \"Raw Water Process\" },\n    { value: \"SP\", name: \"Sedimentation Process\" },\n    { value: \"SS\", name: \"Solar System\" },\n    { value: \"ST\", name: \"Sludge Treament Process\" },\n    { value: \"SW\", name: \"Settled Water Process\" },\n    { value: \"TI\", name: \"Tangki Imbang 3MG\" },\n    { value: \"TO\", name: \"Tangki Imbangan 4MG (OLD)\" },\n    { value: \"TN\", name: \"Tangki Imbangan 4MG (NEW)\" },\n    { value: \"TS\", name: \"Telemetry System\" },\n    { value: \"TP\", name: \"Treatment Process\" },\n    { value: \"TW\", name: \"Treated Water Process\" },\n    { value: \"WA\", name: \"Water Analysis\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n  hierarchylevel6s = [\n    { value: \"AP\", name: \"Actiflo Process\" },\n    { value: \"AC\", name: \"Activated Carbon Process\" },\n    { value: \"AS\", name: \"Aeration System\" },\n    { value: \"ES\", name: \"Alum Process\" },\n    { value: \"BP\", name: \"Backwash Process\" },\n    { value: \"BR\", name: \"Balancing Reservoir\" },\n    { value: \"BO\", name: \"Boat House\" },\n    { value: \"BU\", name: \"Buildings\" },\n    { value: \"CD\", name: \"Chemical Dosing\" },\n    { value: \"CM\", name: \"Chemical Process\" },\n    { value: \"CP\", name: \"Chlorination Process\" },\n    { value: \"CO\", name: \"Coagulation Process\" },\n    { value: \"CR\", name: \"Chemical Room\" },\n    { value: \"CC\", name: \"Control Centre\" },\n    { value: \"CR\", name: \"Control Room\" },\n    { value: \"DP\", name: \"Data Process\" },\n    { value: \"DS\", name: \"Distrafication\" },\n    { value: \"DO\", name: \"Draw Off Process\" },\n    { value: \"ES\", name: \"Earthing System\" },\n    { value: \"EL\", name: \"Electrical System\" },\n    { value: \"FS\", name: \"Facilities System\" },\n    { value: \"FP\", name: \"Filtration Process\" },\n    { value: \"FW\", name: \"Filtered Water Sampling\" },\n    { value: \"FO\", name: \"Flocculation Process\" },\n    { value: \"FL\", name: \"Fluoride Process\" },\n    { value: \"LB\", name: \"Laboratory\" },\n    { value: \"LP\", name: \"Lime Process\" },\n    { value: \"OA\", name: \"Online Analyzer\" },\n    { value: \"PR\", name: \"Polymer (Residual) Dosing\" },\n    { value: \"PA\", name: \"Poly Aluminium Chloride Process\" },\n    { value: \"PP\", name: \"Polymer Process\" },\n    { value: \"PS\", name: \"Power Supply\" },\n    { value: \"RM\", name: \"Rapid Mixing\" },\n    { value: \"RE\", name: \"Residual Emergency Lagoon\" },\n    { value: \"RT\", name: \"Residual Thickened Pumping Station\" },\n    { value: \"RI\", name: \"Raw Water Intake System\" },\n    { value: \"RS\", name: \"Raw Water Pumping System\" },\n    { value: \"RP\", name: \"Raw Water Process\" },\n    { value: \"RE\", name: \"Raw Water Pipeline\" },\n    { value: \"RV\", name: \"Reservoir\" },\n    { value: \"SS\", name: \"SCADA System\" },\n    { value: \"SD\", name: \"Sedimentation Process\" },\n    { value: \"SL\", name: \"Settled Water Process\" },\n    { value: \"SS\", name: \"Settled Water Sampling\" },\n    { value: \"SW\", name: \"Settled Water Pumping System\" },\n    { value: \"SB\", name: \"Sludge Balancing\" },\n    { value: \"ST\", name: \"Sludge Treament Process\" },\n    { value: \"SQ\", name: \"Solid Liquid Separation\" },\n    { value: \"SA\", name: \"Solar System\" },\n    { value: \"SI\", name: \"Sodium Alumino Silicate Process\" },\n    { value: \"SO\", name: \"Soda Ash Process\" },\n    { value: \"TA\", name: \"Tangki Sedit SYABAS\" },\n    { value: \"TE\", name: \"Telemetry System\" },\n    { value: \"TP\", name: \"Treated Water Process\" },\n    { value: \"TS\", name: \"Treated Water Sampling\" },\n    { value: \"TL\", name: \"Treated Water Pipeline\" },\n    { value: \"TW\", name: \"Treated Water Pumping System\" },\n    { value: \"TT\", name: \"Treatment Process\" },\n    { value: \"WA\", name: \"Water Analysis\" },\n    { value: \"WO\", name: \"Workshop\" },\n    { value: \"WT\", name: \"Water Transfer\" },\n    { value: \"WP\", name: \"Wash Water Process\" },\n    { value: \"WR\", name: \"Wash Water Recovery\" },\n    { value: \"WS\", name: \"Wash Water System\" },\n    { value: \"NA\", name: \"Not Available\" },\n  ];\n\n  categories = [];\n  identities = [];\n  primarycategories = [];\n  groupsubcategory1s = [];\n  groupsubcategory2s = [];\n  statuses = [{ value: \"NA\", name: \"Not Available\" }];\n  measuringtypes = [\n    { value: \"FM\", name: \"Flow Meter Readings\" },\n    { value: \"TP\", name: \"Temperature\" },\n    { value: \"OT\", name: \"Other\" },\n  ];\n\n  measurement_types = [\n    { desc: 'Bar', value: 'bar' },\n    { desc: 'Celsius', value: '°C' },\n    { desc: 'Hour', value: 'hr' },\n    { desc: 'Kilogram', value: 'kg' },\n    { desc: 'Kilometer', value: 'km' },\n    { desc: 'Kilowatt', value: 'kW' },\n    { desc: 'Megapascal Pressure Unit', value: 'Mpa' },\n    { desc: 'Meter', value: 'm' },\n    { desc: 'Meter per second', value: 'm/s' },\n    { desc: 'Milimetre', value: 'mm' },\n    { desc: 'Millions of Gallons per Day', value: 'MGD' },\n    { desc: 'Millions of liters per day ', value: 'MLD' },\n    { desc: 'Miligram', value: 'mg' },\n    { desc: 'Revolutions per minute', value: 'RPM' },\n    { desc: 'Horsepower', value: 'hp' },\n    { desc: 'Voltage', value: 'V' },\n    { desc: 'Cubic meter', value: 'm³' },\n    { desc: 'Cubic meter per hour', value: 'm³/hr' },\n    { desc: 'Decibels woth reference to one milliwatt', value: 'dBm' },\n    { desc: 'Liter per second', value: 'l/s' },\n    { desc: 'Megametre per second', value: 'mm/s' },\n    { desc: 'Millihenrys', value: 'mH' },\n    { desc: 'Millivolts', value: 'mV' },\n    { desc: 'pH', value: 'pH' },\n    { desc: 'Percent', value: '%' },\n    { desc: 'Watt', value: 'W' },\n    { desc: 'Voltage direct current', value: 'VDC' },\n    { desc: 'nanometers', value: 'nm' },\n    { desc: 'Milliamperes', value: 'mA' },\n    { desc: 'Pound per square inch', value: 'psi' },\n    { desc: \"Ampere\", value: 'amp' },\n    { desc: \"Kilovolt Ampere\", value: 'kva' },\n    { desc: \"Hertz\", value: 'hz' },\n    { desc: \"Ampere\", value: 'amp' },\n    { desc: \"Ampere\", value: 'amp' },\n    { desc: \"Ampere\", value: 'amp' },\n  ]\n\n  // asset attribute // \n  assetAttrColumn: any\n  assetAttrData: any\n  assetCategoryData: any\n  assetAttPredefine: any\n  assetAttPredefineMans: any = [] // manufacturer\n  assetAttPredefinePreInsVens: any = [] // vehicle_insurance_vendor\n  assetAttPredefineInsPols: any = [] // vehicle_insurance_policy_type\n  assetAttPredefineOwnStas: any = [] //vehicle_owner_status\n  assetAttPredefineRegOwns: any = [] // vehicle_registration_owner\n\n  // hide show div\n  parentLocaDiv = 0;\n  assetLocDiv = 0;\n  port: Port;\n  segmentModal = \"first\";\n  process = \"create\";\n\n  // state data\n  stateList = [\n    { id: 'JHR', name: 'Johor' },\n    { id: 'KDH', name: 'Kedah' },\n    { id: 'KEL', name: 'Kelantan' },\n    { id: 'KUL', name: 'Kuala Lumpur' },\n    { id: 'LBN', name: 'Labuan' },\n    { id: 'MLK', name: 'Melaka' },\n    { id: 'NSN', name: 'Negeri Sembilan' },\n    { id: 'PHG', name: 'Pahang' },\n    { id: 'PJY', name: 'Putrajaya' },\n    { id: 'PLS', name: 'Perlis' },\n    { id: 'PNG', name: 'Penang' },\n    { id: 'PRK', name: 'Perak' },\n    { id: 'SBH', name: 'Sabah' },\n    { id: 'SGR', name: 'Selangor' },\n    { id: 'SWK', name: 'Serawak' },\n    { id: 'TRG', name: 'Terengganu' },\n  ];\n\n  // service area\n  servAreaList = [\n    { id: 'GOMBAK', name: 'GOMBAK' },\n    { id: 'HEADQUARTERS', name: 'HEADQUARTERS' },\n    { id: 'HULU-LANGAT', name: 'HULU LANGAT' },\n    { id: 'HULU-SELANGOR', name: 'HULU SELANGOR' },\n    { id: 'KLANG', name: 'KLANG' },\n    { id: 'KUALA-LANGAT', name: 'KUALA LANGAT' },\n    { id: 'KUALA-LUMPUR', name: 'KUALA LUMPUR' },\n    { id: 'KUALA-SELANGOR', name: 'KUALA SELANGOR' },\n    { id: 'NORTH', name: 'NORTH' },\n    { id: 'PETALING', name: 'PETALING' },\n    { id: 'SABAK-BERNAM', name: 'SABAK BERNAM' },\n    { id: 'SEPANG', name: 'SEPANG' },\n    { id: 'SOUTH', name: 'SOUTH' },\n  ];\n\n  // asset criticality\n  assCriticalList = [\n    { id: '01', name: '01 Asset Failure Low Impact' },\n    { id: '02', name: '02' },\n    { id: '03', name: '03' },\n    { id: '04', name: '04' },\n    { id: '05', name: '05' },\n    { id: '06', name: '06' },\n    { id: '07', name: '07' },\n    { id: '08', name: '08' },\n    { id: '09', name: '09 Highest' }\n  ];\n\n  // asset owning department\n  assOwningDepartList = [\n    { id: 'CBD', name: 'CUSTOMER BILLING SERVICES' },\n    { id: 'DISTRIBUTION', name: 'DISTRIBUTION' },\n    { id: 'ES-D', name: 'ENGINEERING SERVICES – DISTRIBUTION' },\n    { id: 'FLEET', name: 'FLEET' },\n    { id: 'LAND', name: 'LAND' },\n    { id: 'NRW', name: 'NRW' },\n    { id: 'PD-N', name: 'PRODUCTION NORTHERN' },\n    { id: 'PD-S', name: 'PRODUCTION SOUTHERN' },\n    { id: 'SCADA', name: 'SCADA' },\n    { id: 'WQ', name: 'WATER QUALITY' }\n  ];\n\n  // main operation\n  mainOperationList = [\n    { id: 'CUSTOMER-BILLING-SERVICES', name: 'CUSTOMER BILLING SERVICES' },\n    { id: 'DISTRIBUTION', name: 'DISTRIBUTION' },\n    { id: 'GENERAL-ADMIN', name: 'GENERAL ADMIN' },\n    { id: 'PRODUCTION', name: 'PRODUCTION' },\n    { id: 'SCADA', name: 'SCADA' },\n    { id: 'WATER-QUALITY', name: 'WATER QUALITY' },\n    { id: 'FLEET', name: 'FLEET' },\n  ];\n\n  // condition rating\n  conditionRatingList = [\n    { id: 1, name: 'Very Good' },\n    { id: 2, name: 'Good' },\n    { id: 3, name: 'Average' },\n    { id: 4, name: 'Poor' },\n    { id: 5, name: 'Replace' },\n  ];\n\n  // warranty\n  warrantyList = [\n    { id: 'Available', name: 'Yes' },\n    { id: 'Not-Available', name: 'No' },\n  ];\n\n  // search region\n  ports = [\n    { id: 1, name: 'Tokai' },\n    { id: 2, name: 'Vladivostok' },\n    { id: 3, name: 'Navlakhi' }\n  ];\n\n  // operation list\n\n  operationList = [\n    { id: 'NRW-DISTRICT METERING ZONE', name: 'NRW-DISTRICT METERING ZONE' },\n    { id: 'NRW-TRANSMISSION NETWORK', name: 'NRW-TRANSMISSION NETWORK' },\n    { id: 'NRW-WATER BALANCING AREA', name: 'NRW-WATER BALANCING AREA' },\n    { id: 'PUMP HOUSE', name: 'PUMP HOUSE' },\n    { id: 'RESERVOIR', name: 'RESERVOIR' },\n    { id: 'VALVE-DISTRIBUTION MAIN', name: 'VALVE-DISTRIBUTION MAIN' },\n    { id: 'VALVE-TRUNK MAIN', name: 'VALVE-TRUNK MAIN' },\n    { id: 'WATER TREATMENT PLANT', name: 'WATER TREATMENT PLANT' },\n    { id: 'WQ-ONLINE ANALYZER', name: 'WQ-ONLINE ANALYZER' },\n    { id: 'WQ-RIVER MONITORING STATION', name: 'WQ-RIVER MONITORING STATION' },\n    { id: 'WQ-SAMPLING STATION', name: 'WQ-SAMPLING STATION' },\n    { id: 'WQ-LABORATORY SERVICES', name: 'WQ-LABORATORY SERVICES' },\n  ];\n\n  // asset // component\n  assetOrCompList = [\n    { id: 'Asset', name: 'Asset' },\n    { id: 'Component', name: 'Component' },\n  ];\n\n  //asset Or Component\n  assetOrComponent = ''\n\n  // Forms\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n  fourthFormGroup: FormGroup;\n  fifthFormGroup: FormGroup;\n  sixthFormGroup: FormGroup;\n  seventhFormGroup: FormGroup;\n  warrantyFormGroup: FormGroup;\n  validation_messages = [];\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public alertController: AlertController,\n    public menu: MenuController,\n    public assetsService: AssetsService,\n    public assetGroupsService: AssetGroupsService,\n    public assetTypesService: AssetTypesService,\n    public authService: AuthService,\n    public notificationService: NotificationsService,\n    public organisationsService: OrganisationsService,\n    public regionsService: RegionsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private assetRegistrationsService: AssetRegistrationsService,\n    private statesService: StatesService,\n    private assetAttributeColumnService: AssetAttributeColumnService,\n    private assetAttributePredefineService: AssetAttributePredefineService,\n    private assetAttributeReferenceService: AssetAttributeReferenceService,\n    private maintenanceManagerService: MaintenanceManagerService,\n    private plannerService: PlannerService,\n    private assetLocatioSyncService: AssetLocatioSyncService\n  ) {\n    // console.log(\"parentLocaDiv = \", this.parentLocaDiv)\n    this.firstFormGroup = this.formBuilder.group({\n      asset_primary_category: [\"\"], // primary cat\n      asset_identity: [\"\"],\n      sub_category_1: [\"\"],\n      sub_category_2: [\"\"],\n      model_number: [\"\"],\n      bo: [\"\"]\n    });\n    this.secondFormGroup = this.formBuilder.group({\n      asset_or_component_type: [\"\"],\n      asset_class_asset_category: [\"\"],\n      handed_over_asset_or_procured: [\"\"],\n    });\n    this.thirdFormGroup = this.formBuilder.group({\n      asset_owning_department: [\"\"],\n      main_operation: [\"\"],\n      region: [\"\"],\n      operation: [\"\"],\n      parent_location: [\"\"],\n      new_parent_location: [\"\"],\n    });\n    this.fourthFormGroup = this.formBuilder.group({\n      location_description: [\"\"],\n      building: [\"\"],\n      address_line_1: [\"\"],\n      address_line_2: [\"\"],\n      address_line_3: [\"\"],\n      city: [\"\"],\n      state: [\"\"],\n      postal_code: [\"\"],\n      country: [\"\"],\n      tag_number: [\"\"],\n      service_area: [\"\"],\n      location_main_contact: [\"\"],\n      location_asset_maintenance_manager: [\"\"],\n      maintenance_planner: [\"\"],\n      gis_esri_id: [\"\"],\n      latitude: [\"\"],\n      longitude: [\"\"],\n      asset_criticality: [\"\"],\n      cost_center: [\"\"],\n    });\n    this.fifthFormGroup = this.formBuilder.group({\n      size_capacity_1: [\"\"],\n      size_capacity_1_unit_measurement: [\"\"],\n      size_capacity_2: [\"\"],\n      size_capacity_2_unit_measurement: [\"\"],\n      size_capacity_3: [\"\"],\n      size_capacity_3_unit_measurement: [\"\"],\n      detailed_description: [\"\"],\n      serial_number: [\"\"],\n      asset_tag_number: [\"\"],\n      purchase_date_installed_handed_over_date: [\"\"],\n      condition_rating: [\"\"],\n      status: [\"\"],\n      maintenance_specification: [\"\"],\n      measurement_type: [\"\"],\n      warranty: [\"\"],\n      actual_warranty_period: [\"\"],\n      warranty_vendor_name: [\"\"],\n    });\n    this.sixthFormGroup = this.formBuilder.group({\n      bottom_water_level: [\"\"],\n      brand: [\"\"],\n      capacity_size: [\"\"],\n      closing_torque: [\"\"],\n      communication_protocol: [\"\"],\n      coverage_range: [\"\"],\n      dimention: [\"\"],\n      environmental_performance: [\"\"],\n      flow_rate: [\"\"],\n      frequency: [\"\"],\n      horse_power: [\"\"],\n      hysteresis: [\"\"],\n      infrastructure_status: [\"\"],\n      infrastructure_status_reason: [\"\"],\n      inlet_diameter: [\"\"],\n      installation: [\"\"],\n      insulation: [\"\"],\n      legal_name: [\"\"],\n      manufacturer: [\"\"],\n      manufacturer_year: [\"\"],\n      manufacture_part_number: [\"\"],\n      material_type: [\"\"],\n      model: [\"\"],\n      motor_current: [\"\"],\n      no_of_channel: [\"\"],\n      no_of_phases: [\"\"],\n      no_of_stage: [\"\"],\n      opening_torque: [\"\"],\n      outlet_diameter: [\"\"],\n      power_supply_type: [\"\"],\n      pump_head: [\"\"],\n      revolutions_per_minute: [\"\"],\n      source_from: [\"\"],\n      staging_height: [\"\"],\n      supply_location: [\"\"],\n      temperature: [\"\"],\n      top_water_level: [\"\"],\n      type: [\"\"],\n      valve_diameter: [\"\"],\n      valve_pressure_rating: [\"\"],\n      vehicle_chasis_number: [\"\"],\n      vehicle_engine_capacity: [\"\"],\n      vehicle_engine_number: [\"\"],\n      vehicle_insurance_vendor: [\"\"],\n      vehicle_model: [\"\"],\n      vehicle_insurance_auto_windscreen_insured: [\"\"],\n      vehicle_insurance_cover_note_number: [\"\"],\n      vehicle_insurance_date_period_from: [\"\"],\n      vehicle_insurance_date_period_to: [\"\"],\n      vehicle_insurance_no_claim_discount: [\"\"],\n      vehicle_insurance_policy_type: [\"\"],\n      vehicle_insurance_sum_insured: [\"\"],\n      vehicle_insurance_total_premium: [\"\"],\n      vehicle_puspakom_date_inspection: [\"\"],\n      vehicle_owner_status: [\"\"],\n      vehicle_register_date: [\"\"],\n      vehicle_roadtax_rate: [\"\"],\n      vehicle_puspakom_expired_date: [\"\"],\n      vehicle_spad_permit_date_period_to: [\"\"],\n      vehicle_roadtax_renew_date: [\"\"],\n      vehicle_roadtax_expired_date: [\"\"],\n      vehicle_spad_no_license_operator: [\"\"],\n      vehicle_spad_permit_date_period_from: [\"\"],\n      vehicle_seating_capacity: [\"\"],\n      vehicle_registration_owner: [\"\"],\n      voltage: [\"\"],\n      status: [\"IC\"]\n    });\n\n    /// get data form asset reg list\n    this.route.queryParams.subscribe((params) => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.process = 'view';\n        let assetregistration = this.router.getCurrentNavigation().extras.state\n          .assetregistration;\n        this.firstFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.secondFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.thirdFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.fourthFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.fifthFormGroup.patchValue({\n          ...assetregistration\n        });\n        this.sixthFormGroup.patchValue({\n          ...assetregistration\n        });\n\n      }\n    });\n  }\n\n  ngOnInit() {\n\n    this.getRegion()\n    this.getState()\n    this.getOrganisations()\n    this.getAssetType()\n    this.getAssetGroup()\n    this.getAttributePredefine()\n    this.getMaintenanceManager()\n    this.getPlanner()\n    this.getAssetLocationSync()\n  }\n\n  removeDuplicates(originalArray, prop) {\n    console\n    var newArray = [];\n    var lookupObject = [];\n\n    for (var i in originalArray) {\n\n      lookupObject[originalArray[i][prop]] = originalArray[i];\n      console.log(i, \" qqqqq= \", originalArray[i])\n    }\n\n    for (i in lookupObject) {\n      this.assetLocationData.push(lookupObject[i]);\n    }\n    console.log(\"uniqueArray is: \" + this.assetLocationData);\n    // return this.assetLocationData;\n  }\n\n  assetLocationData: any = []\n  getAssetLocationSync() {\n\n    console.log(\"iiiiiiiiii\")\n    this.assetLocatioSyncService.get_asset_location().subscribe(\n      (res) => {\n        console.log(\"assetLocatioSyncService = \", res)\n        // let assetLocationarr = res\n        // this.assetLocationData.push(res)\n        this.assetLocationData = res\n\n        // var newArray = [];\n        // var lookupObject = {};\n\n        // for (var i in assetLocationarr) {\n        //   console.log(\"i = \", i)\n        //   // lookupObject[assetLocationarr[i][prop]] = assetLocationarr[i];\n        //   // if(){\n\n        //   // }\n        // }\n        // this.assetLocationData = this.removeDuplicates(assetLocationarr, \"node_id\");\n        console.log(\"uniqueArray is: \" + this.assetLocationData);\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  plannerData = []\n  getPlanner() {\n    this.plannerService.get().subscribe(\n      (res) => {\n        // console.log(\"planner = \", res)\n        if (res) this.plannerData = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n\n  }\n\n  maintenanceManagerData = []\n  getMaintenanceManager() {\n    this.maintenanceManagerService.get().subscribe(\n      (res) => {\n        // console.log(\"regions = \", res)\n        if (res) this.maintenanceManagerData = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getAttributePredefine() {\n    this.assetAttributePredefineService.get().subscribe(\n      (res) => {\n        // console.log(\"assetAttPredefine = \", res)\n\n        res.forEach(element => {\n          // console.log(\"assetAttPredefine element = \", element)\n          // console.log(\"assetAttPredefine attribute_field_name = \", element.attribute_field_name)\n\n          if (element.attribute_field_name == \"manufacturer\") {\n            this.assetAttPredefineMans.push(element); // manufacturer\n            // console.log(\"assetAttPredefineMans = \", this.assetAttPredefineMans)\n          }\n          if (element.attribute_field_name == \"vehicle_insurance_vendor\") {\n            this.assetAttPredefinePreInsVens.push(element); // vehicle_insurance_vendor\n          }\n          if (element.attribute_field_name == \"vehicle_insurance_policy_type\") {\n            this.assetAttPredefineInsPols.push(element); // vehicle_insurance_policy_type\n          }\n          if (element.attribute_field_name == \"vehicle_owner_status\") {\n            this.assetAttPredefineOwnStas.push(element); //vehicle_owner_status\n          }\n          if (element.attribute_field_name == \"vehicle_registration_owner\") {\n            this.assetAttPredefineRegOwns.push(element); // vehicle_registration_owner\n          }\n        });\n\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getRegion() {\n    this.regionsService.get().subscribe(\n      (res) => {\n        // console.log(\"regions = \", res)\n        if (res) this.regions = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getState() {\n    this.statesService.get().subscribe(\n      (res) => {\n        // console.log(\"states = \", res)\n        if (res) this.states = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getOrganisations() {\n    this.organisationsService.get().subscribe(\n      (res) => {\n        if (res) this.organisations = res;\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getAssetType() {\n    this.assetTypesService.get().subscribe(\n      (res) => {\n        if (res) {\n          // console.log('this.primarycategories = ', res)\n          this.primarycategories = res;\n          // this.primarycategories = res.filter(function (data) {\n          //   if (data.category.toString().toLowerCase().indexOf(\"at\") !== -1)\n          //     return true;\n          //   return false;\n          // });\n\n          // console.log('this.primarycategories = ', this.primarycategories)\n\n          this.typeassets = res\n          // .filter(function (data) {\n          //   if (data.category.toString().toLowerCase().indexOf(\"ac\") !== -1)\n          //     return true;\n          //   return false;\n          // });\n\n          this.categories = res\n          // .filter(function (data) {\n          //   if (data.category.toString().toLowerCase().indexOf(\"ag\") !== -1)\n          //     return true;\n          //   return false;\n          // });\n        }\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  getAssetGroup() {\n    this.assetGroupsService.get().subscribe(\n      (res) => {\n        if (res) {\n          this.identities = res.filter(function (data) {\n            if (data.category.toString().toLowerCase().indexOf(\"ai\") !== -1)\n              return true;\n            return false;\n          });\n\n          this.groupsubcategory1s = res.filter(function (data) {\n            if (data.category.toString().toLowerCase().indexOf(\"s1\") !== -1)\n              return true;\n            return false;\n          });\n\n          this.groupsubcategory2s = res.filter(function (data) {\n            if (data.category.toString().toLowerCase().indexOf(\"s2\") !== -1)\n              return true;\n            return false;\n          });\n        }\n      },\n      (err) => {\n        console.error(\"err\", err);\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  register() {\n    let postAssets = {\n      ...this.firstFormGroup.value,\n      ...this.secondFormGroup.value,\n      ...this.thirdFormGroup.value,\n      ...this.fourthFormGroup.value,\n      ...this.fifthFormGroup.value,\n      ...this.sixthFormGroup.value,\n      // ...this.seventhFormGroup.value,\n      // created_by: this.authService.userID\n    };\n\n    // console.log('postAssets = ', postAssets);\n    // this.assetsService.post(postAssets).subscribe( \n    this.assetRegistrationsService.post(postAssets).subscribe(\n      (res) => {\n        if (res) {\n          // console.log(\"register_res = \", res);\n          this.presentAlert(\"Success\", \"Your asset successfully registered into the system.\");\n        } else {\n          console.log('eweqqweeq');\n        }\n      },\n      (err) => {\n        console.error(\"register_rerr\", err);\n        // this.validation_messages = err.error;\n        this.presentAlert(\"Error\", \"There are error occured on your form. Please check your form again.\");\n      },\n      () => {\n        console.log(\"Http request completed\");\n      }\n    );\n  }\n\n  async presentAlert(header: string, message: string) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\n        {\n          text: \"OK\",\n          handler: () => {\n            if (header == \"Success\") this.homePage(\"/technical/tabs/tab1\");\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  homePage(path: string) {\n    this.router.navigate([path]);\n  }\n\n  clickBack() {\n    this.router.navigate([\"/technical/asset-registration-list\"]);\n  }\n\n  openNotification() {\n    this.menu.enable(true, \"menuNotification\");\n    this.menu.open(\"menuNotification\");\n  }\n\n  onChangeParent(event) {\n    if (event == 0) {\n      this.parentLocaDiv = 0\n    } else {\n      this.parentLocaDiv = 1\n    }\n  }\n\n  onChangeAssLoc(event) {\n    if (event == 0) {\n      this.assetLocDiv = 0\n    } else {\n      this.assetLocDiv = 1\n    }\n  }\n\n  changeSegment(segment) {\n    this.segmentModal = segment;\n  }\n\n  portChange2(event) {\n\n  }\n\n  portChange(event: {\n    // console.log(event);\n    // if(value.length > 3)\n    component: IonicSelectableComponent,\n    value: any\n    // }\n  }) {\n    console.log('port:', event.value);\n  }\n\n  onChangeLocAssMaiMan(event: {\n    // console.log(event);\n    // if(value.length > 3)\n    component: IonicSelectableComponent,\n    value: any\n    // }\n  }) {\n    console.log('port:', event.value);\n  }\n  // onChangeLocAssMaiMan(event: {\n  //   // console.log(event);\n  //   // if(value.length > 3)\n  //   component: IonicSelectableComponent,\n  //   value: any\n  //   // }\n  // }) { }\n\n  onChangeAssPrimaryCat(event: {\n    // console.log(event);\n    // if(value.length > 3)\n    component: IonicSelectableComponent,\n    value: any\n    // }\n  }) {\n    console.log('port:', event.value.asset_type_code);\n    console.log(\"event = \", event)\n    let field = \"asset_type_id=\" + event.value.asset_type_description;\n\n    this.primarycategories.forEach(element => {\n      if (element.asset_type_code == event.value.asset_type_code) {\n        console.log(\"element = ---\", element);\n        this.assetAttrData = element.asset_bussiness_object\n        this.assetCategoryData = element.asset_category\n        if (element.asset_category == 'W1-TrackedGeneralComponent' || element.asset_category == 'W1-IOSvcGeneralComponent') {\n          this.assetOrComponent = 'Component'\n        } else { // W1-IOSvcGeneralComponent , W1-TrackedGeneralComponent\n          this.assetOrComponent = 'Asset'\n        }\n      }\n    });\n    this.assetAttributeColumnService.filter(field).subscribe(\n      (res) => {\n        if (res) {\n          this.assetAttrColumn = res[0]\n          // console.log(\" this.assetAttrColumn = \", this.assetAttrColumn);\n        }\n      },\n      () => {\n\n      }\n    )\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetAttributeColumnModel } from \"./asset-attribute-column.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetAttributeColumnService {\n  url: string = environment.baseUrl + \"v1/asset-attribute-column/\";\n\n  // Data\n  public amodels: AssetAttributeColumnModel[] = [];\n  public amodel: AssetAttributeColumnModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body): Observable<AssetAttributeColumnModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetAttributeColumnModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n        this.amodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetAttributeColumnModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetAttributeColumnModel>(urlID).pipe(\n      tap((res: AssetAttributeColumnModel) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n        this.amodel = res;\n      })\n    );\n  }\n\n  update(body): Observable<AssetAttributeColumnModel> {\n    return this.http.patch<AssetAttributeColumnModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetAttributeColumnModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetAttributeColumnModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n\n  patch_asset(body): Observable<AssetAttributeColumnModel> {\n    let urlPatchAsset = this.url + \"patch_asset/\";\n    return this.http.post<any>(urlPatchAsset, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeColumnModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetAttributePredefineModel } from './asset-attribute-prodefine.model';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetAttributePredefineService {\n  url: string = environment.baseUrl + \"v1/asset-attribute-predefine/\";\n\n  // Data\n  public atmodels: AssetAttributePredefineModel[] = [];\n  public atmodel: AssetAttributePredefineModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body): Observable<AssetAttributePredefineModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetAttributePredefineModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n        this.atmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetAttributePredefineModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetAttributePredefineModel>(urlID).pipe(\n      tap((res: AssetAttributePredefineModel) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n        this.atmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<AssetAttributePredefineModel> {\n    return this.http.patch<AssetAttributePredefineModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetAttributePredefineModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetAttributePredefineModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributePredefineModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetAttributeReferenceModel } from './asset-attribute-reference.model';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetAttributeReferenceService {\n  url: string = environment.baseUrl + \"v1/asset-attribute-reference/\";\n\n  // Data\n  public atmodels: AssetAttributeReferenceModel[] = [];\n  public atmodel: AssetAttributeReferenceModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body): Observable<AssetAttributeReferenceModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetAttributeReferenceModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n        this.atmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetAttributeReferenceModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetAttributeReferenceModel>(urlID).pipe(\n      tap((res: AssetAttributeReferenceModel) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n        this.atmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<AssetAttributeReferenceModel> {\n    return this.http.patch<AssetAttributeReferenceModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetAttributeReferenceModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetAttributeReferenceModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetAttributeReferenceModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AssetGroupsModel } from \"./asset-groups.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetGroupsService {\n  url: string = environment.baseUrl + \"v1/asset-groups/\";\n\n  // Data\n  public agmodels: AssetGroupsModel[] = [];\n  public agmodel: AssetGroupsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body): Observable<AssetGroupsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<AssetGroupsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n        this.agmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<AssetGroupsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<AssetGroupsModel>(urlID).pipe(\n      tap((res: AssetGroupsModel) => {\n        console.log(\"AssetGroupsModel\", res);\n        this.agmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<AssetGroupsModel> {\n    return this.http.patch<AssetGroupsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<AssetGroupsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<AssetGroupsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"AssetGroupsModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { MaintenanceManagerModel } from './maintenance-manager.model';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MaintenanceManagerService {\n  url: string = environment.baseUrl + \"v1/maintenance-manager/\";\n\n  // Data\n  public rmodels: MaintenanceManagerModel[] = [];\n  public rmodel: MaintenanceManagerModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body: Form): Observable<MaintenanceManagerModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<MaintenanceManagerModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n        this.rmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<MaintenanceManagerModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<MaintenanceManagerModel>(urlID).pipe(\n      tap((res: MaintenanceManagerModel) => {\n        console.log(\"MaintenanceManagerModel\", res);\n        this.rmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<MaintenanceManagerModel> {\n    return this.http.patch<MaintenanceManagerModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<MaintenanceManagerModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<MaintenanceManagerModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"MaintenanceManagerModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { OrganisationsModel } from \"./organisations.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganisationsService {\n  url: string = environment.baseUrl + \"v1/organisations/\";\n\n  // Data\n  public rmodels: OrganisationsModel[] = [];\n  public rmodel: OrganisationsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body: Form): Observable<OrganisationsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<OrganisationsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n        this.rmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<OrganisationsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<OrganisationsModel>(urlID).pipe(\n      tap((res: OrganisationsModel) => {\n        console.log(\"OrganisationsModel\", res);\n        this.rmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<OrganisationsModel> {\n    return this.http.patch<OrganisationsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<OrganisationsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<OrganisationsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"OrganisationsModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { RegionsModel } from \"./regions.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionsService {\n  url: string = environment.baseUrl + \"v1/regions/\";\n\n  // Data\n  public mmodels: RegionsModel[] = [];\n  public mmodel: RegionsModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body: Form): Observable<RegionsModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<RegionsModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n        this.mmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<RegionsModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<RegionsModel>(urlID).pipe(\n      tap((res: RegionsModel) => {\n        console.log(\"RegionsModel\", res);\n        this.mmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<RegionsModel> {\n    return this.http.patch<RegionsModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<RegionsModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<RegionsModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"RegionsModel\", res);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { StatesModel } from \"./states.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatesService {\n  url: string = environment.baseUrl + \"v1/states/\";\n\n  // Data\n  public mmodels: StatesModel[] = [];\n  public mmodel: StatesModel;\n\n  constructor(private http: HttpClient) { }\n\n  post(body: Form): Observable<StatesModel> {\n    return this.http.post<any>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<StatesModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n        this.mmodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<StatesModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<StatesModel>(urlID).pipe(\n      tap((res: StatesModel) => {\n        console.log(\"StatesModel\", res);\n        this.mmodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<StatesModel> {\n    return this.http.patch<StatesModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<StatesModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<StatesModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"StatesModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"asset-registration-asset-registration-module-es5.js"}