{"version":3,"sources":["src/app/pages/inventory-management/list-item/list-item.page.html","src/app/pages/inventory-management/list-item/list-item.page.scss","src/app/pages/inventory-management/list-item/list-item.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gxDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAM,YAAY,GAAsB,CACtC;AAAE,MAAA,QAAQ,EAAE,CAAZ;AAAe,MAAA,IAAI,EAAE,WAArB;AAAkC,MAAA,WAAW,EAAE,yBAA/C;AAA0E,MAAA,QAAQ,EAAE;AAApF,KADsC,EAEtC;AAAE,MAAA,QAAQ,EAAE,CAAZ;AAAe,MAAA,IAAI,EAAE,WAArB;AAAkC,MAAA,WAAW,EAAE,mBAA/C;AAAoE,MAAA,QAAQ,EAAE;AAA9E,KAFsC,EAGtC;AAAE,MAAA,QAAQ,EAAE,CAAZ;AAAe,MAAA,IAAI,EAAE,WAArB;AAAkC,MAAA,WAAW,EAAE,cAA/C;AAA+D,MAAA,QAAQ,EAAE;AAAzE,KAHsC,EAItC;AAAE,MAAA,QAAQ,EAAE,CAAZ;AAAe,MAAA,IAAI,EAAE,WAArB;AAAkC,MAAA,WAAW,EAAE,QAA/C;AAAyD,MAAA,QAAQ,EAAE;AAAnE,KAJsC,EAKtC;AAAE,MAAA,QAAQ,EAAE,CAAZ;AAAe,MAAA,IAAI,EAAE,WAArB;AAAkC,MAAA,WAAW,EAAE,KAA/C;AAAsD,MAAA,QAAQ,EAAE;AAAhE,KALsC,EAMtC;AAAE,MAAA,QAAQ,EAAE,CAAZ;AAAe,MAAA,IAAI,EAAE,WAArB;AAAkC,MAAA,WAAW,EAAE,QAA/C;AAAyD,MAAA,QAAQ,EAAE;AAAnE,KANsC,CAAxC;;AAcA,QAAa,YAAb;AAAA;AAAA;AAIE,4BAAmB,eAAnB,EAAmD;AAAA;;AAAhC,aAAA,eAAA,GAAA,eAAA;AAHnB,aAAA,gBAAA,GAA6B,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAxB,CAA7B;AACA,aAAA,UAAA,GAAa,YAAb;AAEwD;;AAJ1D;AAAA;AAAA,mCAMU,CACP;AAPH;AAAA;AAAA,oCASW;AACP,eAAK,eAAL,CAAqB,OAArB;AACD;AAXH;;AAAA;AAAA,OAAA;;;;cAIsC,2CAAA,CAAA,iBAAA;;;;AAJzB,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKwB,E,uEAIa,2CAAA,CAAA,iBAAA,C,EAJb,CAAA,EAAZ,YAAY,CAAZ","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\" class=\\\"ion-no-border toolbar-core\\\">\\n    <ion-title style=\\\"font-weight: bold\\\"> List of Item </ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <!--- Note that these columns can be defined in any order.\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n      <!-- Position Column -->\\n      <!-- <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n      </ng-container> -->\\n\\n      <!-- Item Column -->\\n      <ng-container matColumnDef=\\\"item\\\">\\n        <th mat-header-cell *matHeaderCellDef> Item </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{element.item}}\\n        </td>\\n      </ng-container>\\n\\n      <!-- Description Column -->\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef> Description </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n      </ng-container>\\n\\n      <!-- Quantity Column -->\\n      <ng-container matColumnDef=\\\"quantity\\\">\\n        <th mat-header-cell *matHeaderCellDef> Quantity </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quantity}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </ion-card>\\n\\n  <div class=\\\"ion-text-center\\\">\\n    <ion-button color=\\\"primary\\\" shape=\\\"round\\\" size=\\\"small\\\" (click)=\\\"closeList()\\\">Close</ion-button>\\n  </div>\\n</ion-content>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ludmVudG9yeS1tYW5hZ2VtZW50L2xpc3QtaXRlbS9saXN0LWl0ZW0ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\nexport interface PeriodicElement {\n  item: string;\n  position: number;\n  description: string;\n  quantity: number;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, item: 'LEQ200001', description: \"QUATRO CABLE (PRO PLUS)\", quantity: 45 },\n  { position: 2, item: 'LEQ200002', description: \"FIBRE OPTIC CABLE\", quantity: 34 },\n  { position: 3, item: 'LEQ200003', description: \"COPPER CABLE\", quantity: 26 },\n  { position: 4, item: 'LEQ200004', description: \"SWITCH\", quantity: 54 },\n  { position: 5, item: 'LEQ200005', description: \"HUB\", quantity: 21 },\n  { position: 6, item: 'LEQ200006', description: \"ROUTER\", quantity: 22 },\n];\n\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.page.html',\n  styleUrls: ['./list-item.page.scss'],\n})\nexport class ListItemPage implements OnInit {\n  displayedColumns: string[] = ['item', 'description', 'quantity'];\n  dataSource = ELEMENT_DATA;\n\n  constructor(public modalController: ModalController) { }\n\n  ngOnInit() {\n  }\n\n  closeList() {\n    this.modalController.dismiss();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-inventory-management-stock-disposal-stock-disposal-module-es5.js"}